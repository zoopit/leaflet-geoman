/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 19);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Mixins_Snapping__ = __webpack_require__(12);\n\nvar Draw = L.Class.extend({\n  includes: [__WEBPACK_IMPORTED_MODULE_0__Mixins_Snapping__[\"a\" /* default */]],\n  options: {\n    snappable: true,\n    snapDistance: 20,\n    tooltips: true,\n    cursorMarker: true,\n    finishOnDoubleClick: false,\n    finishOn: null,\n    allowSelfIntersection: true,\n    templineStyle: {},\n    hintlineStyle: {\n      color: '#3388ff',\n      dashArray: '5,5'\n    },\n    markerStyle: {\n      draggable: true\n    }\n  },\n  initialize: function initialize(map) {\n    var _this = this;\n\n    // save the map\n    this._map = map; // define all possible shapes that can be drawn\n\n    this.shapes = ['Marker', 'Line', 'Poly', 'Rectangle', 'Circle', 'Cut']; // initiate drawing class for our shapes\n\n    this.shapes.forEach(function (shape) {\n      _this[shape] = new L.PM.Draw[shape](_this._map);\n    });\n  },\n  setPathOptions: function setPathOptions(options) {\n    this.options.pathOptions = options;\n  },\n  getShapes: function getShapes() {\n    // if somebody wants to know what shapes are available\n    return this.shapes;\n  },\n  enable: function enable(shape, options) {\n    if (!shape) {\n      throw new Error(\"Error: Please pass a shape as a parameter. Possible shapes are: \".concat(this.getShapes().join(',')));\n    } // disable drawing for all shapes\n\n\n    this.disable(); // enable draw for a shape\n\n    this[shape].enable(options);\n  },\n  disable: function disable() {\n    var _this2 = this;\n\n    // there can only be one drawing mode active at a time on a map\n    // so it doesn't matter which one should be disabled.\n    // just disable all of them\n    this.shapes.forEach(function (shape) {\n      _this2[shape].disable();\n    });\n  },\n  addControls: function addControls() {\n    var _this3 = this;\n\n    // add control buttons for our shapes\n    this.shapes.forEach(function (shape) {\n      _this3[shape].addButton();\n    });\n  }\n});\n/* harmony default export */ __webpack_exports__[\"a\"] = (Draw);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9qcy9EcmF3L0wuUE0uRHJhdy5qcz9iMDE1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTbmFwTWl4aW4gZnJvbSAnLi4vTWl4aW5zL1NuYXBwaW5nJztcbnZhciBEcmF3ID0gTC5DbGFzcy5leHRlbmQoe1xuICBpbmNsdWRlczogW1NuYXBNaXhpbl0sXG4gIG9wdGlvbnM6IHtcbiAgICBzbmFwcGFibGU6IHRydWUsXG4gICAgc25hcERpc3RhbmNlOiAyMCxcbiAgICB0b29sdGlwczogdHJ1ZSxcbiAgICBjdXJzb3JNYXJrZXI6IHRydWUsXG4gICAgZmluaXNoT25Eb3VibGVDbGljazogZmFsc2UsXG4gICAgZmluaXNoT246IG51bGwsXG4gICAgYWxsb3dTZWxmSW50ZXJzZWN0aW9uOiB0cnVlLFxuICAgIHRlbXBsaW5lU3R5bGU6IHt9LFxuICAgIGhpbnRsaW5lU3R5bGU6IHtcbiAgICAgIGNvbG9yOiAnIzMzODhmZicsXG4gICAgICBkYXNoQXJyYXk6ICc1LDUnXG4gICAgfSxcbiAgICBtYXJrZXJTdHlsZToge1xuICAgICAgZHJhZ2dhYmxlOiB0cnVlXG4gICAgfVxuICB9LFxuICBpbml0aWFsaXplOiBmdW5jdGlvbiBpbml0aWFsaXplKG1hcCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAvLyBzYXZlIHRoZSBtYXBcbiAgICB0aGlzLl9tYXAgPSBtYXA7IC8vIGRlZmluZSBhbGwgcG9zc2libGUgc2hhcGVzIHRoYXQgY2FuIGJlIGRyYXduXG5cbiAgICB0aGlzLnNoYXBlcyA9IFsnTWFya2VyJywgJ0xpbmUnLCAnUG9seScsICdSZWN0YW5nbGUnLCAnQ2lyY2xlJywgJ0N1dCddOyAvLyBpbml0aWF0ZSBkcmF3aW5nIGNsYXNzIGZvciBvdXIgc2hhcGVzXG5cbiAgICB0aGlzLnNoYXBlcy5mb3JFYWNoKGZ1bmN0aW9uIChzaGFwZSkge1xuICAgICAgX3RoaXNbc2hhcGVdID0gbmV3IEwuUE0uRHJhd1tzaGFwZV0oX3RoaXMuX21hcCk7XG4gICAgfSk7XG4gIH0sXG4gIHNldFBhdGhPcHRpb25zOiBmdW5jdGlvbiBzZXRQYXRoT3B0aW9ucyhvcHRpb25zKSB7XG4gICAgdGhpcy5vcHRpb25zLnBhdGhPcHRpb25zID0gb3B0aW9ucztcbiAgfSxcbiAgZ2V0U2hhcGVzOiBmdW5jdGlvbiBnZXRTaGFwZXMoKSB7XG4gICAgLy8gaWYgc29tZWJvZHkgd2FudHMgdG8ga25vdyB3aGF0IHNoYXBlcyBhcmUgYXZhaWxhYmxlXG4gICAgcmV0dXJuIHRoaXMuc2hhcGVzO1xuICB9LFxuICBlbmFibGU6IGZ1bmN0aW9uIGVuYWJsZShzaGFwZSwgb3B0aW9ucykge1xuICAgIGlmICghc2hhcGUpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkVycm9yOiBQbGVhc2UgcGFzcyBhIHNoYXBlIGFzIGEgcGFyYW1ldGVyLiBQb3NzaWJsZSBzaGFwZXMgYXJlOiBcIi5jb25jYXQodGhpcy5nZXRTaGFwZXMoKS5qb2luKCcsJykpKTtcbiAgICB9IC8vIGRpc2FibGUgZHJhd2luZyBmb3IgYWxsIHNoYXBlc1xuXG5cbiAgICB0aGlzLmRpc2FibGUoKTsgLy8gZW5hYmxlIGRyYXcgZm9yIGEgc2hhcGVcblxuICAgIHRoaXNbc2hhcGVdLmVuYWJsZShvcHRpb25zKTtcbiAgfSxcbiAgZGlzYWJsZTogZnVuY3Rpb24gZGlzYWJsZSgpIHtcbiAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgIC8vIHRoZXJlIGNhbiBvbmx5IGJlIG9uZSBkcmF3aW5nIG1vZGUgYWN0aXZlIGF0IGEgdGltZSBvbiBhIG1hcFxuICAgIC8vIHNvIGl0IGRvZXNuJ3QgbWF0dGVyIHdoaWNoIG9uZSBzaG91bGQgYmUgZGlzYWJsZWQuXG4gICAgLy8ganVzdCBkaXNhYmxlIGFsbCBvZiB0aGVtXG4gICAgdGhpcy5zaGFwZXMuZm9yRWFjaChmdW5jdGlvbiAoc2hhcGUpIHtcbiAgICAgIF90aGlzMltzaGFwZV0uZGlzYWJsZSgpO1xuICAgIH0pO1xuICB9LFxuICBhZGRDb250cm9sczogZnVuY3Rpb24gYWRkQ29udHJvbHMoKSB7XG4gICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICAvLyBhZGQgY29udHJvbCBidXR0b25zIGZvciBvdXIgc2hhcGVzXG4gICAgdGhpcy5zaGFwZXMuZm9yRWFjaChmdW5jdGlvbiAoc2hhcGUpIHtcbiAgICAgIF90aGlzM1tzaGFwZV0uYWRkQnV0dG9uKCk7XG4gICAgfSk7XG4gIH1cbn0pO1xuZXhwb3J0IGRlZmF1bHQgRHJhdztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9qcy9EcmF3L0wuUE0uRHJhdy5qc1xuLy8gbW9kdWxlIGlkID0gMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Mixins_Snapping__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Mixins_Drag__ = __webpack_require__(36);\n\n\nvar Edit = L.Class.extend({\n  includes: [__WEBPACK_IMPORTED_MODULE_1__Mixins_Drag__[\"a\" /* default */], __WEBPACK_IMPORTED_MODULE_0__Mixins_Snapping__[\"a\" /* default */]],\n  options: {\n    snappable: true,\n    snapDistance: 20,\n    allowSelfIntersection: true,\n    draggable: true\n  },\n  isPolygon: function isPolygon() {\n    // if it's a polygon, it means the coordinates array is multi dimensional\n    return this._layer instanceof L.Polygon;\n  }\n});\n/* harmony default export */ __webpack_exports__[\"a\"] = (Edit);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9qcy9FZGl0L0wuUE0uRWRpdC5qcz8yYzg0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTbmFwTWl4aW4gZnJvbSAnLi4vTWl4aW5zL1NuYXBwaW5nJztcbmltcG9ydCBEcmFnTWl4aW4gZnJvbSAnLi4vTWl4aW5zL0RyYWcnO1xudmFyIEVkaXQgPSBMLkNsYXNzLmV4dGVuZCh7XG4gIGluY2x1ZGVzOiBbRHJhZ01peGluLCBTbmFwTWl4aW5dLFxuICBvcHRpb25zOiB7XG4gICAgc25hcHBhYmxlOiB0cnVlLFxuICAgIHNuYXBEaXN0YW5jZTogMjAsXG4gICAgYWxsb3dTZWxmSW50ZXJzZWN0aW9uOiB0cnVlLFxuICAgIGRyYWdnYWJsZTogdHJ1ZVxuICB9LFxuICBpc1BvbHlnb246IGZ1bmN0aW9uIGlzUG9seWdvbigpIHtcbiAgICAvLyBpZiBpdCdzIGEgcG9seWdvbiwgaXQgbWVhbnMgdGhlIGNvb3JkaW5hdGVzIGFycmF5IGlzIG11bHRpIGRpbWVuc2lvbmFsXG4gICAgcmV0dXJuIHRoaXMuX2xheWVyIGluc3RhbmNlb2YgTC5Qb2x5Z29uO1xuICB9XG59KTtcbmV4cG9ydCBkZWZhdWx0IEVkaXQ7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvRWRpdC9MLlBNLkVkaXQuanNcbi8vIG1vZHVsZSBpZCA9IDFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @module helpers\n */\n/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n *\n * @memberof helpers\n * @type {number}\n */\nexports.earthRadius = 6371008.8;\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.factors = {\n    centimeters: exports.earthRadius * 100,\n    centimetres: exports.earthRadius * 100,\n    degrees: exports.earthRadius / 111325,\n    feet: exports.earthRadius * 3.28084,\n    inches: exports.earthRadius * 39.370,\n    kilometers: exports.earthRadius / 1000,\n    kilometres: exports.earthRadius / 1000,\n    meters: exports.earthRadius,\n    metres: exports.earthRadius,\n    miles: exports.earthRadius / 1609.344,\n    millimeters: exports.earthRadius * 1000,\n    millimetres: exports.earthRadius * 1000,\n    nauticalmiles: exports.earthRadius / 1852,\n    radians: 1,\n    yards: exports.earthRadius / 1.0936,\n};\n/**\n * Units of measurement factors based on 1 meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.unitsFactors = {\n    centimeters: 100,\n    centimetres: 100,\n    degrees: 1 / 111325,\n    feet: 3.28084,\n    inches: 39.370,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    meters: 1,\n    metres: 1,\n    miles: 1 / 1609.344,\n    millimeters: 1000,\n    millimetres: 1000,\n    nauticalmiles: 1 / 1852,\n    radians: 1 / exports.earthRadius,\n    yards: 1 / 1.0936,\n};\n/**\n * Area of measurement factors based on 1 square meter.\n *\n * @memberof helpers\n * @type {Object}\n */\nexports.areaFactors = {\n    acres: 0.000247105,\n    centimeters: 10000,\n    centimetres: 10000,\n    feet: 10.763910417,\n    inches: 1550.003100006,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    meters: 1,\n    metres: 1,\n    miles: 3.86e-7,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    yards: 1.195990046,\n};\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geom, properties, options) {\n    if (options === void 0) { options = {}; }\n    var feat = { type: \"Feature\" };\n    if (options.id === 0 || options.id) {\n        feat.id = options.id;\n    }\n    if (options.bbox) {\n        feat.bbox = options.bbox;\n    }\n    feat.properties = properties || {};\n    feat.geometry = geom;\n    return feat;\n}\nexports.feature = feature;\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<any>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = \"Point\";\n * var coordinates = [110, 50];\n * var geometry = turf.geometry(type, coordinates);\n * // => geometry\n */\nfunction geometry(type, coordinates, options) {\n    if (options === void 0) { options = {}; }\n    switch (type) {\n        case \"Point\": return point(coordinates).geometry;\n        case \"LineString\": return lineString(coordinates).geometry;\n        case \"Polygon\": return polygon(coordinates).geometry;\n        case \"MultiPoint\": return multiPoint(coordinates).geometry;\n        case \"MultiLineString\": return multiLineString(coordinates).geometry;\n        case \"MultiPolygon\": return multiPolygon(coordinates).geometry;\n        default: throw new Error(type + \" is invalid\");\n    }\n}\nexports.geometry = geometry;\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"Point\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.point = point;\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\nexports.points = points;\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    for (var _i = 0, coordinates_1 = coordinates; _i < coordinates_1.length; _i++) {\n        var ring = coordinates_1[_i];\n        if (ring.length < 4) {\n            throw new Error(\"Each LinearRing of a Polygon must have 4 or more Positions.\");\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error(\"First and last Position are not equivalent.\");\n            }\n        }\n    }\n    var geom = {\n        type: \"Polygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.polygon = polygon;\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\nexports.polygons = polygons;\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    if (coordinates.length < 2) {\n        throw new Error(\"coordinates must be an array of two or more positions\");\n    }\n    var geom = {\n        type: \"LineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.lineString = lineString;\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north]\n * associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\nexports.lineStrings = lineStrings;\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    if (options === void 0) { options = {}; }\n    var fc = { type: \"FeatureCollection\" };\n    if (options.id) {\n        fc.id = options.id;\n    }\n    if (options.bbox) {\n        fc.bbox = options.bbox;\n    }\n    fc.features = features;\n    return fc;\n}\nexports.featureCollection = featureCollection;\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiLineString\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiLineString = multiLineString;\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPoint\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPoint = multiPoint;\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"MultiPolygon\",\n        coordinates: coordinates,\n    };\n    return feature(geom, properties, options);\n}\nexports.multiPolygon = multiPolygon;\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = turf.geometry(\"Point\", [100, 0]);\n * var line = turf.geometry(\"LineString\", [[101, 0], [102, 1]]);\n * var collection = turf.geometryCollection([pt, line]);\n *\n * // => collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (options === void 0) { options = {}; }\n    var geom = {\n        type: \"GeometryCollection\",\n        geometries: geometries,\n    };\n    return feature(geom, properties, options);\n}\nexports.geometryCollection = geometryCollection;\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (precision === void 0) { precision = 0; }\n    if (precision && !(precision >= 0)) {\n        throw new Error(\"precision must be a positive number\");\n    }\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\nexports.round = round;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return radians * factor;\n}\nexports.radiansToLength = radiansToLength;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (units === void 0) { units = \"kilometers\"; }\n    var factor = exports.factors[units];\n    if (!factor) {\n        throw new Error(units + \" units is invalid\");\n    }\n    return distance / factor;\n}\nexports.lengthToRadians = lengthToRadians;\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units=\"kilometers\"] can be degrees, radians, miles, or kilometers inches, yards, metres,\n * meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\nexports.lengthToDegrees = lengthToDegrees;\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    var angle = bearing % 360;\n    if (angle < 0) {\n        angle += 360;\n    }\n    return angle;\n}\nexports.bearingToAzimuth = bearingToAzimuth;\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\nexports.radiansToDegrees = radiansToDegrees;\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\nexports.degreesToRadians = degreesToRadians;\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {Units} [originalUnit=\"kilometers\"] of the length\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"kilometers\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(length >= 0)) {\n        throw new Error(\"length must be a positive number\");\n    }\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit);\n}\nexports.convertLength = convertLength;\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {Units} [originalUnit=\"meters\"] of the distance\n * @param {Units} [finalUnit=\"kilometers\"] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (originalUnit === void 0) { originalUnit = \"meters\"; }\n    if (finalUnit === void 0) { finalUnit = \"kilometers\"; }\n    if (!(area >= 0)) {\n        throw new Error(\"area must be a positive number\");\n    }\n    var startFactor = exports.areaFactors[originalUnit];\n    if (!startFactor) {\n        throw new Error(\"invalid original units\");\n    }\n    var finalFactor = exports.areaFactors[finalUnit];\n    if (!finalFactor) {\n        throw new Error(\"invalid final units\");\n    }\n    return (area / startFactor) * finalFactor;\n}\nexports.convertArea = convertArea;\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num) && !/^\\s*$/.test(num);\n}\nexports.isNumber = isNumber;\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\nexports.isObject = isObject;\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) {\n        throw new Error(\"bbox is required\");\n    }\n    if (!Array.isArray(bbox)) {\n        throw new Error(\"bbox must be an Array\");\n    }\n    if (bbox.length !== 4 && bbox.length !== 6) {\n        throw new Error(\"bbox must be an Array of 4 or 6 numbers\");\n    }\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) {\n            throw new Error(\"bbox must only contain numbers\");\n        }\n    });\n}\nexports.validateBBox = validateBBox;\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) {\n        throw new Error(\"id is required\");\n    }\n    if ([\"string\", \"number\"].indexOf(typeof id) === -1) {\n        throw new Error(\"id must be a number or a string\");\n    }\n}\nexports.validateId = validateId;\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error(\"method has been renamed to `radiansToDegrees`\");\n}\nexports.radians2degrees = radians2degrees;\nfunction degrees2radians() {\n    throw new Error(\"method has been renamed to `degreesToRadians`\");\n}\nexports.degrees2radians = degrees2radians;\nfunction distanceToDegrees() {\n    throw new Error(\"method has been renamed to `lengthToDegrees`\");\n}\nexports.distanceToDegrees = distanceToDegrees;\nfunction distanceToRadians() {\n    throw new Error(\"method has been renamed to `lengthToRadians`\");\n}\nexports.distanceToRadians = distanceToRadians;\nfunction radiansToDistance() {\n    throw new Error(\"method has been renamed to `radiansToLength`\");\n}\nexports.radiansToDistance = radiansToDistance;\nfunction bearingToAngle() {\n    throw new Error(\"method has been renamed to `bearingToAzimuth`\");\n}\nexports.bearingToAngle = bearingToAngle;\nfunction convertDistance() {\n    throw new Error(\"method has been renamed to `convertLength`\");\n}\nexports.convertDistance = convertDistance;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

eval("var getNative = __webpack_require__(17);\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX25hdGl2ZUNyZWF0ZS5qcz83NDI2Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBnZXROYXRpdmUgPSByZXF1aXJlKCcuL19nZXROYXRpdmUnKTtcblxuLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgdGhhdCBhcmUgdmVyaWZpZWQgdG8gYmUgbmF0aXZlLiAqL1xudmFyIG5hdGl2ZUNyZWF0ZSA9IGdldE5hdGl2ZShPYmplY3QsICdjcmVhdGUnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBuYXRpdmVDcmVhdGU7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX25hdGl2ZUNyZWF0ZS5qc1xuLy8gbW9kdWxlIGlkID0gM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n");

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

eval("var eq = __webpack_require__(69);\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Fzc29jSW5kZXhPZi5qcz84YTYwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBlcSA9IHJlcXVpcmUoJy4vZXEnKTtcblxuLyoqXG4gKiBHZXRzIHRoZSBpbmRleCBhdCB3aGljaCB0aGUgYGtleWAgaXMgZm91bmQgaW4gYGFycmF5YCBvZiBrZXktdmFsdWUgcGFpcnMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBpbnNwZWN0LlxuICogQHBhcmFtIHsqfSBrZXkgVGhlIGtleSB0byBzZWFyY2ggZm9yLlxuICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgaW5kZXggb2YgdGhlIG1hdGNoZWQgdmFsdWUsIGVsc2UgYC0xYC5cbiAqL1xuZnVuY3Rpb24gYXNzb2NJbmRleE9mKGFycmF5LCBrZXkpIHtcbiAgdmFyIGxlbmd0aCA9IGFycmF5Lmxlbmd0aDtcbiAgd2hpbGUgKGxlbmd0aC0tKSB7XG4gICAgaWYgKGVxKGFycmF5W2xlbmd0aF1bMF0sIGtleSkpIHtcbiAgICAgIHJldHVybiBsZW5ndGg7XG4gICAgfVxuICB9XG4gIHJldHVybiAtMTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBhc3NvY0luZGV4T2Y7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Fzc29jSW5kZXhPZi5qc1xuLy8gbW9kdWxlIGlkID0gNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4\n");

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

eval("var isKeyable = __webpack_require__(75);\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldE1hcERhdGEuanM/YTUzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaXNLZXlhYmxlID0gcmVxdWlyZSgnLi9faXNLZXlhYmxlJyk7XG5cbi8qKlxuICogR2V0cyB0aGUgZGF0YSBmb3IgYG1hcGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBtYXAgVGhlIG1hcCB0byBxdWVyeS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIHJlZmVyZW5jZSBrZXkuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgbWFwIGRhdGEuXG4gKi9cbmZ1bmN0aW9uIGdldE1hcERhdGEobWFwLCBrZXkpIHtcbiAgdmFyIGRhdGEgPSBtYXAuX19kYXRhX187XG4gIHJldHVybiBpc0tleWFibGUoa2V5KVxuICAgID8gZGF0YVt0eXBlb2Yga2V5ID09ICdzdHJpbmcnID8gJ3N0cmluZycgOiAnaGFzaCddXG4gICAgOiBkYXRhLm1hcDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXRNYXBEYXRhO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXRNYXBEYXRhLmpzXG4vLyBtb2R1bGUgaWQgPSA1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5\n");

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * martinez v0.4.3\n * Martinez polygon clipping algorithm, does boolean operation on polygons (multipolygons, polygons with holes etc): intersection, union, difference, xor\n *\n * @author Alex Milevski <info@w8r.name>\n * @license MIT\n * @preserve\n */\n\n(function (global, factory) {\n   true ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.martinez = {})));\n}(this, (function (exports) { 'use strict';\n\n  function DEFAULT_COMPARE (a, b) { return a > b ? 1 : a < b ? -1 : 0; }\n\n  var SplayTree = function SplayTree(compare, noDuplicates) {\n    if ( compare === void 0 ) compare = DEFAULT_COMPARE;\n    if ( noDuplicates === void 0 ) noDuplicates = false;\n\n    this._compare = compare;\n    this._root = null;\n    this._size = 0;\n    this._noDuplicates = !!noDuplicates;\n  };\n\n  var prototypeAccessors = { size: { configurable: true } };\n\n\n  SplayTree.prototype.rotateLeft = function rotateLeft (x) {\n    var y = x.right;\n    if (y) {\n      x.right = y.left;\n      if (y.left) { y.left.parent = x; }\n      y.parent = x.parent;\n    }\n\n    if (!x.parent)              { this._root = y; }\n    else if (x === x.parent.left) { x.parent.left = y; }\n    else                        { x.parent.right = y; }\n    if (y) { y.left = x; }\n    x.parent = y;\n  };\n\n\n  SplayTree.prototype.rotateRight = function rotateRight (x) {\n    var y = x.left;\n    if (y) {\n      x.left = y.right;\n      if (y.right) { y.right.parent = x; }\n      y.parent = x.parent;\n    }\n\n    if (!x.parent)             { this._root = y; }\n    else if(x === x.parent.left) { x.parent.left = y; }\n    else                       { x.parent.right = y; }\n    if (y) { y.right = x; }\n    x.parent = y;\n  };\n\n\n  SplayTree.prototype._splay = function _splay (x) {\n      var this$1 = this;\n\n    while (x.parent) {\n      var p = x.parent;\n      if (!p.parent) {\n        if (p.left === x) { this$1.rotateRight(p); }\n        else            { this$1.rotateLeft(p); }\n      } else if (p.left === x && p.parent.left === p) {\n        this$1.rotateRight(p.parent);\n        this$1.rotateRight(p);\n      } else if (p.right === x && p.parent.right === p) {\n        this$1.rotateLeft(p.parent);\n        this$1.rotateLeft(p);\n      } else if (p.left === x && p.parent.right === p) {\n        this$1.rotateRight(p);\n        this$1.rotateLeft(p);\n      } else {\n        this$1.rotateLeft(p);\n        this$1.rotateRight(p);\n      }\n    }\n  };\n\n\n  SplayTree.prototype.splay = function splay (x) {\n      var this$1 = this;\n\n    var p, gp, ggp, l, r;\n\n    while (x.parent) {\n      p = x.parent;\n      gp = p.parent;\n\n      if (gp && gp.parent) {\n        ggp = gp.parent;\n        if (ggp.left === gp) { ggp.left= x; }\n        else               { ggp.right = x; }\n        x.parent = ggp;\n      } else {\n        x.parent = null;\n        this$1._root = x;\n      }\n\n      l = x.left; r = x.right;\n\n      if (x === p.left) { // left\n        if (gp) {\n          if (gp.left === p) {\n            /* zig-zig */\n            if (p.right) {\n              gp.left = p.right;\n              gp.left.parent = gp;\n            } else { gp.left = null; }\n\n            p.right = gp;\n            gp.parent = p;\n          } else {\n            /* zig-zag */\n            if (l) {\n              gp.right = l;\n              l.parent = gp;\n            } else { gp.right = null; }\n\n            x.left  = gp;\n            gp.parent = x;\n          }\n        }\n        if (r) {\n          p.left = r;\n          r.parent = p;\n        } else { p.left = null; }\n\n        x.right= p;\n        p.parent = x;\n      } else { // right\n        if (gp) {\n          if (gp.right === p) {\n            /* zig-zig */\n            if (p.left) {\n              gp.right = p.left;\n              gp.right.parent = gp;\n            } else { gp.right = null; }\n\n            p.left = gp;\n            gp.parent = p;\n          } else {\n            /* zig-zag */\n            if (r) {\n              gp.left = r;\n              r.parent = gp;\n            } else { gp.left = null; }\n\n            x.right = gp;\n            gp.parent = x;\n          }\n        }\n        if (l) {\n          p.right = l;\n          l.parent = p;\n        } else { p.right = null; }\n\n        x.left = p;\n        p.parent = x;\n      }\n    }\n  };\n\n\n  SplayTree.prototype.replace = function replace (u, v) {\n    if (!u.parent) { this._root = v; }\n    else if (u === u.parent.left) { u.parent.left = v; }\n    else { u.parent.right = v; }\n    if (v) { v.parent = u.parent; }\n  };\n\n\n  SplayTree.prototype.minNode = function minNode (u) {\n      if ( u === void 0 ) u = this._root;\n\n    if (u) { while (u.left) { u = u.left; } }\n    return u;\n  };\n\n\n  SplayTree.prototype.maxNode = function maxNode (u) {\n      if ( u === void 0 ) u = this._root;\n\n    if (u) { while (u.right) { u = u.right; } }\n    return u;\n  };\n\n\n  SplayTree.prototype.insert = function insert (key, data) {\n    var z = this._root;\n    var p = null;\n    var comp = this._compare;\n    var cmp;\n\n    if (this._noDuplicates) {\n      while (z) {\n        p = z;\n        cmp = comp(z.key, key);\n        if (cmp === 0) { return; }\n        else if (comp(z.key, key) < 0) { z = z.right; }\n        else { z = z.left; }\n      }\n    } else {\n      while (z) {\n        p = z;\n        if (comp(z.key, key) < 0) { z = z.right; }\n        else { z = z.left; }\n      }\n    }\n\n    z = { key: key, data: data, left: null, right: null, parent: p };\n\n    if (!p)                        { this._root = z; }\n    else if (comp(p.key, z.key) < 0) { p.right = z; }\n    else                           { p.left= z; }\n\n    this.splay(z);\n    this._size++;\n    return z;\n  };\n\n\n  SplayTree.prototype.find = function find (key) {\n    var z  = this._root;\n    var comp = this._compare;\n    while (z) {\n      var cmp = comp(z.key, key);\n      if    (cmp < 0) { z = z.right; }\n      else if (cmp > 0) { z = z.left; }\n      else            { return z; }\n    }\n    return null;\n  };\n\n  /**\n   * Whether the tree contains a node with the given key\n   * @param{Key} key\n   * @return {boolean} true/false\n   */\n  SplayTree.prototype.contains = function contains (key) {\n    var node     = this._root;\n    var comparator = this._compare;\n    while (node){\n      var cmp = comparator(key, node.key);\n      if    (cmp === 0) { return true; }\n      else if (cmp < 0) { node = node.left; }\n      else              { node = node.right; }\n    }\n\n    return false;\n  };\n\n\n  SplayTree.prototype.remove = function remove (key) {\n    var z = this.find(key);\n\n    if (!z) { return false; }\n\n    this.splay(z);\n\n    if (!z.left) { this.replace(z, z.right); }\n    else if (!z.right) { this.replace(z, z.left); }\n    else {\n      var y = this.minNode(z.right);\n      if (y.parent !== z) {\n        this.replace(y, y.right);\n        y.right = z.right;\n        y.right.parent = y;\n      }\n      this.replace(z, y);\n      y.left = z.left;\n      y.left.parent = y;\n    }\n\n    this._size--;\n    return true;\n  };\n\n\n  SplayTree.prototype.removeNode = function removeNode (z) {\n    if (!z) { return false; }\n\n    this.splay(z);\n\n    if (!z.left) { this.replace(z, z.right); }\n    else if (!z.right) { this.replace(z, z.left); }\n    else {\n      var y = this.minNode(z.right);\n      if (y.parent !== z) {\n        this.replace(y, y.right);\n        y.right = z.right;\n        y.right.parent = y;\n      }\n      this.replace(z, y);\n      y.left = z.left;\n      y.left.parent = y;\n    }\n\n    this._size--;\n    return true;\n  };\n\n\n  SplayTree.prototype.erase = function erase (key) {\n    var z = this.find(key);\n    if (!z) { return; }\n\n    this.splay(z);\n\n    var s = z.left;\n    var t = z.right;\n\n    var sMax = null;\n    if (s) {\n      s.parent = null;\n      sMax = this.maxNode(s);\n      this.splay(sMax);\n      this._root = sMax;\n    }\n    if (t) {\n      if (s) { sMax.right = t; }\n      else { this._root = t; }\n      t.parent = sMax;\n    }\n\n    this._size--;\n  };\n\n  /**\n   * Removes and returns the node with smallest key\n   * @return {?Node}\n   */\n  SplayTree.prototype.pop = function pop () {\n    var node = this._root, returnValue = null;\n    if (node) {\n      while (node.left) { node = node.left; }\n      returnValue = { key: node.key, data: node.data };\n      this.remove(node.key);\n    }\n    return returnValue;\n  };\n\n\n  /* eslint-disable class-methods-use-this */\n\n  /**\n   * Successor node\n   * @param{Node} node\n   * @return {?Node}\n   */\n  SplayTree.prototype.next = function next (node) {\n    var successor = node;\n    if (successor) {\n      if (successor.right) {\n        successor = successor.right;\n        while (successor && successor.left) { successor = successor.left; }\n      } else {\n        successor = node.parent;\n        while (successor && successor.right === node) {\n          node = successor; successor = successor.parent;\n        }\n      }\n    }\n    return successor;\n  };\n\n\n  /**\n   * Predecessor node\n   * @param{Node} node\n   * @return {?Node}\n   */\n  SplayTree.prototype.prev = function prev (node) {\n    var predecessor = node;\n    if (predecessor) {\n      if (predecessor.left) {\n        predecessor = predecessor.left;\n        while (predecessor && predecessor.right) { predecessor = predecessor.right; }\n      } else {\n        predecessor = node.parent;\n        while (predecessor && predecessor.left === node) {\n          node = predecessor;\n          predecessor = predecessor.parent;\n        }\n      }\n    }\n    return predecessor;\n  };\n  /* eslint-enable class-methods-use-this */\n\n\n  /**\n   * @param{forEachCallback} callback\n   * @return {SplayTree}\n   */\n  SplayTree.prototype.forEach = function forEach (callback) {\n    var current = this._root;\n    var s = [], done = false, i = 0;\n\n    while (!done) {\n      // Reach the left most Node of the current Node\n      if (current) {\n        // Place pointer to a tree node on the stack\n        // before traversing the node's left subtree\n        s.push(current);\n        current = current.left;\n      } else {\n        // BackTrack from the empty subtree and visit the Node\n        // at the top of the stack; however, if the stack is\n        // empty you are done\n        if (s.length > 0) {\n          current = s.pop();\n          callback(current, i++);\n\n          // We have visited the node and its left\n          // subtree. Now, it's right subtree's turn\n          current = current.right;\n        } else { done = true; }\n      }\n    }\n    return this;\n  };\n\n\n  /**\n   * Walk key range from `low` to `high`. Stops if `fn` returns a value.\n   * @param{Key}    low\n   * @param{Key}    high\n   * @param{Function} fn\n   * @param{*?}     ctx\n   * @return {SplayTree}\n   */\n  SplayTree.prototype.range = function range (low, high, fn, ctx) {\n      var this$1 = this;\n\n    var Q = [];\n    var compare = this._compare;\n    var node = this._root, cmp;\n\n    while (Q.length !== 0 || node) {\n      if (node) {\n        Q.push(node);\n        node = node.left;\n      } else {\n        node = Q.pop();\n        cmp = compare(node.key, high);\n        if (cmp > 0) {\n          break;\n        } else if (compare(node.key, low) >= 0) {\n          if (fn.call(ctx, node)) { return this$1; } // stop if smth is returned\n        }\n        node = node.right;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Returns all keys in order\n   * @return {Array<Key>}\n   */\n  SplayTree.prototype.keys = function keys () {\n    var current = this._root;\n    var s = [], r = [], done = false;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          r.push(current.key);\n          current = current.right;\n        } else { done = true; }\n      }\n    }\n    return r;\n  };\n\n\n  /**\n   * Returns `data` fields of all nodes in order.\n   * @return {Array<Value>}\n   */\n  SplayTree.prototype.values = function values () {\n    var current = this._root;\n    var s = [], r = [], done = false;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          r.push(current.data);\n          current = current.right;\n        } else { done = true; }\n      }\n    }\n    return r;\n  };\n\n\n  /**\n   * Returns node at given index\n   * @param{number} index\n   * @return {?Node}\n   */\n  SplayTree.prototype.at = function at (index) {\n    // removed after a consideration, more misleading than useful\n    // index = index % this.size;\n    // if (index < 0) index = this.size - index;\n\n    var current = this._root;\n    var s = [], done = false, i = 0;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          if (i === index) { return current; }\n          i++;\n          current = current.right;\n        } else { done = true; }\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Bulk-load items. Both array have to be same size\n   * @param{Array<Key>}  keys\n   * @param{Array<Value>}[values]\n   * @param{Boolean}     [presort=false] Pre-sort keys and values, using\n   *                                       tree's comparator. Sorting is done\n   *                                       in-place\n   * @return {AVLTree}\n   */\n  SplayTree.prototype.load = function load (keys, values, presort) {\n      if ( keys === void 0 ) keys = [];\n      if ( values === void 0 ) values = [];\n      if ( presort === void 0 ) presort = false;\n\n    if (this._size !== 0) { throw new Error('bulk-load: tree is not empty'); }\n    var size = keys.length;\n    if (presort) { sort(keys, values, 0, size - 1, this._compare); }\n    this._root = loadRecursive(null, keys, values, 0, size);\n    this._size = size;\n    return this;\n  };\n\n\n  SplayTree.prototype.min = function min () {\n    var node = this.minNode(this._root);\n    if (node) { return node.key; }\n    else    { return null; }\n  };\n\n\n  SplayTree.prototype.max = function max () {\n    var node = this.maxNode(this._root);\n    if (node) { return node.key; }\n    else    { return null; }\n  };\n\n  SplayTree.prototype.isEmpty = function isEmpty () { return this._root === null; };\n  prototypeAccessors.size.get = function () { return this._size; };\n\n\n  /**\n   * Create a tree and load it with items\n   * @param{Array<Key>}        keys\n   * @param{Array<Value>?}      [values]\n\n   * @param{Function?}          [comparator]\n   * @param{Boolean?}           [presort=false] Pre-sort keys and values, using\n   *                                             tree's comparator. Sorting is done\n   *                                             in-place\n   * @param{Boolean?}           [noDuplicates=false] Allow duplicates\n   * @return {SplayTree}\n   */\n  SplayTree.createTree = function createTree (keys, values, comparator, presort, noDuplicates) {\n    return new SplayTree(comparator, noDuplicates).load(keys, values, presort);\n  };\n\n  Object.defineProperties( SplayTree.prototype, prototypeAccessors );\n\n\n  function loadRecursive (parent, keys, values, start, end) {\n    var size = end - start;\n    if (size > 0) {\n      var middle = start + Math.floor(size / 2);\n      var key    = keys[middle];\n      var data   = values[middle];\n      var node   = { key: key, data: data, parent: parent };\n      node.left    = loadRecursive(node, keys, values, start, middle);\n      node.right   = loadRecursive(node, keys, values, middle + 1, end);\n      return node;\n    }\n    return null;\n  }\n\n\n  function sort(keys, values, left, right, compare) {\n    if (left >= right) { return; }\n\n    var pivot = keys[(left + right) >> 1];\n    var i = left - 1;\n    var j = right + 1;\n\n    while (true) {\n      do { i++; } while (compare(keys[i], pivot) < 0);\n      do { j--; } while (compare(keys[j], pivot) > 0);\n      if (i >= j) { break; }\n\n      var tmp = keys[i];\n      keys[i] = keys[j];\n      keys[j] = tmp;\n\n      tmp = values[i];\n      values[i] = values[j];\n      values[j] = tmp;\n    }\n\n    sort(keys, values,  left,     j, compare);\n    sort(keys, values, j + 1, right, compare);\n  }\n\n  var NORMAL               = 0;\n  var NON_CONTRIBUTING     = 1;\n  var SAME_TRANSITION      = 2;\n  var DIFFERENT_TRANSITION = 3;\n\n  var INTERSECTION = 0;\n  var UNION        = 1;\n  var DIFFERENCE   = 2;\n  var XOR          = 3;\n\n  /**\n   * @param  {SweepEvent} event\n   * @param  {SweepEvent} prev\n   * @param  {Operation} operation\n   */\n  function computeFields (event, prev, operation) {\n    // compute inOut and otherInOut fields\n    if (prev === null) {\n      event.inOut      = false;\n      event.otherInOut = true;\n\n    // previous line segment in sweepline belongs to the same polygon\n    } else {\n      if (event.isSubject === prev.isSubject) {\n        event.inOut      = !prev.inOut;\n        event.otherInOut = prev.otherInOut;\n\n      // previous line segment in sweepline belongs to the clipping polygon\n      } else {\n        event.inOut      = !prev.otherInOut;\n        event.otherInOut = prev.isVertical() ? !prev.inOut : prev.inOut;\n      }\n\n      // compute prevInResult field\n      if (prev) {\n        event.prevInResult = (!inResult(prev, operation) || prev.isVertical())\n          ? prev.prevInResult : prev;\n      }\n    }\n\n    // check if the line segment belongs to the Boolean operation\n    event.inResult = inResult(event, operation);\n  }\n\n\n  /* eslint-disable indent */\n  function inResult(event, operation) {\n    switch (event.type) {\n      case NORMAL:\n        switch (operation) {\n          case INTERSECTION:\n            return !event.otherInOut;\n          case UNION:\n            return event.otherInOut;\n          case DIFFERENCE:\n            // return (event.isSubject && !event.otherInOut) ||\n            //         (!event.isSubject && event.otherInOut);\n            return (event.isSubject && event.otherInOut) ||\n                    (!event.isSubject && !event.otherInOut);\n          case XOR:\n            return true;\n        }\n        break;\n      case SAME_TRANSITION:\n        return operation === INTERSECTION || operation === UNION;\n      case DIFFERENT_TRANSITION:\n        return operation === DIFFERENCE;\n      case NON_CONTRIBUTING:\n        return false;\n    }\n    return false;\n  }\n  /* eslint-enable indent */\n\n  var SweepEvent = function SweepEvent (point, left, otherEvent, isSubject, edgeType) {\n\n    /**\n     * Is left endpoint?\n     * @type {Boolean}\n     */\n    this.left = left;\n\n    /**\n     * @type {Array.<Number>}\n     */\n    this.point = point;\n\n    /**\n     * Other edge reference\n     * @type {SweepEvent}\n     */\n    this.otherEvent = otherEvent;\n\n    /**\n     * Belongs to source or clipping polygon\n     * @type {Boolean}\n     */\n    this.isSubject = isSubject;\n\n    /**\n     * Edge contribution type\n     * @type {Number}\n     */\n    this.type = edgeType || NORMAL;\n\n\n    /**\n     * In-out transition for the sweepline crossing polygon\n     * @type {Boolean}\n     */\n    this.inOut = false;\n\n\n    /**\n     * @type {Boolean}\n     */\n    this.otherInOut = false;\n\n    /**\n     * Previous event in result?\n     * @type {SweepEvent}\n     */\n    this.prevInResult = null;\n\n    /**\n     * Does event belong to result?\n     * @type {Boolean}\n     */\n    this.inResult = false;\n\n\n    // connection step\n\n    /**\n     * @type {Boolean}\n     */\n    this.resultInOut = false;\n\n    this.isExteriorRing = true;\n  };\n\n\n  /**\n   * @param{Array.<Number>}p\n   * @return {Boolean}\n   */\n  SweepEvent.prototype.isBelow = function isBelow (p) {\n    var p0 = this.point, p1 = this.otherEvent.point;\n    return this.left\n      ? (p0[0] - p[0]) * (p1[1] - p[1]) - (p1[0] - p[0]) * (p0[1] - p[1]) > 0\n      // signedArea(this.point, this.otherEvent.point, p) > 0 :\n      : (p1[0] - p[0]) * (p0[1] - p[1]) - (p0[0] - p[0]) * (p1[1] - p[1]) > 0;\n      //signedArea(this.otherEvent.point, this.point, p) > 0;\n  };\n\n\n  /**\n   * @param{Array.<Number>}p\n   * @return {Boolean}\n   */\n  SweepEvent.prototype.isAbove = function isAbove (p) {\n    return !this.isBelow(p);\n  };\n\n\n  /**\n   * @return {Boolean}\n   */\n  SweepEvent.prototype.isVertical = function isVertical () {\n    return this.point[0] === this.otherEvent.point[0];\n  };\n\n\n  SweepEvent.prototype.clone = function clone () {\n    var copy = new SweepEvent(\n      this.point, this.left, this.otherEvent, this.isSubject, this.type);\n\n    copy.inResult     = this.inResult;\n    copy.prevInResult = this.prevInResult;\n    copy.isExteriorRing = this.isExteriorRing;\n    copy.inOut        = this.inOut;\n    copy.otherInOut   = this.otherInOut;\n\n    return copy;\n  };\n\n  function equals(p1, p2) {\n    if (p1[0] === p2[0]) {\n      if (p1[1] === p2[1]) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    return false;\n  }\n\n  // const EPSILON = 1e-9;\n  // const abs = Math.abs;\n  // TODO https://github.com/w8r/martinez/issues/6#issuecomment-262847164\n  // Precision problem.\n  //\n  // module.exports = function equals(p1, p2) {\n  //   return abs(p1[0] - p2[0]) <= EPSILON && abs(p1[1] - p2[1]) <= EPSILON;\n  // };\n\n  /**\n   * Signed area of the triangle (p0, p1, p2)\n   * @param  {Array.<Number>} p0\n   * @param  {Array.<Number>} p1\n   * @param  {Array.<Number>} p2\n   * @return {Number}\n   */\n  function signedArea(p0, p1, p2) {\n    return (p0[0] - p2[0]) * (p1[1] - p2[1]) - (p1[0] - p2[0]) * (p0[1] - p2[1]);\n  }\n\n  /**\n   * @param  {SweepEvent} e1\n   * @param  {SweepEvent} e2\n   * @return {Number}\n   */\n  function compareEvents(e1, e2) {\n    var p1 = e1.point;\n    var p2 = e2.point;\n\n    // Different x-coordinate\n    if (p1[0] > p2[0]) { return 1; }\n    if (p1[0] < p2[0]) { return -1; }\n\n    // Different points, but same x-coordinate\n    // Event with lower y-coordinate is processed first\n    if (p1[1] !== p2[1]) { return p1[1] > p2[1] ? 1 : -1; }\n\n    return specialCases(e1, e2, p1, p2);\n  }\n\n\n  /* eslint-disable no-unused-vars */\n  function specialCases(e1, e2, p1, p2) {\n    // Same coordinates, but one is a left endpoint and the other is\n    // a right endpoint. The right endpoint is processed first\n    if (e1.left !== e2.left)\n      { return e1.left ? 1 : -1; }\n\n    // const p2 = e1.otherEvent.point, p3 = e2.otherEvent.point;\n    // const sa = (p1[0] - p3[0]) * (p2[1] - p3[1]) - (p2[0] - p3[0]) * (p1[1] - p3[1])\n    // Same coordinates, both events\n    // are left endpoints or right endpoints.\n    // not collinear\n    if (signedArea(p1, e1.otherEvent.point, e2.otherEvent.point) !== 0) {\n      // the event associate to the bottom segment is processed first\n      return (!e1.isBelow(e2.otherEvent.point)) ? 1 : -1;\n    }\n\n    return (!e1.isSubject && e2.isSubject) ? 1 : -1;\n  }\n  /* eslint-enable no-unused-vars */\n\n  /**\n   * @param  {SweepEvent} se\n   * @param  {Array.<Number>} p\n   * @param  {Queue} queue\n   * @return {Queue}\n   */\n  function divideSegment(se, p, queue)  {\n    var r = new SweepEvent(p, false, se,            se.isSubject);\n    var l = new SweepEvent(p, true,  se.otherEvent, se.isSubject);\n\n    /* eslint-disable no-console */\n    if (equals(se.point, se.otherEvent.point)) {\n\n      console.warn('what is that, a collapsed segment?', se);\n    }\n    /* eslint-enable no-console */\n\n    r.contourId = l.contourId = se.contourId;\n\n    // avoid a rounding error. The left event would be processed after the right event\n    if (compareEvents(l, se.otherEvent) > 0) {\n      se.otherEvent.left = true;\n      l.left = false;\n    }\n\n    // avoid a rounding error. The left event would be processed after the right event\n    // if (compareEvents(se, r) > 0) {}\n\n    se.otherEvent.otherEvent = l;\n    se.otherEvent = r;\n\n    queue.push(l);\n    queue.push(r);\n\n    return queue;\n  }\n\n  //const EPS = 1e-9;\n\n  /**\n   * Finds the magnitude of the cross product of two vectors (if we pretend\n   * they're in three dimensions)\n   *\n   * @param {Object} a First vector\n   * @param {Object} b Second vector\n   * @private\n   * @returns {Number} The magnitude of the cross product\n   */\n  function crossProduct(a, b) {\n    return (a[0] * b[1]) - (a[1] * b[0]);\n  }\n\n  /**\n   * Finds the dot product of two vectors.\n   *\n   * @param {Object} a First vector\n   * @param {Object} b Second vector\n   * @private\n   * @returns {Number} The dot product\n   */\n  function dotProduct(a, b) {\n    return (a[0] * b[0]) + (a[1] * b[1]);\n  }\n\n  /**\n   * Finds the intersection (if any) between two line segments a and b, given the\n   * line segments' end points a1, a2 and b1, b2.\n   *\n   * This algorithm is based on Schneider and Eberly.\n   * http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf\n   * Page 244.\n   *\n   * @param {Array.<Number>} a1 point of first line\n   * @param {Array.<Number>} a2 point of first line\n   * @param {Array.<Number>} b1 point of second line\n   * @param {Array.<Number>} b2 point of second line\n   * @param {Boolean=}       noEndpointTouch whether to skip single touchpoints\n   *                                         (meaning connected segments) as\n   *                                         intersections\n   * @returns {Array.<Array.<Number>>|Null} If the lines intersect, the point of\n   * intersection. If they overlap, the two end points of the overlapping segment.\n   * Otherwise, null.\n   */\n  function intersection (a1, a2, b1, b2, noEndpointTouch) {\n    // The algorithm expects our lines in the form P + sd, where P is a point,\n    // s is on the interval [0, 1], and d is a vector.\n    // We are passed two points. P can be the first point of each pair. The\n    // vector, then, could be thought of as the distance (in x and y components)\n    // from the first point to the second point.\n    // So first, let's make our vectors:\n    var va = [a2[0] - a1[0], a2[1] - a1[1]];\n    var vb = [b2[0] - b1[0], b2[1] - b1[1]];\n    // We also define a function to convert back to regular point form:\n\n    /* eslint-disable arrow-body-style */\n\n    function toPoint(p, s, d) {\n      return [\n        p[0] + s * d[0],\n        p[1] + s * d[1]\n      ];\n    }\n\n    /* eslint-enable arrow-body-style */\n\n    // The rest is pretty much a straight port of the algorithm.\n    var e = [b1[0] - a1[0], b1[1] - a1[1]];\n    var kross    = crossProduct(va, vb);\n    var sqrKross = kross * kross;\n    var sqrLenA  = dotProduct(va, va);\n    //const sqrLenB  = dotProduct(vb, vb);\n\n    // Check for line intersection. This works because of the properties of the\n    // cross product -- specifically, two vectors are parallel if and only if the\n    // cross product is the 0 vector. The full calculation involves relative error\n    // to account for possible very small line segments. See Schneider & Eberly\n    // for details.\n    if (sqrKross > 0/* EPS * sqrLenB * sqLenA */) {\n      // If they're not parallel, then (because these are line segments) they\n      // still might not actually intersect. This code checks that the\n      // intersection point of the lines is actually on both line segments.\n      var s = crossProduct(e, vb) / kross;\n      if (s < 0 || s > 1) {\n        // not on line segment a\n        return null;\n      }\n      var t = crossProduct(e, va) / kross;\n      if (t < 0 || t > 1) {\n        // not on line segment b\n        return null;\n      }\n      if (s === 0 || s === 1) {\n        // on an endpoint of line segment a\n        return noEndpointTouch ? null : [toPoint(a1, s, va)];\n      }\n      if (t === 0 || t === 1) {\n        // on an endpoint of line segment b\n        return noEndpointTouch ? null : [toPoint(b1, t, vb)];\n      }\n      return [toPoint(a1, s, va)];\n    }\n\n    // If we've reached this point, then the lines are either parallel or the\n    // same, but the segments could overlap partially or fully, or not at all.\n    // So we need to find the overlap, if any. To do that, we can use e, which is\n    // the (vector) difference between the two initial points. If this is parallel\n    // with the line itself, then the two lines are the same line, and there will\n    // be overlap.\n    //const sqrLenE = dotProduct(e, e);\n    kross = crossProduct(e, va);\n    sqrKross = kross * kross;\n\n    if (sqrKross > 0 /* EPS * sqLenB * sqLenE */) {\n    // Lines are just parallel, not the same. No overlap.\n      return null;\n    }\n\n    var sa = dotProduct(va, e) / sqrLenA;\n    var sb = sa + dotProduct(va, vb) / sqrLenA;\n    var smin = Math.min(sa, sb);\n    var smax = Math.max(sa, sb);\n\n    // this is, essentially, the FindIntersection acting on floats from\n    // Schneider & Eberly, just inlined into this function.\n    if (smin <= 1 && smax >= 0) {\n\n      // overlap on an end point\n      if (smin === 1) {\n        return noEndpointTouch ? null : [toPoint(a1, smin > 0 ? smin : 0, va)];\n      }\n\n      if (smax === 0) {\n        return noEndpointTouch ? null : [toPoint(a1, smax < 1 ? smax : 1, va)];\n      }\n\n      if (noEndpointTouch && smin === 0 && smax === 1) { return null; }\n\n      // There's overlap on a segment -- two points of intersection. Return both.\n      return [\n        toPoint(a1, smin > 0 ? smin : 0, va),\n        toPoint(a1, smax < 1 ? smax : 1, va)\n      ];\n    }\n\n    return null;\n  }\n\n  /**\n   * @param  {SweepEvent} se1\n   * @param  {SweepEvent} se2\n   * @param  {Queue}      queue\n   * @return {Number}\n   */\n  function possibleIntersection (se1, se2, queue) {\n    // that disallows self-intersecting polygons,\n    // did cost us half a day, so I'll leave it\n    // out of respect\n    // if (se1.isSubject === se2.isSubject) return;\n    var inter = intersection(\n      se1.point, se1.otherEvent.point,\n      se2.point, se2.otherEvent.point\n    );\n\n    var nintersections = inter ? inter.length : 0;\n    if (nintersections === 0) { return 0; } // no intersection\n\n    // the line segments intersect at an endpoint of both line segments\n    if ((nintersections === 1) &&\n        (equals(se1.point, se2.point) ||\n         equals(se1.otherEvent.point, se2.otherEvent.point))) {\n      return 0;\n    }\n\n    if (nintersections === 2 && se1.isSubject === se2.isSubject) {\n      // if(se1.contourId === se2.contourId){\n      // console.warn('Edges of the same polygon overlap',\n      //   se1.point, se1.otherEvent.point, se2.point, se2.otherEvent.point);\n      // }\n      //throw new Error('Edges of the same polygon overlap');\n      return 0;\n    }\n\n    // The line segments associated to se1 and se2 intersect\n    if (nintersections === 1) {\n\n      // if the intersection point is not an endpoint of se1\n      if (!equals(se1.point, inter[0]) && !equals(se1.otherEvent.point, inter[0])) {\n        divideSegment(se1, inter[0], queue);\n      }\n\n      // if the intersection point is not an endpoint of se2\n      if (!equals(se2.point, inter[0]) && !equals(se2.otherEvent.point, inter[0])) {\n        divideSegment(se2, inter[0], queue);\n      }\n      return 1;\n    }\n\n    // The line segments associated to se1 and se2 overlap\n    var events        = [];\n    var leftCoincide  = false;\n    var rightCoincide = false;\n\n    if (equals(se1.point, se2.point)) {\n      leftCoincide = true; // linked\n    } else if (compareEvents(se1, se2) === 1) {\n      events.push(se2, se1);\n    } else {\n      events.push(se1, se2);\n    }\n\n    if (equals(se1.otherEvent.point, se2.otherEvent.point)) {\n      rightCoincide = true;\n    } else if (compareEvents(se1.otherEvent, se2.otherEvent) === 1) {\n      events.push(se2.otherEvent, se1.otherEvent);\n    } else {\n      events.push(se1.otherEvent, se2.otherEvent);\n    }\n\n    if ((leftCoincide && rightCoincide) || leftCoincide) {\n      // both line segments are equal or share the left endpoint\n      se2.type = NON_CONTRIBUTING;\n      se1.type = (se2.inOut === se1.inOut)\n        ? SAME_TRANSITION : DIFFERENT_TRANSITION;\n\n      if (leftCoincide && !rightCoincide) {\n        // honestly no idea, but changing events selection from [2, 1]\n        // to [0, 1] fixes the overlapping self-intersecting polygons issue\n        divideSegment(events[1].otherEvent, events[0].point, queue);\n      }\n      return 2;\n    }\n\n    // the line segments share the right endpoint\n    if (rightCoincide) {\n      divideSegment(events[0], events[1].point, queue);\n      return 3;\n    }\n\n    // no line segment includes totally the other one\n    if (events[0] !== events[3].otherEvent) {\n      divideSegment(events[0], events[1].point, queue);\n      divideSegment(events[1], events[2].point, queue);\n      return 3;\n    }\n\n    // one line segment includes the other one\n    divideSegment(events[0], events[1].point, queue);\n    divideSegment(events[3].otherEvent, events[2].point, queue);\n\n    return 3;\n  }\n\n  /**\n   * @param  {SweepEvent} le1\n   * @param  {SweepEvent} le2\n   * @return {Number}\n   */\n  function compareSegments(le1, le2) {\n    if (le1 === le2) { return 0; }\n\n    // Segments are not collinear\n    if (signedArea(le1.point, le1.otherEvent.point, le2.point) !== 0 ||\n      signedArea(le1.point, le1.otherEvent.point, le2.otherEvent.point) !== 0) {\n\n      // If they share their left endpoint use the right endpoint to sort\n      if (equals(le1.point, le2.point)) { return le1.isBelow(le2.otherEvent.point) ? -1 : 1; }\n\n      // Different left endpoint: use the left endpoint to sort\n      if (le1.point[0] === le2.point[0]) { return le1.point[1] < le2.point[1] ? -1 : 1; }\n\n      // has the line segment associated to e1 been inserted\n      // into S after the line segment associated to e2 ?\n      if (compareEvents(le1, le2) === 1) { return le2.isAbove(le1.point) ? -1 : 1; }\n\n      // The line segment associated to e2 has been inserted\n      // into S after the line segment associated to e1\n      return le1.isBelow(le2.point) ? -1 : 1;\n    }\n\n    if (le1.isSubject === le2.isSubject) { // same polygon\n      var p1 = le1.point, p2 = le2.point;\n      if (p1[0] === p2[0] && p1[1] === p2[1]/*equals(le1.point, le2.point)*/) {\n        p1 = le1.otherEvent.point; p2 = le2.otherEvent.point;\n        if (p1[0] === p2[0] && p1[1] === p2[1]) { return 0; }\n        else { return le1.contourId > le2.contourId ? 1 : -1; }\n      }\n    } else { // Segments are collinear, but belong to separate polygons\n      return le1.isSubject ? -1 : 1;\n    }\n\n    return compareEvents(le1, le2) === 1 ? 1 : -1;\n  }\n\n  function subdivide(eventQueue, subject, clipping, sbbox, cbbox, operation) {\n    var sweepLine = new SplayTree(compareSegments);\n    var sortedEvents = [];\n\n    var rightbound = Math.min(sbbox[2], cbbox[2]);\n\n    var prev, next, begin;\n\n    while (eventQueue.length !== 0) {\n      var event = eventQueue.pop();\n      sortedEvents.push(event);\n\n      // optimization by bboxes for intersection and difference goes here\n      if ((operation === INTERSECTION && event.point[0] > rightbound) ||\n          (operation === DIFFERENCE   && event.point[0] > sbbox[2])) {\n        break;\n      }\n\n      if (event.left) {\n        next  = prev = sweepLine.insert(event);\n        begin = sweepLine.minNode();\n\n        if (prev !== begin) { prev = sweepLine.prev(prev); }\n        else                { prev = null; }\n\n        next = sweepLine.next(next);\n\n        var prevEvent = prev ? prev.key : null;\n        var prevprevEvent = (void 0);\n        computeFields(event, prevEvent, operation);\n        if (next) {\n          if (possibleIntersection(event, next.key, eventQueue) === 2) {\n            computeFields(event, prevEvent, operation);\n            computeFields(event, next.key, operation);\n          }\n        }\n\n        if (prev) {\n          if (possibleIntersection(prev.key, event, eventQueue) === 2) {\n            var prevprev = prev;\n            if (prevprev !== begin) { prevprev = sweepLine.prev(prevprev); }\n            else                    { prevprev = null; }\n\n            prevprevEvent = prevprev ? prevprev.key : null;\n            computeFields(prevEvent, prevprevEvent, operation);\n            computeFields(event,     prevEvent,     operation);\n          }\n        }\n      } else {\n        event = event.otherEvent;\n        next = prev = sweepLine.find(event);\n\n        if (prev && next) {\n\n          if (prev !== begin) { prev = sweepLine.prev(prev); }\n          else                { prev = null; }\n\n          next = sweepLine.next(next);\n          sweepLine.remove(event);\n\n          if (next && prev) {\n            possibleIntersection(prev.key, next.key, eventQueue);\n          }\n        }\n      }\n    }\n    return sortedEvents;\n  }\n\n  /**\n   * @param  {Array.<SweepEvent>} sortedEvents\n   * @return {Array.<SweepEvent>}\n   */\n  function orderEvents(sortedEvents) {\n    var event, i, len, tmp;\n    var resultEvents = [];\n    for (i = 0, len = sortedEvents.length; i < len; i++) {\n      event = sortedEvents[i];\n      if ((event.left && event.inResult) ||\n        (!event.left && event.otherEvent.inResult)) {\n        resultEvents.push(event);\n      }\n    }\n    // Due to overlapping edges the resultEvents array can be not wholly sorted\n    var sorted = false;\n    while (!sorted) {\n      sorted = true;\n      for (i = 0, len = resultEvents.length; i < len; i++) {\n        if ((i + 1) < len &&\n          compareEvents(resultEvents[i], resultEvents[i + 1]) === 1) {\n          tmp = resultEvents[i];\n          resultEvents[i] = resultEvents[i + 1];\n          resultEvents[i + 1] = tmp;\n          sorted = false;\n        }\n      }\n    }\n\n\n    for (i = 0, len = resultEvents.length; i < len; i++) {\n      event = resultEvents[i];\n      event.pos = i;\n    }\n\n    // imagine, the right event is found in the beginning of the queue,\n    // when his left counterpart is not marked yet\n    for (i = 0, len = resultEvents.length; i < len; i++) {\n      event = resultEvents[i];\n      if (!event.left) {\n        tmp = event.pos;\n        event.pos = event.otherEvent.pos;\n        event.otherEvent.pos = tmp;\n      }\n    }\n\n    return resultEvents;\n  }\n\n\n  /**\n   * @param  {Number} pos\n   * @param  {Array.<SweepEvent>} resultEvents\n   * @param  {Object>}    processed\n   * @return {Number}\n   */\n  function nextPos(pos, resultEvents, processed, origIndex) {\n    var newPos = pos + 1;\n    var length = resultEvents.length;\n    if (newPos > length - 1) { return pos - 1; }\n    var p  = resultEvents[pos].point;\n    var p1 = resultEvents[newPos].point;\n\n\n    // while in range and not the current one by value\n    while (newPos < length && p1[0] === p[0] && p1[1] === p[1]) {\n      if (!processed[newPos]) {\n        return newPos;\n      } else   {\n        newPos++;\n      }\n      p1 = resultEvents[newPos].point;\n    }\n\n    newPos = pos - 1;\n\n    while (processed[newPos] && newPos >= origIndex) {\n      newPos--;\n    }\n    return newPos;\n  }\n\n\n  /**\n   * @param  {Array.<SweepEvent>} sortedEvents\n   * @return {Array.<*>} polygons\n   */\n  function connectEdges(sortedEvents, operation) {\n    var i, len;\n    var resultEvents = orderEvents(sortedEvents);\n\n    // \"false\"-filled array\n    var processed = {};\n    var result = [];\n    var event;\n\n    for (i = 0, len = resultEvents.length; i < len; i++) {\n      if (processed[i]) { continue; }\n      var contour = [[]];\n\n      if (!resultEvents[i].isExteriorRing) {\n        if (operation === DIFFERENCE && !resultEvents[i].isSubject && result.length === 0) {\n          result.push(contour);\n        } else if (result.length === 0) {\n          result.push([[contour]]);\n        } else {\n          result[result.length - 1].push(contour[0]);\n        }\n      } else if (operation === DIFFERENCE && !resultEvents[i].isSubject && result.length > 1) {\n        result[result.length - 1].push(contour[0]);\n      } else {\n        result.push(contour);\n      }\n\n      var ringId = result.length - 1;\n      var pos = i;\n\n      var initial = resultEvents[i].point;\n      contour[0].push(initial);\n\n      while (pos >= i) {\n        event = resultEvents[pos];\n        processed[pos] = true;\n\n        if (event.left) {\n          event.resultInOut = false;\n          event.contourId   = ringId;\n        } else {\n          event.otherEvent.resultInOut = true;\n          event.otherEvent.contourId   = ringId;\n        }\n\n        pos = event.pos;\n        processed[pos] = true;\n        contour[0].push(resultEvents[pos].point);\n        pos = nextPos(pos, resultEvents, processed, i);\n      }\n\n      pos = pos === -1 ? i : pos;\n\n      event = resultEvents[pos];\n      processed[pos] = processed[event.pos] = true;\n      event.otherEvent.resultInOut = true;\n      event.otherEvent.contourId   = ringId;\n    }\n\n    // Handle if the result is a polygon (eg not multipoly)\n    // Commented it again, let's see what do we mean by that\n    // if (result.length === 1) result = result[0];\n    return result;\n  }\n\n  var tinyqueue = TinyQueue;\n  var default_1 = TinyQueue;\n\n  function TinyQueue(data, compare) {\n      var this$1 = this;\n\n      if (!(this instanceof TinyQueue)) { return new TinyQueue(data, compare); }\n\n      this.data = data || [];\n      this.length = this.data.length;\n      this.compare = compare || defaultCompare;\n\n      if (this.length > 0) {\n          for (var i = (this.length >> 1) - 1; i >= 0; i--) { this$1._down(i); }\n      }\n  }\n\n  function defaultCompare(a, b) {\n      return a < b ? -1 : a > b ? 1 : 0;\n  }\n\n  TinyQueue.prototype = {\n\n      push: function (item) {\n          this.data.push(item);\n          this.length++;\n          this._up(this.length - 1);\n      },\n\n      pop: function () {\n          if (this.length === 0) { return undefined; }\n\n          var top = this.data[0];\n          this.length--;\n\n          if (this.length > 0) {\n              this.data[0] = this.data[this.length];\n              this._down(0);\n          }\n          this.data.pop();\n\n          return top;\n      },\n\n      peek: function () {\n          return this.data[0];\n      },\n\n      _up: function (pos) {\n          var data = this.data;\n          var compare = this.compare;\n          var item = data[pos];\n\n          while (pos > 0) {\n              var parent = (pos - 1) >> 1;\n              var current = data[parent];\n              if (compare(item, current) >= 0) { break; }\n              data[pos] = current;\n              pos = parent;\n          }\n\n          data[pos] = item;\n      },\n\n      _down: function (pos) {\n          var this$1 = this;\n\n          var data = this.data;\n          var compare = this.compare;\n          var halfLength = this.length >> 1;\n          var item = data[pos];\n\n          while (pos < halfLength) {\n              var left = (pos << 1) + 1;\n              var right = left + 1;\n              var best = data[left];\n\n              if (right < this$1.length && compare(data[right], best) < 0) {\n                  left = right;\n                  best = data[right];\n              }\n              if (compare(best, item) >= 0) { break; }\n\n              data[pos] = best;\n              pos = left;\n          }\n\n          data[pos] = item;\n      }\n  };\n  tinyqueue.default = default_1;\n\n  var max = Math.max;\n  var min = Math.min;\n\n  var contourId = 0;\n\n\n  function processPolygon(contourOrHole, isSubject, depth, Q, bbox, isExteriorRing) {\n    var i, len, s1, s2, e1, e2;\n    for (i = 0, len = contourOrHole.length - 1; i < len; i++) {\n      s1 = contourOrHole[i];\n      s2 = contourOrHole[i + 1];\n      e1 = new SweepEvent(s1, false, undefined, isSubject);\n      e2 = new SweepEvent(s2, false, e1,        isSubject);\n      e1.otherEvent = e2;\n\n      if (s1[0] === s2[0] && s1[1] === s2[1]) {\n        continue; // skip collapsed edges, or it breaks\n      }\n\n      e1.contourId = e2.contourId = depth;\n      if (!isExteriorRing) {\n        e1.isExteriorRing = false;\n        e2.isExteriorRing = false;\n      }\n      if (compareEvents(e1, e2) > 0) {\n        e2.left = true;\n      } else {\n        e1.left = true;\n      }\n\n      var x = s1[0], y = s1[1];\n      bbox[0] = min(bbox[0], x);\n      bbox[1] = min(bbox[1], y);\n      bbox[2] = max(bbox[2], x);\n      bbox[3] = max(bbox[3], y);\n\n      // Pushing it so the queue is sorted from left to right,\n      // with object on the left having the highest priority.\n      Q.push(e1);\n      Q.push(e2);\n    }\n  }\n\n\n  function fillQueue(subject, clipping, sbbox, cbbox, operation) {\n    var eventQueue = new tinyqueue(null, compareEvents);\n    var polygonSet, isExteriorRing, i, ii, j, jj; //, k, kk;\n\n    for (i = 0, ii = subject.length; i < ii; i++) {\n      polygonSet = subject[i];\n      for (j = 0, jj = polygonSet.length; j < jj; j++) {\n        isExteriorRing = j === 0;\n        if (isExteriorRing) { contourId++; }\n        processPolygon(polygonSet[j], true, contourId, eventQueue, sbbox, isExteriorRing);\n      }\n    }\n\n    for (i = 0, ii = clipping.length; i < ii; i++) {\n      polygonSet = clipping[i];\n      for (j = 0, jj = polygonSet.length; j < jj; j++) {\n        isExteriorRing = j === 0;\n        if (operation === DIFFERENCE) { isExteriorRing = false; }\n        if (isExteriorRing) { contourId++; }\n        processPolygon(polygonSet[j], false, contourId, eventQueue, cbbox, isExteriorRing);\n      }\n    }\n\n    return eventQueue;\n  }\n\n  var EMPTY = [];\n\n\n  function trivialOperation(subject, clipping, operation) {\n    var result = null;\n    if (subject.length * clipping.length === 0) {\n      if        (operation === INTERSECTION) {\n        result = EMPTY;\n      } else if (operation === DIFFERENCE) {\n        result = subject;\n      } else if (operation === UNION ||\n                 operation === XOR) {\n        result = (subject.length === 0) ? clipping : subject;\n      }\n    }\n    return result;\n  }\n\n\n  function compareBBoxes(subject, clipping, sbbox, cbbox, operation) {\n    var result = null;\n    if (sbbox[0] > cbbox[2] ||\n        cbbox[0] > sbbox[2] ||\n        sbbox[1] > cbbox[3] ||\n        cbbox[1] > sbbox[3]) {\n      if        (operation === INTERSECTION) {\n        result = EMPTY;\n      } else if (operation === DIFFERENCE) {\n        result = subject;\n      } else if (operation === UNION ||\n                 operation === XOR) {\n        result = subject.concat(clipping);\n      }\n    }\n    return result;\n  }\n\n\n  function boolean(subject, clipping, operation) {\n    if (typeof subject[0][0][0] === 'number') {\n      subject = [subject];\n    }\n    if (typeof clipping[0][0][0] === 'number') {\n      clipping = [clipping];\n    }\n    var trivial = trivialOperation(subject, clipping, operation);\n    if (trivial) {\n      return trivial === EMPTY ? null : trivial;\n    }\n    var sbbox = [Infinity, Infinity, -Infinity, -Infinity];\n    var cbbox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    //console.time('fill queue');\n    var eventQueue = fillQueue(subject, clipping, sbbox, cbbox, operation);\n    //console.timeEnd('fill queue');\n\n    trivial = compareBBoxes(subject, clipping, sbbox, cbbox, operation);\n    if (trivial) {\n      return trivial === EMPTY ? null : trivial;\n    }\n    //console.time('subdivide edges');\n    var sortedEvents = subdivide(eventQueue, subject, clipping, sbbox, cbbox, operation);\n    //console.timeEnd('subdivide edges');\n\n    //console.time('connect vertices');\n    var result = connectEdges(sortedEvents, operation);\n    //console.timeEnd('connect vertices');\n    return result;\n  }\n\n  function union (subject, clipping) {\n    return boolean(subject, clipping, UNION);\n  }\n\n  function diff (subject, clipping) {\n    return boolean(subject, clipping, DIFFERENCE);\n  }\n\n  function xor (subject, clipping){\n    return boolean(subject, clipping, XOR);\n  }\n\n  function intersection$1 (subject, clipping) {\n    return boolean(subject, clipping, INTERSECTION);\n  }\n\n  /**\n   * @enum {Number}\n   */\n  var operations = { UNION: UNION, DIFFERENCE: DIFFERENCE, INTERSECTION: INTERSECTION, XOR: XOR };\n\n  exports.union = union;\n  exports.diff = diff;\n  exports.xor = xor;\n  exports.intersection = intersection$1;\n  exports.operations = operations;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=martinez.umd.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tYXJ0aW5lei1wb2x5Z29uLWNsaXBwaW5nL2Rpc3QvbWFydGluZXoudW1kLmpzPzE1YzQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBtYXJ0aW5leiB2MC40LjNcbiAqIE1hcnRpbmV6IHBvbHlnb24gY2xpcHBpbmcgYWxnb3JpdGhtLCBkb2VzIGJvb2xlYW4gb3BlcmF0aW9uIG9uIHBvbHlnb25zIChtdWx0aXBvbHlnb25zLCBwb2x5Z29ucyB3aXRoIGhvbGVzIGV0Yyk6IGludGVyc2VjdGlvbiwgdW5pb24sIGRpZmZlcmVuY2UsIHhvclxuICpcbiAqIEBhdXRob3IgQWxleCBNaWxldnNraSA8aW5mb0B3OHIubmFtZT5cbiAqIEBsaWNlbnNlIE1JVFxuICogQHByZXNlcnZlXG4gKi9cblxuKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHtcbiAgdHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnICYmIHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnID8gZmFjdG9yeShleHBvcnRzKSA6XG4gIHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCA/IGRlZmluZShbJ2V4cG9ydHMnXSwgZmFjdG9yeSkgOlxuICAoZmFjdG9yeSgoZ2xvYmFsLm1hcnRpbmV6ID0ge30pKSk7XG59KHRoaXMsIChmdW5jdGlvbiAoZXhwb3J0cykgeyAndXNlIHN0cmljdCc7XG5cbiAgZnVuY3Rpb24gREVGQVVMVF9DT01QQVJFIChhLCBiKSB7IHJldHVybiBhID4gYiA/IDEgOiBhIDwgYiA/IC0xIDogMDsgfVxuXG4gIHZhciBTcGxheVRyZWUgPSBmdW5jdGlvbiBTcGxheVRyZWUoY29tcGFyZSwgbm9EdXBsaWNhdGVzKSB7XG4gICAgaWYgKCBjb21wYXJlID09PSB2b2lkIDAgKSBjb21wYXJlID0gREVGQVVMVF9DT01QQVJFO1xuICAgIGlmICggbm9EdXBsaWNhdGVzID09PSB2b2lkIDAgKSBub0R1cGxpY2F0ZXMgPSBmYWxzZTtcblxuICAgIHRoaXMuX2NvbXBhcmUgPSBjb21wYXJlO1xuICAgIHRoaXMuX3Jvb3QgPSBudWxsO1xuICAgIHRoaXMuX3NpemUgPSAwO1xuICAgIHRoaXMuX25vRHVwbGljYXRlcyA9ICEhbm9EdXBsaWNhdGVzO1xuICB9O1xuXG4gIHZhciBwcm90b3R5cGVBY2Nlc3NvcnMgPSB7IHNpemU6IHsgY29uZmlndXJhYmxlOiB0cnVlIH0gfTtcblxuXG4gIFNwbGF5VHJlZS5wcm90b3R5cGUucm90YXRlTGVmdCA9IGZ1bmN0aW9uIHJvdGF0ZUxlZnQgKHgpIHtcbiAgICB2YXIgeSA9IHgucmlnaHQ7XG4gICAgaWYgKHkpIHtcbiAgICAgIHgucmlnaHQgPSB5LmxlZnQ7XG4gICAgICBpZiAoeS5sZWZ0KSB7IHkubGVmdC5wYXJlbnQgPSB4OyB9XG4gICAgICB5LnBhcmVudCA9IHgucGFyZW50O1xuICAgIH1cblxuICAgIGlmICgheC5wYXJlbnQpICAgICAgICAgICAgICB7IHRoaXMuX3Jvb3QgPSB5OyB9XG4gICAgZWxzZSBpZiAoeCA9PT0geC5wYXJlbnQubGVmdCkgeyB4LnBhcmVudC5sZWZ0ID0geTsgfVxuICAgIGVsc2UgICAgICAgICAgICAgICAgICAgICAgICB7IHgucGFyZW50LnJpZ2h0ID0geTsgfVxuICAgIGlmICh5KSB7IHkubGVmdCA9IHg7IH1cbiAgICB4LnBhcmVudCA9IHk7XG4gIH07XG5cblxuICBTcGxheVRyZWUucHJvdG90eXBlLnJvdGF0ZVJpZ2h0ID0gZnVuY3Rpb24gcm90YXRlUmlnaHQgKHgpIHtcbiAgICB2YXIgeSA9IHgubGVmdDtcbiAgICBpZiAoeSkge1xuICAgICAgeC5sZWZ0ID0geS5yaWdodDtcbiAgICAgIGlmICh5LnJpZ2h0KSB7IHkucmlnaHQucGFyZW50ID0geDsgfVxuICAgICAgeS5wYXJlbnQgPSB4LnBhcmVudDtcbiAgICB9XG5cbiAgICBpZiAoIXgucGFyZW50KSAgICAgICAgICAgICB7IHRoaXMuX3Jvb3QgPSB5OyB9XG4gICAgZWxzZSBpZih4ID09PSB4LnBhcmVudC5sZWZ0KSB7IHgucGFyZW50LmxlZnQgPSB5OyB9XG4gICAgZWxzZSAgICAgICAgICAgICAgICAgICAgICAgeyB4LnBhcmVudC5yaWdodCA9IHk7IH1cbiAgICBpZiAoeSkgeyB5LnJpZ2h0ID0geDsgfVxuICAgIHgucGFyZW50ID0geTtcbiAgfTtcblxuXG4gIFNwbGF5VHJlZS5wcm90b3R5cGUuX3NwbGF5ID0gZnVuY3Rpb24gX3NwbGF5ICh4KSB7XG4gICAgICB2YXIgdGhpcyQxID0gdGhpcztcblxuICAgIHdoaWxlICh4LnBhcmVudCkge1xuICAgICAgdmFyIHAgPSB4LnBhcmVudDtcbiAgICAgIGlmICghcC5wYXJlbnQpIHtcbiAgICAgICAgaWYgKHAubGVmdCA9PT0geCkgeyB0aGlzJDEucm90YXRlUmlnaHQocCk7IH1cbiAgICAgICAgZWxzZSAgICAgICAgICAgIHsgdGhpcyQxLnJvdGF0ZUxlZnQocCk7IH1cbiAgICAgIH0gZWxzZSBpZiAocC5sZWZ0ID09PSB4ICYmIHAucGFyZW50LmxlZnQgPT09IHApIHtcbiAgICAgICAgdGhpcyQxLnJvdGF0ZVJpZ2h0KHAucGFyZW50KTtcbiAgICAgICAgdGhpcyQxLnJvdGF0ZVJpZ2h0KHApO1xuICAgICAgfSBlbHNlIGlmIChwLnJpZ2h0ID09PSB4ICYmIHAucGFyZW50LnJpZ2h0ID09PSBwKSB7XG4gICAgICAgIHRoaXMkMS5yb3RhdGVMZWZ0KHAucGFyZW50KTtcbiAgICAgICAgdGhpcyQxLnJvdGF0ZUxlZnQocCk7XG4gICAgICB9IGVsc2UgaWYgKHAubGVmdCA9PT0geCAmJiBwLnBhcmVudC5yaWdodCA9PT0gcCkge1xuICAgICAgICB0aGlzJDEucm90YXRlUmlnaHQocCk7XG4gICAgICAgIHRoaXMkMS5yb3RhdGVMZWZ0KHApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcyQxLnJvdGF0ZUxlZnQocCk7XG4gICAgICAgIHRoaXMkMS5yb3RhdGVSaWdodChwKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cblxuICBTcGxheVRyZWUucHJvdG90eXBlLnNwbGF5ID0gZnVuY3Rpb24gc3BsYXkgKHgpIHtcbiAgICAgIHZhciB0aGlzJDEgPSB0aGlzO1xuXG4gICAgdmFyIHAsIGdwLCBnZ3AsIGwsIHI7XG5cbiAgICB3aGlsZSAoeC5wYXJlbnQpIHtcbiAgICAgIHAgPSB4LnBhcmVudDtcbiAgICAgIGdwID0gcC5wYXJlbnQ7XG5cbiAgICAgIGlmIChncCAmJiBncC5wYXJlbnQpIHtcbiAgICAgICAgZ2dwID0gZ3AucGFyZW50O1xuICAgICAgICBpZiAoZ2dwLmxlZnQgPT09IGdwKSB7IGdncC5sZWZ0PSB4OyB9XG4gICAgICAgIGVsc2UgICAgICAgICAgICAgICB7IGdncC5yaWdodCA9IHg7IH1cbiAgICAgICAgeC5wYXJlbnQgPSBnZ3A7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB4LnBhcmVudCA9IG51bGw7XG4gICAgICAgIHRoaXMkMS5fcm9vdCA9IHg7XG4gICAgICB9XG5cbiAgICAgIGwgPSB4LmxlZnQ7IHIgPSB4LnJpZ2h0O1xuXG4gICAgICBpZiAoeCA9PT0gcC5sZWZ0KSB7IC8vIGxlZnRcbiAgICAgICAgaWYgKGdwKSB7XG4gICAgICAgICAgaWYgKGdwLmxlZnQgPT09IHApIHtcbiAgICAgICAgICAgIC8qIHppZy16aWcgKi9cbiAgICAgICAgICAgIGlmIChwLnJpZ2h0KSB7XG4gICAgICAgICAgICAgIGdwLmxlZnQgPSBwLnJpZ2h0O1xuICAgICAgICAgICAgICBncC5sZWZ0LnBhcmVudCA9IGdwO1xuICAgICAgICAgICAgfSBlbHNlIHsgZ3AubGVmdCA9IG51bGw7IH1cblxuICAgICAgICAgICAgcC5yaWdodCA9IGdwO1xuICAgICAgICAgICAgZ3AucGFyZW50ID0gcDtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLyogemlnLXphZyAqL1xuICAgICAgICAgICAgaWYgKGwpIHtcbiAgICAgICAgICAgICAgZ3AucmlnaHQgPSBsO1xuICAgICAgICAgICAgICBsLnBhcmVudCA9IGdwO1xuICAgICAgICAgICAgfSBlbHNlIHsgZ3AucmlnaHQgPSBudWxsOyB9XG5cbiAgICAgICAgICAgIHgubGVmdCAgPSBncDtcbiAgICAgICAgICAgIGdwLnBhcmVudCA9IHg7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChyKSB7XG4gICAgICAgICAgcC5sZWZ0ID0gcjtcbiAgICAgICAgICByLnBhcmVudCA9IHA7XG4gICAgICAgIH0gZWxzZSB7IHAubGVmdCA9IG51bGw7IH1cblxuICAgICAgICB4LnJpZ2h0PSBwO1xuICAgICAgICBwLnBhcmVudCA9IHg7XG4gICAgICB9IGVsc2UgeyAvLyByaWdodFxuICAgICAgICBpZiAoZ3ApIHtcbiAgICAgICAgICBpZiAoZ3AucmlnaHQgPT09IHApIHtcbiAgICAgICAgICAgIC8qIHppZy16aWcgKi9cbiAgICAgICAgICAgIGlmIChwLmxlZnQpIHtcbiAgICAgICAgICAgICAgZ3AucmlnaHQgPSBwLmxlZnQ7XG4gICAgICAgICAgICAgIGdwLnJpZ2h0LnBhcmVudCA9IGdwO1xuICAgICAgICAgICAgfSBlbHNlIHsgZ3AucmlnaHQgPSBudWxsOyB9XG5cbiAgICAgICAgICAgIHAubGVmdCA9IGdwO1xuICAgICAgICAgICAgZ3AucGFyZW50ID0gcDtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLyogemlnLXphZyAqL1xuICAgICAgICAgICAgaWYgKHIpIHtcbiAgICAgICAgICAgICAgZ3AubGVmdCA9IHI7XG4gICAgICAgICAgICAgIHIucGFyZW50ID0gZ3A7XG4gICAgICAgICAgICB9IGVsc2UgeyBncC5sZWZ0ID0gbnVsbDsgfVxuXG4gICAgICAgICAgICB4LnJpZ2h0ID0gZ3A7XG4gICAgICAgICAgICBncC5wYXJlbnQgPSB4O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAobCkge1xuICAgICAgICAgIHAucmlnaHQgPSBsO1xuICAgICAgICAgIGwucGFyZW50ID0gcDtcbiAgICAgICAgfSBlbHNlIHsgcC5yaWdodCA9IG51bGw7IH1cblxuICAgICAgICB4LmxlZnQgPSBwO1xuICAgICAgICBwLnBhcmVudCA9IHg7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG5cbiAgU3BsYXlUcmVlLnByb3RvdHlwZS5yZXBsYWNlID0gZnVuY3Rpb24gcmVwbGFjZSAodSwgdikge1xuICAgIGlmICghdS5wYXJlbnQpIHsgdGhpcy5fcm9vdCA9IHY7IH1cbiAgICBlbHNlIGlmICh1ID09PSB1LnBhcmVudC5sZWZ0KSB7IHUucGFyZW50LmxlZnQgPSB2OyB9XG4gICAgZWxzZSB7IHUucGFyZW50LnJpZ2h0ID0gdjsgfVxuICAgIGlmICh2KSB7IHYucGFyZW50ID0gdS5wYXJlbnQ7IH1cbiAgfTtcblxuXG4gIFNwbGF5VHJlZS5wcm90b3R5cGUubWluTm9kZSA9IGZ1bmN0aW9uIG1pbk5vZGUgKHUpIHtcbiAgICAgIGlmICggdSA9PT0gdm9pZCAwICkgdSA9IHRoaXMuX3Jvb3Q7XG5cbiAgICBpZiAodSkgeyB3aGlsZSAodS5sZWZ0KSB7IHUgPSB1LmxlZnQ7IH0gfVxuICAgIHJldHVybiB1O1xuICB9O1xuXG5cbiAgU3BsYXlUcmVlLnByb3RvdHlwZS5tYXhOb2RlID0gZnVuY3Rpb24gbWF4Tm9kZSAodSkge1xuICAgICAgaWYgKCB1ID09PSB2b2lkIDAgKSB1ID0gdGhpcy5fcm9vdDtcblxuICAgIGlmICh1KSB7IHdoaWxlICh1LnJpZ2h0KSB7IHUgPSB1LnJpZ2h0OyB9IH1cbiAgICByZXR1cm4gdTtcbiAgfTtcblxuXG4gIFNwbGF5VHJlZS5wcm90b3R5cGUuaW5zZXJ0ID0gZnVuY3Rpb24gaW5zZXJ0IChrZXksIGRhdGEpIHtcbiAgICB2YXIgeiA9IHRoaXMuX3Jvb3Q7XG4gICAgdmFyIHAgPSBudWxsO1xuICAgIHZhciBjb21wID0gdGhpcy5fY29tcGFyZTtcbiAgICB2YXIgY21wO1xuXG4gICAgaWYgKHRoaXMuX25vRHVwbGljYXRlcykge1xuICAgICAgd2hpbGUgKHopIHtcbiAgICAgICAgcCA9IHo7XG4gICAgICAgIGNtcCA9IGNvbXAoei5rZXksIGtleSk7XG4gICAgICAgIGlmIChjbXAgPT09IDApIHsgcmV0dXJuOyB9XG4gICAgICAgIGVsc2UgaWYgKGNvbXAoei5rZXksIGtleSkgPCAwKSB7IHogPSB6LnJpZ2h0OyB9XG4gICAgICAgIGVsc2UgeyB6ID0gei5sZWZ0OyB9XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHdoaWxlICh6KSB7XG4gICAgICAgIHAgPSB6O1xuICAgICAgICBpZiAoY29tcCh6LmtleSwga2V5KSA8IDApIHsgeiA9IHoucmlnaHQ7IH1cbiAgICAgICAgZWxzZSB7IHogPSB6LmxlZnQ7IH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICB6ID0geyBrZXk6IGtleSwgZGF0YTogZGF0YSwgbGVmdDogbnVsbCwgcmlnaHQ6IG51bGwsIHBhcmVudDogcCB9O1xuXG4gICAgaWYgKCFwKSAgICAgICAgICAgICAgICAgICAgICAgIHsgdGhpcy5fcm9vdCA9IHo7IH1cbiAgICBlbHNlIGlmIChjb21wKHAua2V5LCB6LmtleSkgPCAwKSB7IHAucmlnaHQgPSB6OyB9XG4gICAgZWxzZSAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgcC5sZWZ0PSB6OyB9XG5cbiAgICB0aGlzLnNwbGF5KHopO1xuICAgIHRoaXMuX3NpemUrKztcbiAgICByZXR1cm4gejtcbiAgfTtcblxuXG4gIFNwbGF5VHJlZS5wcm90b3R5cGUuZmluZCA9IGZ1bmN0aW9uIGZpbmQgKGtleSkge1xuICAgIHZhciB6ICA9IHRoaXMuX3Jvb3Q7XG4gICAgdmFyIGNvbXAgPSB0aGlzLl9jb21wYXJlO1xuICAgIHdoaWxlICh6KSB7XG4gICAgICB2YXIgY21wID0gY29tcCh6LmtleSwga2V5KTtcbiAgICAgIGlmICAgIChjbXAgPCAwKSB7IHogPSB6LnJpZ2h0OyB9XG4gICAgICBlbHNlIGlmIChjbXAgPiAwKSB7IHogPSB6LmxlZnQ7IH1cbiAgICAgIGVsc2UgICAgICAgICAgICB7IHJldHVybiB6OyB9XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9O1xuXG4gIC8qKlxuICAgKiBXaGV0aGVyIHRoZSB0cmVlIGNvbnRhaW5zIGEgbm9kZSB3aXRoIHRoZSBnaXZlbiBrZXlcbiAgICogQHBhcmFte0tleX0ga2V5XG4gICAqIEByZXR1cm4ge2Jvb2xlYW59IHRydWUvZmFsc2VcbiAgICovXG4gIFNwbGF5VHJlZS5wcm90b3R5cGUuY29udGFpbnMgPSBmdW5jdGlvbiBjb250YWlucyAoa2V5KSB7XG4gICAgdmFyIG5vZGUgICAgID0gdGhpcy5fcm9vdDtcbiAgICB2YXIgY29tcGFyYXRvciA9IHRoaXMuX2NvbXBhcmU7XG4gICAgd2hpbGUgKG5vZGUpe1xuICAgICAgdmFyIGNtcCA9IGNvbXBhcmF0b3Ioa2V5LCBub2RlLmtleSk7XG4gICAgICBpZiAgICAoY21wID09PSAwKSB7IHJldHVybiB0cnVlOyB9XG4gICAgICBlbHNlIGlmIChjbXAgPCAwKSB7IG5vZGUgPSBub2RlLmxlZnQ7IH1cbiAgICAgIGVsc2UgICAgICAgICAgICAgIHsgbm9kZSA9IG5vZGUucmlnaHQ7IH1cbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2U7XG4gIH07XG5cblxuICBTcGxheVRyZWUucHJvdG90eXBlLnJlbW92ZSA9IGZ1bmN0aW9uIHJlbW92ZSAoa2V5KSB7XG4gICAgdmFyIHogPSB0aGlzLmZpbmQoa2V5KTtcblxuICAgIGlmICgheikgeyByZXR1cm4gZmFsc2U7IH1cblxuICAgIHRoaXMuc3BsYXkoeik7XG5cbiAgICBpZiAoIXoubGVmdCkgeyB0aGlzLnJlcGxhY2Uoeiwgei5yaWdodCk7IH1cbiAgICBlbHNlIGlmICghei5yaWdodCkgeyB0aGlzLnJlcGxhY2Uoeiwgei5sZWZ0KTsgfVxuICAgIGVsc2Uge1xuICAgICAgdmFyIHkgPSB0aGlzLm1pbk5vZGUoei5yaWdodCk7XG4gICAgICBpZiAoeS5wYXJlbnQgIT09IHopIHtcbiAgICAgICAgdGhpcy5yZXBsYWNlKHksIHkucmlnaHQpO1xuICAgICAgICB5LnJpZ2h0ID0gei5yaWdodDtcbiAgICAgICAgeS5yaWdodC5wYXJlbnQgPSB5O1xuICAgICAgfVxuICAgICAgdGhpcy5yZXBsYWNlKHosIHkpO1xuICAgICAgeS5sZWZ0ID0gei5sZWZ0O1xuICAgICAgeS5sZWZ0LnBhcmVudCA9IHk7XG4gICAgfVxuXG4gICAgdGhpcy5fc2l6ZS0tO1xuICAgIHJldHVybiB0cnVlO1xuICB9O1xuXG5cbiAgU3BsYXlUcmVlLnByb3RvdHlwZS5yZW1vdmVOb2RlID0gZnVuY3Rpb24gcmVtb3ZlTm9kZSAoeikge1xuICAgIGlmICgheikgeyByZXR1cm4gZmFsc2U7IH1cblxuICAgIHRoaXMuc3BsYXkoeik7XG5cbiAgICBpZiAoIXoubGVmdCkgeyB0aGlzLnJlcGxhY2Uoeiwgei5yaWdodCk7IH1cbiAgICBlbHNlIGlmICghei5yaWdodCkgeyB0aGlzLnJlcGxhY2Uoeiwgei5sZWZ0KTsgfVxuICAgIGVsc2Uge1xuICAgICAgdmFyIHkgPSB0aGlzLm1pbk5vZGUoei5yaWdodCk7XG4gICAgICBpZiAoeS5wYXJlbnQgIT09IHopIHtcbiAgICAgICAgdGhpcy5yZXBsYWNlKHksIHkucmlnaHQpO1xuICAgICAgICB5LnJpZ2h0ID0gei5yaWdodDtcbiAgICAgICAgeS5yaWdodC5wYXJlbnQgPSB5O1xuICAgICAgfVxuICAgICAgdGhpcy5yZXBsYWNlKHosIHkpO1xuICAgICAgeS5sZWZ0ID0gei5sZWZ0O1xuICAgICAgeS5sZWZ0LnBhcmVudCA9IHk7XG4gICAgfVxuXG4gICAgdGhpcy5fc2l6ZS0tO1xuICAgIHJldHVybiB0cnVlO1xuICB9O1xuXG5cbiAgU3BsYXlUcmVlLnByb3RvdHlwZS5lcmFzZSA9IGZ1bmN0aW9uIGVyYXNlIChrZXkpIHtcbiAgICB2YXIgeiA9IHRoaXMuZmluZChrZXkpO1xuICAgIGlmICgheikgeyByZXR1cm47IH1cblxuICAgIHRoaXMuc3BsYXkoeik7XG5cbiAgICB2YXIgcyA9IHoubGVmdDtcbiAgICB2YXIgdCA9IHoucmlnaHQ7XG5cbiAgICB2YXIgc01heCA9IG51bGw7XG4gICAgaWYgKHMpIHtcbiAgICAgIHMucGFyZW50ID0gbnVsbDtcbiAgICAgIHNNYXggPSB0aGlzLm1heE5vZGUocyk7XG4gICAgICB0aGlzLnNwbGF5KHNNYXgpO1xuICAgICAgdGhpcy5fcm9vdCA9IHNNYXg7XG4gICAgfVxuICAgIGlmICh0KSB7XG4gICAgICBpZiAocykgeyBzTWF4LnJpZ2h0ID0gdDsgfVxuICAgICAgZWxzZSB7IHRoaXMuX3Jvb3QgPSB0OyB9XG4gICAgICB0LnBhcmVudCA9IHNNYXg7XG4gICAgfVxuXG4gICAgdGhpcy5fc2l6ZS0tO1xuICB9O1xuXG4gIC8qKlxuICAgKiBSZW1vdmVzIGFuZCByZXR1cm5zIHRoZSBub2RlIHdpdGggc21hbGxlc3Qga2V5XG4gICAqIEByZXR1cm4gez9Ob2RlfVxuICAgKi9cbiAgU3BsYXlUcmVlLnByb3RvdHlwZS5wb3AgPSBmdW5jdGlvbiBwb3AgKCkge1xuICAgIHZhciBub2RlID0gdGhpcy5fcm9vdCwgcmV0dXJuVmFsdWUgPSBudWxsO1xuICAgIGlmIChub2RlKSB7XG4gICAgICB3aGlsZSAobm9kZS5sZWZ0KSB7IG5vZGUgPSBub2RlLmxlZnQ7IH1cbiAgICAgIHJldHVyblZhbHVlID0geyBrZXk6IG5vZGUua2V5LCBkYXRhOiBub2RlLmRhdGEgfTtcbiAgICAgIHRoaXMucmVtb3ZlKG5vZGUua2V5KTtcbiAgICB9XG4gICAgcmV0dXJuIHJldHVyblZhbHVlO1xuICB9O1xuXG5cbiAgLyogZXNsaW50LWRpc2FibGUgY2xhc3MtbWV0aG9kcy11c2UtdGhpcyAqL1xuXG4gIC8qKlxuICAgKiBTdWNjZXNzb3Igbm9kZVxuICAgKiBAcGFyYW17Tm9kZX0gbm9kZVxuICAgKiBAcmV0dXJuIHs/Tm9kZX1cbiAgICovXG4gIFNwbGF5VHJlZS5wcm90b3R5cGUubmV4dCA9IGZ1bmN0aW9uIG5leHQgKG5vZGUpIHtcbiAgICB2YXIgc3VjY2Vzc29yID0gbm9kZTtcbiAgICBpZiAoc3VjY2Vzc29yKSB7XG4gICAgICBpZiAoc3VjY2Vzc29yLnJpZ2h0KSB7XG4gICAgICAgIHN1Y2Nlc3NvciA9IHN1Y2Nlc3Nvci5yaWdodDtcbiAgICAgICAgd2hpbGUgKHN1Y2Nlc3NvciAmJiBzdWNjZXNzb3IubGVmdCkgeyBzdWNjZXNzb3IgPSBzdWNjZXNzb3IubGVmdDsgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc3VjY2Vzc29yID0gbm9kZS5wYXJlbnQ7XG4gICAgICAgIHdoaWxlIChzdWNjZXNzb3IgJiYgc3VjY2Vzc29yLnJpZ2h0ID09PSBub2RlKSB7XG4gICAgICAgICAgbm9kZSA9IHN1Y2Nlc3Nvcjsgc3VjY2Vzc29yID0gc3VjY2Vzc29yLnBhcmVudDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gc3VjY2Vzc29yO1xuICB9O1xuXG5cbiAgLyoqXG4gICAqIFByZWRlY2Vzc29yIG5vZGVcbiAgICogQHBhcmFte05vZGV9IG5vZGVcbiAgICogQHJldHVybiB7P05vZGV9XG4gICAqL1xuICBTcGxheVRyZWUucHJvdG90eXBlLnByZXYgPSBmdW5jdGlvbiBwcmV2IChub2RlKSB7XG4gICAgdmFyIHByZWRlY2Vzc29yID0gbm9kZTtcbiAgICBpZiAocHJlZGVjZXNzb3IpIHtcbiAgICAgIGlmIChwcmVkZWNlc3Nvci5sZWZ0KSB7XG4gICAgICAgIHByZWRlY2Vzc29yID0gcHJlZGVjZXNzb3IubGVmdDtcbiAgICAgICAgd2hpbGUgKHByZWRlY2Vzc29yICYmIHByZWRlY2Vzc29yLnJpZ2h0KSB7IHByZWRlY2Vzc29yID0gcHJlZGVjZXNzb3IucmlnaHQ7IH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHByZWRlY2Vzc29yID0gbm9kZS5wYXJlbnQ7XG4gICAgICAgIHdoaWxlIChwcmVkZWNlc3NvciAmJiBwcmVkZWNlc3Nvci5sZWZ0ID09PSBub2RlKSB7XG4gICAgICAgICAgbm9kZSA9IHByZWRlY2Vzc29yO1xuICAgICAgICAgIHByZWRlY2Vzc29yID0gcHJlZGVjZXNzb3IucGFyZW50O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBwcmVkZWNlc3NvcjtcbiAgfTtcbiAgLyogZXNsaW50LWVuYWJsZSBjbGFzcy1tZXRob2RzLXVzZS10aGlzICovXG5cblxuICAvKipcbiAgICogQHBhcmFte2ZvckVhY2hDYWxsYmFja30gY2FsbGJhY2tcbiAgICogQHJldHVybiB7U3BsYXlUcmVlfVxuICAgKi9cbiAgU3BsYXlUcmVlLnByb3RvdHlwZS5mb3JFYWNoID0gZnVuY3Rpb24gZm9yRWFjaCAoY2FsbGJhY2spIHtcbiAgICB2YXIgY3VycmVudCA9IHRoaXMuX3Jvb3Q7XG4gICAgdmFyIHMgPSBbXSwgZG9uZSA9IGZhbHNlLCBpID0gMDtcblxuICAgIHdoaWxlICghZG9uZSkge1xuICAgICAgLy8gUmVhY2ggdGhlIGxlZnQgbW9zdCBOb2RlIG9mIHRoZSBjdXJyZW50IE5vZGVcbiAgICAgIGlmIChjdXJyZW50KSB7XG4gICAgICAgIC8vIFBsYWNlIHBvaW50ZXIgdG8gYSB0cmVlIG5vZGUgb24gdGhlIHN0YWNrXG4gICAgICAgIC8vIGJlZm9yZSB0cmF2ZXJzaW5nIHRoZSBub2RlJ3MgbGVmdCBzdWJ0cmVlXG4gICAgICAgIHMucHVzaChjdXJyZW50KTtcbiAgICAgICAgY3VycmVudCA9IGN1cnJlbnQubGVmdDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIEJhY2tUcmFjayBmcm9tIHRoZSBlbXB0eSBzdWJ0cmVlIGFuZCB2aXNpdCB0aGUgTm9kZVxuICAgICAgICAvLyBhdCB0aGUgdG9wIG9mIHRoZSBzdGFjazsgaG93ZXZlciwgaWYgdGhlIHN0YWNrIGlzXG4gICAgICAgIC8vIGVtcHR5IHlvdSBhcmUgZG9uZVxuICAgICAgICBpZiAocy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgY3VycmVudCA9IHMucG9wKCk7XG4gICAgICAgICAgY2FsbGJhY2soY3VycmVudCwgaSsrKTtcblxuICAgICAgICAgIC8vIFdlIGhhdmUgdmlzaXRlZCB0aGUgbm9kZSBhbmQgaXRzIGxlZnRcbiAgICAgICAgICAvLyBzdWJ0cmVlLiBOb3csIGl0J3MgcmlnaHQgc3VidHJlZSdzIHR1cm5cbiAgICAgICAgICBjdXJyZW50ID0gY3VycmVudC5yaWdodDtcbiAgICAgICAgfSBlbHNlIHsgZG9uZSA9IHRydWU7IH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cblxuICAvKipcbiAgICogV2FsayBrZXkgcmFuZ2UgZnJvbSBgbG93YCB0byBgaGlnaGAuIFN0b3BzIGlmIGBmbmAgcmV0dXJucyBhIHZhbHVlLlxuICAgKiBAcGFyYW17S2V5fSAgICBsb3dcbiAgICogQHBhcmFte0tleX0gICAgaGlnaFxuICAgKiBAcGFyYW17RnVuY3Rpb259IGZuXG4gICAqIEBwYXJhbXsqP30gICAgIGN0eFxuICAgKiBAcmV0dXJuIHtTcGxheVRyZWV9XG4gICAqL1xuICBTcGxheVRyZWUucHJvdG90eXBlLnJhbmdlID0gZnVuY3Rpb24gcmFuZ2UgKGxvdywgaGlnaCwgZm4sIGN0eCkge1xuICAgICAgdmFyIHRoaXMkMSA9IHRoaXM7XG5cbiAgICB2YXIgUSA9IFtdO1xuICAgIHZhciBjb21wYXJlID0gdGhpcy5fY29tcGFyZTtcbiAgICB2YXIgbm9kZSA9IHRoaXMuX3Jvb3QsIGNtcDtcblxuICAgIHdoaWxlIChRLmxlbmd0aCAhPT0gMCB8fCBub2RlKSB7XG4gICAgICBpZiAobm9kZSkge1xuICAgICAgICBRLnB1c2gobm9kZSk7XG4gICAgICAgIG5vZGUgPSBub2RlLmxlZnQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBub2RlID0gUS5wb3AoKTtcbiAgICAgICAgY21wID0gY29tcGFyZShub2RlLmtleSwgaGlnaCk7XG4gICAgICAgIGlmIChjbXAgPiAwKSB7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH0gZWxzZSBpZiAoY29tcGFyZShub2RlLmtleSwgbG93KSA+PSAwKSB7XG4gICAgICAgICAgaWYgKGZuLmNhbGwoY3R4LCBub2RlKSkgeyByZXR1cm4gdGhpcyQxOyB9IC8vIHN0b3AgaWYgc210aCBpcyByZXR1cm5lZFxuICAgICAgICB9XG4gICAgICAgIG5vZGUgPSBub2RlLnJpZ2h0O1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuICAvKipcbiAgICogUmV0dXJucyBhbGwga2V5cyBpbiBvcmRlclxuICAgKiBAcmV0dXJuIHtBcnJheTxLZXk+fVxuICAgKi9cbiAgU3BsYXlUcmVlLnByb3RvdHlwZS5rZXlzID0gZnVuY3Rpb24ga2V5cyAoKSB7XG4gICAgdmFyIGN1cnJlbnQgPSB0aGlzLl9yb290O1xuICAgIHZhciBzID0gW10sIHIgPSBbXSwgZG9uZSA9IGZhbHNlO1xuXG4gICAgd2hpbGUgKCFkb25lKSB7XG4gICAgICBpZiAoY3VycmVudCkge1xuICAgICAgICBzLnB1c2goY3VycmVudCk7XG4gICAgICAgIGN1cnJlbnQgPSBjdXJyZW50LmxlZnQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAocy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgY3VycmVudCA9IHMucG9wKCk7XG4gICAgICAgICAgci5wdXNoKGN1cnJlbnQua2V5KTtcbiAgICAgICAgICBjdXJyZW50ID0gY3VycmVudC5yaWdodDtcbiAgICAgICAgfSBlbHNlIHsgZG9uZSA9IHRydWU7IH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHI7XG4gIH07XG5cblxuICAvKipcbiAgICogUmV0dXJucyBgZGF0YWAgZmllbGRzIG9mIGFsbCBub2RlcyBpbiBvcmRlci5cbiAgICogQHJldHVybiB7QXJyYXk8VmFsdWU+fVxuICAgKi9cbiAgU3BsYXlUcmVlLnByb3RvdHlwZS52YWx1ZXMgPSBmdW5jdGlvbiB2YWx1ZXMgKCkge1xuICAgIHZhciBjdXJyZW50ID0gdGhpcy5fcm9vdDtcbiAgICB2YXIgcyA9IFtdLCByID0gW10sIGRvbmUgPSBmYWxzZTtcblxuICAgIHdoaWxlICghZG9uZSkge1xuICAgICAgaWYgKGN1cnJlbnQpIHtcbiAgICAgICAgcy5wdXNoKGN1cnJlbnQpO1xuICAgICAgICBjdXJyZW50ID0gY3VycmVudC5sZWZ0O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKHMubGVuZ3RoID4gMCkge1xuICAgICAgICAgIGN1cnJlbnQgPSBzLnBvcCgpO1xuICAgICAgICAgIHIucHVzaChjdXJyZW50LmRhdGEpO1xuICAgICAgICAgIGN1cnJlbnQgPSBjdXJyZW50LnJpZ2h0O1xuICAgICAgICB9IGVsc2UgeyBkb25lID0gdHJ1ZTsgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcjtcbiAgfTtcblxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIG5vZGUgYXQgZ2l2ZW4gaW5kZXhcbiAgICogQHBhcmFte251bWJlcn0gaW5kZXhcbiAgICogQHJldHVybiB7P05vZGV9XG4gICAqL1xuICBTcGxheVRyZWUucHJvdG90eXBlLmF0ID0gZnVuY3Rpb24gYXQgKGluZGV4KSB7XG4gICAgLy8gcmVtb3ZlZCBhZnRlciBhIGNvbnNpZGVyYXRpb24sIG1vcmUgbWlzbGVhZGluZyB0aGFuIHVzZWZ1bFxuICAgIC8vIGluZGV4ID0gaW5kZXggJSB0aGlzLnNpemU7XG4gICAgLy8gaWYgKGluZGV4IDwgMCkgaW5kZXggPSB0aGlzLnNpemUgLSBpbmRleDtcblxuICAgIHZhciBjdXJyZW50ID0gdGhpcy5fcm9vdDtcbiAgICB2YXIgcyA9IFtdLCBkb25lID0gZmFsc2UsIGkgPSAwO1xuXG4gICAgd2hpbGUgKCFkb25lKSB7XG4gICAgICBpZiAoY3VycmVudCkge1xuICAgICAgICBzLnB1c2goY3VycmVudCk7XG4gICAgICAgIGN1cnJlbnQgPSBjdXJyZW50LmxlZnQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAocy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgY3VycmVudCA9IHMucG9wKCk7XG4gICAgICAgICAgaWYgKGkgPT09IGluZGV4KSB7IHJldHVybiBjdXJyZW50OyB9XG4gICAgICAgICAgaSsrO1xuICAgICAgICAgIGN1cnJlbnQgPSBjdXJyZW50LnJpZ2h0O1xuICAgICAgICB9IGVsc2UgeyBkb25lID0gdHJ1ZTsgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcblxuICAvKipcbiAgICogQnVsay1sb2FkIGl0ZW1zLiBCb3RoIGFycmF5IGhhdmUgdG8gYmUgc2FtZSBzaXplXG4gICAqIEBwYXJhbXtBcnJheTxLZXk+fSAga2V5c1xuICAgKiBAcGFyYW17QXJyYXk8VmFsdWU+fVt2YWx1ZXNdXG4gICAqIEBwYXJhbXtCb29sZWFufSAgICAgW3ByZXNvcnQ9ZmFsc2VdIFByZS1zb3J0IGtleXMgYW5kIHZhbHVlcywgdXNpbmdcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmVlJ3MgY29tcGFyYXRvci4gU29ydGluZyBpcyBkb25lXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW4tcGxhY2VcbiAgICogQHJldHVybiB7QVZMVHJlZX1cbiAgICovXG4gIFNwbGF5VHJlZS5wcm90b3R5cGUubG9hZCA9IGZ1bmN0aW9uIGxvYWQgKGtleXMsIHZhbHVlcywgcHJlc29ydCkge1xuICAgICAgaWYgKCBrZXlzID09PSB2b2lkIDAgKSBrZXlzID0gW107XG4gICAgICBpZiAoIHZhbHVlcyA9PT0gdm9pZCAwICkgdmFsdWVzID0gW107XG4gICAgICBpZiAoIHByZXNvcnQgPT09IHZvaWQgMCApIHByZXNvcnQgPSBmYWxzZTtcblxuICAgIGlmICh0aGlzLl9zaXplICE9PSAwKSB7IHRocm93IG5ldyBFcnJvcignYnVsay1sb2FkOiB0cmVlIGlzIG5vdCBlbXB0eScpOyB9XG4gICAgdmFyIHNpemUgPSBrZXlzLmxlbmd0aDtcbiAgICBpZiAocHJlc29ydCkgeyBzb3J0KGtleXMsIHZhbHVlcywgMCwgc2l6ZSAtIDEsIHRoaXMuX2NvbXBhcmUpOyB9XG4gICAgdGhpcy5fcm9vdCA9IGxvYWRSZWN1cnNpdmUobnVsbCwga2V5cywgdmFsdWVzLCAwLCBzaXplKTtcbiAgICB0aGlzLl9zaXplID0gc2l6ZTtcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuXG4gIFNwbGF5VHJlZS5wcm90b3R5cGUubWluID0gZnVuY3Rpb24gbWluICgpIHtcbiAgICB2YXIgbm9kZSA9IHRoaXMubWluTm9kZSh0aGlzLl9yb290KTtcbiAgICBpZiAobm9kZSkgeyByZXR1cm4gbm9kZS5rZXk7IH1cbiAgICBlbHNlICAgIHsgcmV0dXJuIG51bGw7IH1cbiAgfTtcblxuXG4gIFNwbGF5VHJlZS5wcm90b3R5cGUubWF4ID0gZnVuY3Rpb24gbWF4ICgpIHtcbiAgICB2YXIgbm9kZSA9IHRoaXMubWF4Tm9kZSh0aGlzLl9yb290KTtcbiAgICBpZiAobm9kZSkgeyByZXR1cm4gbm9kZS5rZXk7IH1cbiAgICBlbHNlICAgIHsgcmV0dXJuIG51bGw7IH1cbiAgfTtcblxuICBTcGxheVRyZWUucHJvdG90eXBlLmlzRW1wdHkgPSBmdW5jdGlvbiBpc0VtcHR5ICgpIHsgcmV0dXJuIHRoaXMuX3Jvb3QgPT09IG51bGw7IH07XG4gIHByb3RvdHlwZUFjY2Vzc29ycy5zaXplLmdldCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMuX3NpemU7IH07XG5cblxuICAvKipcbiAgICogQ3JlYXRlIGEgdHJlZSBhbmQgbG9hZCBpdCB3aXRoIGl0ZW1zXG4gICAqIEBwYXJhbXtBcnJheTxLZXk+fSAgICAgICAga2V5c1xuICAgKiBAcGFyYW17QXJyYXk8VmFsdWU+P30gICAgICBbdmFsdWVzXVxuXG4gICAqIEBwYXJhbXtGdW5jdGlvbj99ICAgICAgICAgIFtjb21wYXJhdG9yXVxuICAgKiBAcGFyYW17Qm9vbGVhbj99ICAgICAgICAgICBbcHJlc29ydD1mYWxzZV0gUHJlLXNvcnQga2V5cyBhbmQgdmFsdWVzLCB1c2luZ1xuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyZWUncyBjb21wYXJhdG9yLiBTb3J0aW5nIGlzIGRvbmVcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbi1wbGFjZVxuICAgKiBAcGFyYW17Qm9vbGVhbj99ICAgICAgICAgICBbbm9EdXBsaWNhdGVzPWZhbHNlXSBBbGxvdyBkdXBsaWNhdGVzXG4gICAqIEByZXR1cm4ge1NwbGF5VHJlZX1cbiAgICovXG4gIFNwbGF5VHJlZS5jcmVhdGVUcmVlID0gZnVuY3Rpb24gY3JlYXRlVHJlZSAoa2V5cywgdmFsdWVzLCBjb21wYXJhdG9yLCBwcmVzb3J0LCBub0R1cGxpY2F0ZXMpIHtcbiAgICByZXR1cm4gbmV3IFNwbGF5VHJlZShjb21wYXJhdG9yLCBub0R1cGxpY2F0ZXMpLmxvYWQoa2V5cywgdmFsdWVzLCBwcmVzb3J0KTtcbiAgfTtcblxuICBPYmplY3QuZGVmaW5lUHJvcGVydGllcyggU3BsYXlUcmVlLnByb3RvdHlwZSwgcHJvdG90eXBlQWNjZXNzb3JzICk7XG5cblxuICBmdW5jdGlvbiBsb2FkUmVjdXJzaXZlIChwYXJlbnQsIGtleXMsIHZhbHVlcywgc3RhcnQsIGVuZCkge1xuICAgIHZhciBzaXplID0gZW5kIC0gc3RhcnQ7XG4gICAgaWYgKHNpemUgPiAwKSB7XG4gICAgICB2YXIgbWlkZGxlID0gc3RhcnQgKyBNYXRoLmZsb29yKHNpemUgLyAyKTtcbiAgICAgIHZhciBrZXkgICAgPSBrZXlzW21pZGRsZV07XG4gICAgICB2YXIgZGF0YSAgID0gdmFsdWVzW21pZGRsZV07XG4gICAgICB2YXIgbm9kZSAgID0geyBrZXk6IGtleSwgZGF0YTogZGF0YSwgcGFyZW50OiBwYXJlbnQgfTtcbiAgICAgIG5vZGUubGVmdCAgICA9IGxvYWRSZWN1cnNpdmUobm9kZSwga2V5cywgdmFsdWVzLCBzdGFydCwgbWlkZGxlKTtcbiAgICAgIG5vZGUucmlnaHQgICA9IGxvYWRSZWN1cnNpdmUobm9kZSwga2V5cywgdmFsdWVzLCBtaWRkbGUgKyAxLCBlbmQpO1xuICAgICAgcmV0dXJuIG5vZGU7XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9XG5cblxuICBmdW5jdGlvbiBzb3J0KGtleXMsIHZhbHVlcywgbGVmdCwgcmlnaHQsIGNvbXBhcmUpIHtcbiAgICBpZiAobGVmdCA+PSByaWdodCkgeyByZXR1cm47IH1cblxuICAgIHZhciBwaXZvdCA9IGtleXNbKGxlZnQgKyByaWdodCkgPj4gMV07XG4gICAgdmFyIGkgPSBsZWZ0IC0gMTtcbiAgICB2YXIgaiA9IHJpZ2h0ICsgMTtcblxuICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICBkbyB7IGkrKzsgfSB3aGlsZSAoY29tcGFyZShrZXlzW2ldLCBwaXZvdCkgPCAwKTtcbiAgICAgIGRvIHsgai0tOyB9IHdoaWxlIChjb21wYXJlKGtleXNbal0sIHBpdm90KSA+IDApO1xuICAgICAgaWYgKGkgPj0gaikgeyBicmVhazsgfVxuXG4gICAgICB2YXIgdG1wID0ga2V5c1tpXTtcbiAgICAgIGtleXNbaV0gPSBrZXlzW2pdO1xuICAgICAga2V5c1tqXSA9IHRtcDtcblxuICAgICAgdG1wID0gdmFsdWVzW2ldO1xuICAgICAgdmFsdWVzW2ldID0gdmFsdWVzW2pdO1xuICAgICAgdmFsdWVzW2pdID0gdG1wO1xuICAgIH1cblxuICAgIHNvcnQoa2V5cywgdmFsdWVzLCAgbGVmdCwgICAgIGosIGNvbXBhcmUpO1xuICAgIHNvcnQoa2V5cywgdmFsdWVzLCBqICsgMSwgcmlnaHQsIGNvbXBhcmUpO1xuICB9XG5cbiAgdmFyIE5PUk1BTCAgICAgICAgICAgICAgID0gMDtcbiAgdmFyIE5PTl9DT05UUklCVVRJTkcgICAgID0gMTtcbiAgdmFyIFNBTUVfVFJBTlNJVElPTiAgICAgID0gMjtcbiAgdmFyIERJRkZFUkVOVF9UUkFOU0lUSU9OID0gMztcblxuICB2YXIgSU5URVJTRUNUSU9OID0gMDtcbiAgdmFyIFVOSU9OICAgICAgICA9IDE7XG4gIHZhciBESUZGRVJFTkNFICAgPSAyO1xuICB2YXIgWE9SICAgICAgICAgID0gMztcblxuICAvKipcbiAgICogQHBhcmFtICB7U3dlZXBFdmVudH0gZXZlbnRcbiAgICogQHBhcmFtICB7U3dlZXBFdmVudH0gcHJldlxuICAgKiBAcGFyYW0gIHtPcGVyYXRpb259IG9wZXJhdGlvblxuICAgKi9cbiAgZnVuY3Rpb24gY29tcHV0ZUZpZWxkcyAoZXZlbnQsIHByZXYsIG9wZXJhdGlvbikge1xuICAgIC8vIGNvbXB1dGUgaW5PdXQgYW5kIG90aGVySW5PdXQgZmllbGRzXG4gICAgaWYgKHByZXYgPT09IG51bGwpIHtcbiAgICAgIGV2ZW50LmluT3V0ICAgICAgPSBmYWxzZTtcbiAgICAgIGV2ZW50Lm90aGVySW5PdXQgPSB0cnVlO1xuXG4gICAgLy8gcHJldmlvdXMgbGluZSBzZWdtZW50IGluIHN3ZWVwbGluZSBiZWxvbmdzIHRvIHRoZSBzYW1lIHBvbHlnb25cbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKGV2ZW50LmlzU3ViamVjdCA9PT0gcHJldi5pc1N1YmplY3QpIHtcbiAgICAgICAgZXZlbnQuaW5PdXQgICAgICA9ICFwcmV2LmluT3V0O1xuICAgICAgICBldmVudC5vdGhlckluT3V0ID0gcHJldi5vdGhlckluT3V0O1xuXG4gICAgICAvLyBwcmV2aW91cyBsaW5lIHNlZ21lbnQgaW4gc3dlZXBsaW5lIGJlbG9uZ3MgdG8gdGhlIGNsaXBwaW5nIHBvbHlnb25cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGV2ZW50LmluT3V0ICAgICAgPSAhcHJldi5vdGhlckluT3V0O1xuICAgICAgICBldmVudC5vdGhlckluT3V0ID0gcHJldi5pc1ZlcnRpY2FsKCkgPyAhcHJldi5pbk91dCA6IHByZXYuaW5PdXQ7XG4gICAgICB9XG5cbiAgICAgIC8vIGNvbXB1dGUgcHJldkluUmVzdWx0IGZpZWxkXG4gICAgICBpZiAocHJldikge1xuICAgICAgICBldmVudC5wcmV2SW5SZXN1bHQgPSAoIWluUmVzdWx0KHByZXYsIG9wZXJhdGlvbikgfHwgcHJldi5pc1ZlcnRpY2FsKCkpXG4gICAgICAgICAgPyBwcmV2LnByZXZJblJlc3VsdCA6IHByZXY7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gY2hlY2sgaWYgdGhlIGxpbmUgc2VnbWVudCBiZWxvbmdzIHRvIHRoZSBCb29sZWFuIG9wZXJhdGlvblxuICAgIGV2ZW50LmluUmVzdWx0ID0gaW5SZXN1bHQoZXZlbnQsIG9wZXJhdGlvbik7XG4gIH1cblxuXG4gIC8qIGVzbGludC1kaXNhYmxlIGluZGVudCAqL1xuICBmdW5jdGlvbiBpblJlc3VsdChldmVudCwgb3BlcmF0aW9uKSB7XG4gICAgc3dpdGNoIChldmVudC50eXBlKSB7XG4gICAgICBjYXNlIE5PUk1BTDpcbiAgICAgICAgc3dpdGNoIChvcGVyYXRpb24pIHtcbiAgICAgICAgICBjYXNlIElOVEVSU0VDVElPTjpcbiAgICAgICAgICAgIHJldHVybiAhZXZlbnQub3RoZXJJbk91dDtcbiAgICAgICAgICBjYXNlIFVOSU9OOlxuICAgICAgICAgICAgcmV0dXJuIGV2ZW50Lm90aGVySW5PdXQ7XG4gICAgICAgICAgY2FzZSBESUZGRVJFTkNFOlxuICAgICAgICAgICAgLy8gcmV0dXJuIChldmVudC5pc1N1YmplY3QgJiYgIWV2ZW50Lm90aGVySW5PdXQpIHx8XG4gICAgICAgICAgICAvLyAgICAgICAgICghZXZlbnQuaXNTdWJqZWN0ICYmIGV2ZW50Lm90aGVySW5PdXQpO1xuICAgICAgICAgICAgcmV0dXJuIChldmVudC5pc1N1YmplY3QgJiYgZXZlbnQub3RoZXJJbk91dCkgfHxcbiAgICAgICAgICAgICAgICAgICAgKCFldmVudC5pc1N1YmplY3QgJiYgIWV2ZW50Lm90aGVySW5PdXQpO1xuICAgICAgICAgIGNhc2UgWE9SOlxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFNBTUVfVFJBTlNJVElPTjpcbiAgICAgICAgcmV0dXJuIG9wZXJhdGlvbiA9PT0gSU5URVJTRUNUSU9OIHx8IG9wZXJhdGlvbiA9PT0gVU5JT047XG4gICAgICBjYXNlIERJRkZFUkVOVF9UUkFOU0lUSU9OOlxuICAgICAgICByZXR1cm4gb3BlcmF0aW9uID09PSBESUZGRVJFTkNFO1xuICAgICAgY2FzZSBOT05fQ09OVFJJQlVUSU5HOlxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICAvKiBlc2xpbnQtZW5hYmxlIGluZGVudCAqL1xuXG4gIHZhciBTd2VlcEV2ZW50ID0gZnVuY3Rpb24gU3dlZXBFdmVudCAocG9pbnQsIGxlZnQsIG90aGVyRXZlbnQsIGlzU3ViamVjdCwgZWRnZVR5cGUpIHtcblxuICAgIC8qKlxuICAgICAqIElzIGxlZnQgZW5kcG9pbnQ/XG4gICAgICogQHR5cGUge0Jvb2xlYW59XG4gICAgICovXG4gICAgdGhpcy5sZWZ0ID0gbGVmdDtcblxuICAgIC8qKlxuICAgICAqIEB0eXBlIHtBcnJheS48TnVtYmVyPn1cbiAgICAgKi9cbiAgICB0aGlzLnBvaW50ID0gcG9pbnQ7XG5cbiAgICAvKipcbiAgICAgKiBPdGhlciBlZGdlIHJlZmVyZW5jZVxuICAgICAqIEB0eXBlIHtTd2VlcEV2ZW50fVxuICAgICAqL1xuICAgIHRoaXMub3RoZXJFdmVudCA9IG90aGVyRXZlbnQ7XG5cbiAgICAvKipcbiAgICAgKiBCZWxvbmdzIHRvIHNvdXJjZSBvciBjbGlwcGluZyBwb2x5Z29uXG4gICAgICogQHR5cGUge0Jvb2xlYW59XG4gICAgICovXG4gICAgdGhpcy5pc1N1YmplY3QgPSBpc1N1YmplY3Q7XG5cbiAgICAvKipcbiAgICAgKiBFZGdlIGNvbnRyaWJ1dGlvbiB0eXBlXG4gICAgICogQHR5cGUge051bWJlcn1cbiAgICAgKi9cbiAgICB0aGlzLnR5cGUgPSBlZGdlVHlwZSB8fCBOT1JNQUw7XG5cblxuICAgIC8qKlxuICAgICAqIEluLW91dCB0cmFuc2l0aW9uIGZvciB0aGUgc3dlZXBsaW5lIGNyb3NzaW5nIHBvbHlnb25cbiAgICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICAgKi9cbiAgICB0aGlzLmluT3V0ID0gZmFsc2U7XG5cblxuICAgIC8qKlxuICAgICAqIEB0eXBlIHtCb29sZWFufVxuICAgICAqL1xuICAgIHRoaXMub3RoZXJJbk91dCA9IGZhbHNlO1xuXG4gICAgLyoqXG4gICAgICogUHJldmlvdXMgZXZlbnQgaW4gcmVzdWx0P1xuICAgICAqIEB0eXBlIHtTd2VlcEV2ZW50fVxuICAgICAqL1xuICAgIHRoaXMucHJldkluUmVzdWx0ID0gbnVsbDtcblxuICAgIC8qKlxuICAgICAqIERvZXMgZXZlbnQgYmVsb25nIHRvIHJlc3VsdD9cbiAgICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICAgKi9cbiAgICB0aGlzLmluUmVzdWx0ID0gZmFsc2U7XG5cblxuICAgIC8vIGNvbm5lY3Rpb24gc3RlcFxuXG4gICAgLyoqXG4gICAgICogQHR5cGUge0Jvb2xlYW59XG4gICAgICovXG4gICAgdGhpcy5yZXN1bHRJbk91dCA9IGZhbHNlO1xuXG4gICAgdGhpcy5pc0V4dGVyaW9yUmluZyA9IHRydWU7XG4gIH07XG5cblxuICAvKipcbiAgICogQHBhcmFte0FycmF5LjxOdW1iZXI+fXBcbiAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICovXG4gIFN3ZWVwRXZlbnQucHJvdG90eXBlLmlzQmVsb3cgPSBmdW5jdGlvbiBpc0JlbG93IChwKSB7XG4gICAgdmFyIHAwID0gdGhpcy5wb2ludCwgcDEgPSB0aGlzLm90aGVyRXZlbnQucG9pbnQ7XG4gICAgcmV0dXJuIHRoaXMubGVmdFxuICAgICAgPyAocDBbMF0gLSBwWzBdKSAqIChwMVsxXSAtIHBbMV0pIC0gKHAxWzBdIC0gcFswXSkgKiAocDBbMV0gLSBwWzFdKSA+IDBcbiAgICAgIC8vIHNpZ25lZEFyZWEodGhpcy5wb2ludCwgdGhpcy5vdGhlckV2ZW50LnBvaW50LCBwKSA+IDAgOlxuICAgICAgOiAocDFbMF0gLSBwWzBdKSAqIChwMFsxXSAtIHBbMV0pIC0gKHAwWzBdIC0gcFswXSkgKiAocDFbMV0gLSBwWzFdKSA+IDA7XG4gICAgICAvL3NpZ25lZEFyZWEodGhpcy5vdGhlckV2ZW50LnBvaW50LCB0aGlzLnBvaW50LCBwKSA+IDA7XG4gIH07XG5cblxuICAvKipcbiAgICogQHBhcmFte0FycmF5LjxOdW1iZXI+fXBcbiAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICovXG4gIFN3ZWVwRXZlbnQucHJvdG90eXBlLmlzQWJvdmUgPSBmdW5jdGlvbiBpc0Fib3ZlIChwKSB7XG4gICAgcmV0dXJuICF0aGlzLmlzQmVsb3cocCk7XG4gIH07XG5cblxuICAvKipcbiAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICovXG4gIFN3ZWVwRXZlbnQucHJvdG90eXBlLmlzVmVydGljYWwgPSBmdW5jdGlvbiBpc1ZlcnRpY2FsICgpIHtcbiAgICByZXR1cm4gdGhpcy5wb2ludFswXSA9PT0gdGhpcy5vdGhlckV2ZW50LnBvaW50WzBdO1xuICB9O1xuXG5cbiAgU3dlZXBFdmVudC5wcm90b3R5cGUuY2xvbmUgPSBmdW5jdGlvbiBjbG9uZSAoKSB7XG4gICAgdmFyIGNvcHkgPSBuZXcgU3dlZXBFdmVudChcbiAgICAgIHRoaXMucG9pbnQsIHRoaXMubGVmdCwgdGhpcy5vdGhlckV2ZW50LCB0aGlzLmlzU3ViamVjdCwgdGhpcy50eXBlKTtcblxuICAgIGNvcHkuaW5SZXN1bHQgICAgID0gdGhpcy5pblJlc3VsdDtcbiAgICBjb3B5LnByZXZJblJlc3VsdCA9IHRoaXMucHJldkluUmVzdWx0O1xuICAgIGNvcHkuaXNFeHRlcmlvclJpbmcgPSB0aGlzLmlzRXh0ZXJpb3JSaW5nO1xuICAgIGNvcHkuaW5PdXQgICAgICAgID0gdGhpcy5pbk91dDtcbiAgICBjb3B5Lm90aGVySW5PdXQgICA9IHRoaXMub3RoZXJJbk91dDtcblxuICAgIHJldHVybiBjb3B5O1xuICB9O1xuXG4gIGZ1bmN0aW9uIGVxdWFscyhwMSwgcDIpIHtcbiAgICBpZiAocDFbMF0gPT09IHAyWzBdKSB7XG4gICAgICBpZiAocDFbMV0gPT09IHAyWzFdKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAvLyBjb25zdCBFUFNJTE9OID0gMWUtOTtcbiAgLy8gY29uc3QgYWJzID0gTWF0aC5hYnM7XG4gIC8vIFRPRE8gaHR0cHM6Ly9naXRodWIuY29tL3c4ci9tYXJ0aW5lei9pc3N1ZXMvNiNpc3N1ZWNvbW1lbnQtMjYyODQ3MTY0XG4gIC8vIFByZWNpc2lvbiBwcm9ibGVtLlxuICAvL1xuICAvLyBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGVxdWFscyhwMSwgcDIpIHtcbiAgLy8gICByZXR1cm4gYWJzKHAxWzBdIC0gcDJbMF0pIDw9IEVQU0lMT04gJiYgYWJzKHAxWzFdIC0gcDJbMV0pIDw9IEVQU0lMT047XG4gIC8vIH07XG5cbiAgLyoqXG4gICAqIFNpZ25lZCBhcmVhIG9mIHRoZSB0cmlhbmdsZSAocDAsIHAxLCBwMilcbiAgICogQHBhcmFtICB7QXJyYXkuPE51bWJlcj59IHAwXG4gICAqIEBwYXJhbSAge0FycmF5LjxOdW1iZXI+fSBwMVxuICAgKiBAcGFyYW0gIHtBcnJheS48TnVtYmVyPn0gcDJcbiAgICogQHJldHVybiB7TnVtYmVyfVxuICAgKi9cbiAgZnVuY3Rpb24gc2lnbmVkQXJlYShwMCwgcDEsIHAyKSB7XG4gICAgcmV0dXJuIChwMFswXSAtIHAyWzBdKSAqIChwMVsxXSAtIHAyWzFdKSAtIChwMVswXSAtIHAyWzBdKSAqIChwMFsxXSAtIHAyWzFdKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0gIHtTd2VlcEV2ZW50fSBlMVxuICAgKiBAcGFyYW0gIHtTd2VlcEV2ZW50fSBlMlxuICAgKiBAcmV0dXJuIHtOdW1iZXJ9XG4gICAqL1xuICBmdW5jdGlvbiBjb21wYXJlRXZlbnRzKGUxLCBlMikge1xuICAgIHZhciBwMSA9IGUxLnBvaW50O1xuICAgIHZhciBwMiA9IGUyLnBvaW50O1xuXG4gICAgLy8gRGlmZmVyZW50IHgtY29vcmRpbmF0ZVxuICAgIGlmIChwMVswXSA+IHAyWzBdKSB7IHJldHVybiAxOyB9XG4gICAgaWYgKHAxWzBdIDwgcDJbMF0pIHsgcmV0dXJuIC0xOyB9XG5cbiAgICAvLyBEaWZmZXJlbnQgcG9pbnRzLCBidXQgc2FtZSB4LWNvb3JkaW5hdGVcbiAgICAvLyBFdmVudCB3aXRoIGxvd2VyIHktY29vcmRpbmF0ZSBpcyBwcm9jZXNzZWQgZmlyc3RcbiAgICBpZiAocDFbMV0gIT09IHAyWzFdKSB7IHJldHVybiBwMVsxXSA+IHAyWzFdID8gMSA6IC0xOyB9XG5cbiAgICByZXR1cm4gc3BlY2lhbENhc2VzKGUxLCBlMiwgcDEsIHAyKTtcbiAgfVxuXG5cbiAgLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbiAgZnVuY3Rpb24gc3BlY2lhbENhc2VzKGUxLCBlMiwgcDEsIHAyKSB7XG4gICAgLy8gU2FtZSBjb29yZGluYXRlcywgYnV0IG9uZSBpcyBhIGxlZnQgZW5kcG9pbnQgYW5kIHRoZSBvdGhlciBpc1xuICAgIC8vIGEgcmlnaHQgZW5kcG9pbnQuIFRoZSByaWdodCBlbmRwb2ludCBpcyBwcm9jZXNzZWQgZmlyc3RcbiAgICBpZiAoZTEubGVmdCAhPT0gZTIubGVmdClcbiAgICAgIHsgcmV0dXJuIGUxLmxlZnQgPyAxIDogLTE7IH1cblxuICAgIC8vIGNvbnN0IHAyID0gZTEub3RoZXJFdmVudC5wb2ludCwgcDMgPSBlMi5vdGhlckV2ZW50LnBvaW50O1xuICAgIC8vIGNvbnN0IHNhID0gKHAxWzBdIC0gcDNbMF0pICogKHAyWzFdIC0gcDNbMV0pIC0gKHAyWzBdIC0gcDNbMF0pICogKHAxWzFdIC0gcDNbMV0pXG4gICAgLy8gU2FtZSBjb29yZGluYXRlcywgYm90aCBldmVudHNcbiAgICAvLyBhcmUgbGVmdCBlbmRwb2ludHMgb3IgcmlnaHQgZW5kcG9pbnRzLlxuICAgIC8vIG5vdCBjb2xsaW5lYXJcbiAgICBpZiAoc2lnbmVkQXJlYShwMSwgZTEub3RoZXJFdmVudC5wb2ludCwgZTIub3RoZXJFdmVudC5wb2ludCkgIT09IDApIHtcbiAgICAgIC8vIHRoZSBldmVudCBhc3NvY2lhdGUgdG8gdGhlIGJvdHRvbSBzZWdtZW50IGlzIHByb2Nlc3NlZCBmaXJzdFxuICAgICAgcmV0dXJuICghZTEuaXNCZWxvdyhlMi5vdGhlckV2ZW50LnBvaW50KSkgPyAxIDogLTE7XG4gICAgfVxuXG4gICAgcmV0dXJuICghZTEuaXNTdWJqZWN0ICYmIGUyLmlzU3ViamVjdCkgPyAxIDogLTE7XG4gIH1cbiAgLyogZXNsaW50LWVuYWJsZSBuby11bnVzZWQtdmFycyAqL1xuXG4gIC8qKlxuICAgKiBAcGFyYW0gIHtTd2VlcEV2ZW50fSBzZVxuICAgKiBAcGFyYW0gIHtBcnJheS48TnVtYmVyPn0gcFxuICAgKiBAcGFyYW0gIHtRdWV1ZX0gcXVldWVcbiAgICogQHJldHVybiB7UXVldWV9XG4gICAqL1xuICBmdW5jdGlvbiBkaXZpZGVTZWdtZW50KHNlLCBwLCBxdWV1ZSkgIHtcbiAgICB2YXIgciA9IG5ldyBTd2VlcEV2ZW50KHAsIGZhbHNlLCBzZSwgICAgICAgICAgICBzZS5pc1N1YmplY3QpO1xuICAgIHZhciBsID0gbmV3IFN3ZWVwRXZlbnQocCwgdHJ1ZSwgIHNlLm90aGVyRXZlbnQsIHNlLmlzU3ViamVjdCk7XG5cbiAgICAvKiBlc2xpbnQtZGlzYWJsZSBuby1jb25zb2xlICovXG4gICAgaWYgKGVxdWFscyhzZS5wb2ludCwgc2Uub3RoZXJFdmVudC5wb2ludCkpIHtcblxuICAgICAgY29uc29sZS53YXJuKCd3aGF0IGlzIHRoYXQsIGEgY29sbGFwc2VkIHNlZ21lbnQ/Jywgc2UpO1xuICAgIH1cbiAgICAvKiBlc2xpbnQtZW5hYmxlIG5vLWNvbnNvbGUgKi9cblxuICAgIHIuY29udG91cklkID0gbC5jb250b3VySWQgPSBzZS5jb250b3VySWQ7XG5cbiAgICAvLyBhdm9pZCBhIHJvdW5kaW5nIGVycm9yLiBUaGUgbGVmdCBldmVudCB3b3VsZCBiZSBwcm9jZXNzZWQgYWZ0ZXIgdGhlIHJpZ2h0IGV2ZW50XG4gICAgaWYgKGNvbXBhcmVFdmVudHMobCwgc2Uub3RoZXJFdmVudCkgPiAwKSB7XG4gICAgICBzZS5vdGhlckV2ZW50LmxlZnQgPSB0cnVlO1xuICAgICAgbC5sZWZ0ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgLy8gYXZvaWQgYSByb3VuZGluZyBlcnJvci4gVGhlIGxlZnQgZXZlbnQgd291bGQgYmUgcHJvY2Vzc2VkIGFmdGVyIHRoZSByaWdodCBldmVudFxuICAgIC8vIGlmIChjb21wYXJlRXZlbnRzKHNlLCByKSA+IDApIHt9XG5cbiAgICBzZS5vdGhlckV2ZW50Lm90aGVyRXZlbnQgPSBsO1xuICAgIHNlLm90aGVyRXZlbnQgPSByO1xuXG4gICAgcXVldWUucHVzaChsKTtcbiAgICBxdWV1ZS5wdXNoKHIpO1xuXG4gICAgcmV0dXJuIHF1ZXVlO1xuICB9XG5cbiAgLy9jb25zdCBFUFMgPSAxZS05O1xuXG4gIC8qKlxuICAgKiBGaW5kcyB0aGUgbWFnbml0dWRlIG9mIHRoZSBjcm9zcyBwcm9kdWN0IG9mIHR3byB2ZWN0b3JzIChpZiB3ZSBwcmV0ZW5kXG4gICAqIHRoZXkncmUgaW4gdGhyZWUgZGltZW5zaW9ucylcbiAgICpcbiAgICogQHBhcmFtIHtPYmplY3R9IGEgRmlyc3QgdmVjdG9yXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBiIFNlY29uZCB2ZWN0b3JcbiAgICogQHByaXZhdGVcbiAgICogQHJldHVybnMge051bWJlcn0gVGhlIG1hZ25pdHVkZSBvZiB0aGUgY3Jvc3MgcHJvZHVjdFxuICAgKi9cbiAgZnVuY3Rpb24gY3Jvc3NQcm9kdWN0KGEsIGIpIHtcbiAgICByZXR1cm4gKGFbMF0gKiBiWzFdKSAtIChhWzFdICogYlswXSk7XG4gIH1cblxuICAvKipcbiAgICogRmluZHMgdGhlIGRvdCBwcm9kdWN0IG9mIHR3byB2ZWN0b3JzLlxuICAgKlxuICAgKiBAcGFyYW0ge09iamVjdH0gYSBGaXJzdCB2ZWN0b3JcbiAgICogQHBhcmFtIHtPYmplY3R9IGIgU2Vjb25kIHZlY3RvclxuICAgKiBAcHJpdmF0ZVxuICAgKiBAcmV0dXJucyB7TnVtYmVyfSBUaGUgZG90IHByb2R1Y3RcbiAgICovXG4gIGZ1bmN0aW9uIGRvdFByb2R1Y3QoYSwgYikge1xuICAgIHJldHVybiAoYVswXSAqIGJbMF0pICsgKGFbMV0gKiBiWzFdKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBGaW5kcyB0aGUgaW50ZXJzZWN0aW9uIChpZiBhbnkpIGJldHdlZW4gdHdvIGxpbmUgc2VnbWVudHMgYSBhbmQgYiwgZ2l2ZW4gdGhlXG4gICAqIGxpbmUgc2VnbWVudHMnIGVuZCBwb2ludHMgYTEsIGEyIGFuZCBiMSwgYjIuXG4gICAqXG4gICAqIFRoaXMgYWxnb3JpdGhtIGlzIGJhc2VkIG9uIFNjaG5laWRlciBhbmQgRWJlcmx5LlxuICAgKiBodHRwOi8vd3d3LmNpbWVjLm9yZy5hci9+bmNhbHZvL1NjaG5laWRlcl9FYmVybHkucGRmXG4gICAqIFBhZ2UgMjQ0LlxuICAgKlxuICAgKiBAcGFyYW0ge0FycmF5LjxOdW1iZXI+fSBhMSBwb2ludCBvZiBmaXJzdCBsaW5lXG4gICAqIEBwYXJhbSB7QXJyYXkuPE51bWJlcj59IGEyIHBvaW50IG9mIGZpcnN0IGxpbmVcbiAgICogQHBhcmFtIHtBcnJheS48TnVtYmVyPn0gYjEgcG9pbnQgb2Ygc2Vjb25kIGxpbmVcbiAgICogQHBhcmFtIHtBcnJheS48TnVtYmVyPn0gYjIgcG9pbnQgb2Ygc2Vjb25kIGxpbmVcbiAgICogQHBhcmFtIHtCb29sZWFuPX0gICAgICAgbm9FbmRwb2ludFRvdWNoIHdoZXRoZXIgdG8gc2tpcCBzaW5nbGUgdG91Y2hwb2ludHNcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChtZWFuaW5nIGNvbm5lY3RlZCBzZWdtZW50cykgYXNcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGludGVyc2VjdGlvbnNcbiAgICogQHJldHVybnMge0FycmF5LjxBcnJheS48TnVtYmVyPj58TnVsbH0gSWYgdGhlIGxpbmVzIGludGVyc2VjdCwgdGhlIHBvaW50IG9mXG4gICAqIGludGVyc2VjdGlvbi4gSWYgdGhleSBvdmVybGFwLCB0aGUgdHdvIGVuZCBwb2ludHMgb2YgdGhlIG92ZXJsYXBwaW5nIHNlZ21lbnQuXG4gICAqIE90aGVyd2lzZSwgbnVsbC5cbiAgICovXG4gIGZ1bmN0aW9uIGludGVyc2VjdGlvbiAoYTEsIGEyLCBiMSwgYjIsIG5vRW5kcG9pbnRUb3VjaCkge1xuICAgIC8vIFRoZSBhbGdvcml0aG0gZXhwZWN0cyBvdXIgbGluZXMgaW4gdGhlIGZvcm0gUCArIHNkLCB3aGVyZSBQIGlzIGEgcG9pbnQsXG4gICAgLy8gcyBpcyBvbiB0aGUgaW50ZXJ2YWwgWzAsIDFdLCBhbmQgZCBpcyBhIHZlY3Rvci5cbiAgICAvLyBXZSBhcmUgcGFzc2VkIHR3byBwb2ludHMuIFAgY2FuIGJlIHRoZSBmaXJzdCBwb2ludCBvZiBlYWNoIHBhaXIuIFRoZVxuICAgIC8vIHZlY3RvciwgdGhlbiwgY291bGQgYmUgdGhvdWdodCBvZiBhcyB0aGUgZGlzdGFuY2UgKGluIHggYW5kIHkgY29tcG9uZW50cylcbiAgICAvLyBmcm9tIHRoZSBmaXJzdCBwb2ludCB0byB0aGUgc2Vjb25kIHBvaW50LlxuICAgIC8vIFNvIGZpcnN0LCBsZXQncyBtYWtlIG91ciB2ZWN0b3JzOlxuICAgIHZhciB2YSA9IFthMlswXSAtIGExWzBdLCBhMlsxXSAtIGExWzFdXTtcbiAgICB2YXIgdmIgPSBbYjJbMF0gLSBiMVswXSwgYjJbMV0gLSBiMVsxXV07XG4gICAgLy8gV2UgYWxzbyBkZWZpbmUgYSBmdW5jdGlvbiB0byBjb252ZXJ0IGJhY2sgdG8gcmVndWxhciBwb2ludCBmb3JtOlxuXG4gICAgLyogZXNsaW50LWRpc2FibGUgYXJyb3ctYm9keS1zdHlsZSAqL1xuXG4gICAgZnVuY3Rpb24gdG9Qb2ludChwLCBzLCBkKSB7XG4gICAgICByZXR1cm4gW1xuICAgICAgICBwWzBdICsgcyAqIGRbMF0sXG4gICAgICAgIHBbMV0gKyBzICogZFsxXVxuICAgICAgXTtcbiAgICB9XG5cbiAgICAvKiBlc2xpbnQtZW5hYmxlIGFycm93LWJvZHktc3R5bGUgKi9cblxuICAgIC8vIFRoZSByZXN0IGlzIHByZXR0eSBtdWNoIGEgc3RyYWlnaHQgcG9ydCBvZiB0aGUgYWxnb3JpdGhtLlxuICAgIHZhciBlID0gW2IxWzBdIC0gYTFbMF0sIGIxWzFdIC0gYTFbMV1dO1xuICAgIHZhciBrcm9zcyAgICA9IGNyb3NzUHJvZHVjdCh2YSwgdmIpO1xuICAgIHZhciBzcXJLcm9zcyA9IGtyb3NzICoga3Jvc3M7XG4gICAgdmFyIHNxckxlbkEgID0gZG90UHJvZHVjdCh2YSwgdmEpO1xuICAgIC8vY29uc3Qgc3FyTGVuQiAgPSBkb3RQcm9kdWN0KHZiLCB2Yik7XG5cbiAgICAvLyBDaGVjayBmb3IgbGluZSBpbnRlcnNlY3Rpb24uIFRoaXMgd29ya3MgYmVjYXVzZSBvZiB0aGUgcHJvcGVydGllcyBvZiB0aGVcbiAgICAvLyBjcm9zcyBwcm9kdWN0IC0tIHNwZWNpZmljYWxseSwgdHdvIHZlY3RvcnMgYXJlIHBhcmFsbGVsIGlmIGFuZCBvbmx5IGlmIHRoZVxuICAgIC8vIGNyb3NzIHByb2R1Y3QgaXMgdGhlIDAgdmVjdG9yLiBUaGUgZnVsbCBjYWxjdWxhdGlvbiBpbnZvbHZlcyByZWxhdGl2ZSBlcnJvclxuICAgIC8vIHRvIGFjY291bnQgZm9yIHBvc3NpYmxlIHZlcnkgc21hbGwgbGluZSBzZWdtZW50cy4gU2VlIFNjaG5laWRlciAmIEViZXJseVxuICAgIC8vIGZvciBkZXRhaWxzLlxuICAgIGlmIChzcXJLcm9zcyA+IDAvKiBFUFMgKiBzcXJMZW5CICogc3FMZW5BICovKSB7XG4gICAgICAvLyBJZiB0aGV5J3JlIG5vdCBwYXJhbGxlbCwgdGhlbiAoYmVjYXVzZSB0aGVzZSBhcmUgbGluZSBzZWdtZW50cykgdGhleVxuICAgICAgLy8gc3RpbGwgbWlnaHQgbm90IGFjdHVhbGx5IGludGVyc2VjdC4gVGhpcyBjb2RlIGNoZWNrcyB0aGF0IHRoZVxuICAgICAgLy8gaW50ZXJzZWN0aW9uIHBvaW50IG9mIHRoZSBsaW5lcyBpcyBhY3R1YWxseSBvbiBib3RoIGxpbmUgc2VnbWVudHMuXG4gICAgICB2YXIgcyA9IGNyb3NzUHJvZHVjdChlLCB2YikgLyBrcm9zcztcbiAgICAgIGlmIChzIDwgMCB8fCBzID4gMSkge1xuICAgICAgICAvLyBub3Qgb24gbGluZSBzZWdtZW50IGFcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG4gICAgICB2YXIgdCA9IGNyb3NzUHJvZHVjdChlLCB2YSkgLyBrcm9zcztcbiAgICAgIGlmICh0IDwgMCB8fCB0ID4gMSkge1xuICAgICAgICAvLyBub3Qgb24gbGluZSBzZWdtZW50IGJcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG4gICAgICBpZiAocyA9PT0gMCB8fCBzID09PSAxKSB7XG4gICAgICAgIC8vIG9uIGFuIGVuZHBvaW50IG9mIGxpbmUgc2VnbWVudCBhXG4gICAgICAgIHJldHVybiBub0VuZHBvaW50VG91Y2ggPyBudWxsIDogW3RvUG9pbnQoYTEsIHMsIHZhKV07XG4gICAgICB9XG4gICAgICBpZiAodCA9PT0gMCB8fCB0ID09PSAxKSB7XG4gICAgICAgIC8vIG9uIGFuIGVuZHBvaW50IG9mIGxpbmUgc2VnbWVudCBiXG4gICAgICAgIHJldHVybiBub0VuZHBvaW50VG91Y2ggPyBudWxsIDogW3RvUG9pbnQoYjEsIHQsIHZiKV07XG4gICAgICB9XG4gICAgICByZXR1cm4gW3RvUG9pbnQoYTEsIHMsIHZhKV07XG4gICAgfVxuXG4gICAgLy8gSWYgd2UndmUgcmVhY2hlZCB0aGlzIHBvaW50LCB0aGVuIHRoZSBsaW5lcyBhcmUgZWl0aGVyIHBhcmFsbGVsIG9yIHRoZVxuICAgIC8vIHNhbWUsIGJ1dCB0aGUgc2VnbWVudHMgY291bGQgb3ZlcmxhcCBwYXJ0aWFsbHkgb3IgZnVsbHksIG9yIG5vdCBhdCBhbGwuXG4gICAgLy8gU28gd2UgbmVlZCB0byBmaW5kIHRoZSBvdmVybGFwLCBpZiBhbnkuIFRvIGRvIHRoYXQsIHdlIGNhbiB1c2UgZSwgd2hpY2ggaXNcbiAgICAvLyB0aGUgKHZlY3RvcikgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZSB0d28gaW5pdGlhbCBwb2ludHMuIElmIHRoaXMgaXMgcGFyYWxsZWxcbiAgICAvLyB3aXRoIHRoZSBsaW5lIGl0c2VsZiwgdGhlbiB0aGUgdHdvIGxpbmVzIGFyZSB0aGUgc2FtZSBsaW5lLCBhbmQgdGhlcmUgd2lsbFxuICAgIC8vIGJlIG92ZXJsYXAuXG4gICAgLy9jb25zdCBzcXJMZW5FID0gZG90UHJvZHVjdChlLCBlKTtcbiAgICBrcm9zcyA9IGNyb3NzUHJvZHVjdChlLCB2YSk7XG4gICAgc3FyS3Jvc3MgPSBrcm9zcyAqIGtyb3NzO1xuXG4gICAgaWYgKHNxcktyb3NzID4gMCAvKiBFUFMgKiBzcUxlbkIgKiBzcUxlbkUgKi8pIHtcbiAgICAvLyBMaW5lcyBhcmUganVzdCBwYXJhbGxlbCwgbm90IHRoZSBzYW1lLiBObyBvdmVybGFwLlxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgdmFyIHNhID0gZG90UHJvZHVjdCh2YSwgZSkgLyBzcXJMZW5BO1xuICAgIHZhciBzYiA9IHNhICsgZG90UHJvZHVjdCh2YSwgdmIpIC8gc3FyTGVuQTtcbiAgICB2YXIgc21pbiA9IE1hdGgubWluKHNhLCBzYik7XG4gICAgdmFyIHNtYXggPSBNYXRoLm1heChzYSwgc2IpO1xuXG4gICAgLy8gdGhpcyBpcywgZXNzZW50aWFsbHksIHRoZSBGaW5kSW50ZXJzZWN0aW9uIGFjdGluZyBvbiBmbG9hdHMgZnJvbVxuICAgIC8vIFNjaG5laWRlciAmIEViZXJseSwganVzdCBpbmxpbmVkIGludG8gdGhpcyBmdW5jdGlvbi5cbiAgICBpZiAoc21pbiA8PSAxICYmIHNtYXggPj0gMCkge1xuXG4gICAgICAvLyBvdmVybGFwIG9uIGFuIGVuZCBwb2ludFxuICAgICAgaWYgKHNtaW4gPT09IDEpIHtcbiAgICAgICAgcmV0dXJuIG5vRW5kcG9pbnRUb3VjaCA/IG51bGwgOiBbdG9Qb2ludChhMSwgc21pbiA+IDAgPyBzbWluIDogMCwgdmEpXTtcbiAgICAgIH1cblxuICAgICAgaWYgKHNtYXggPT09IDApIHtcbiAgICAgICAgcmV0dXJuIG5vRW5kcG9pbnRUb3VjaCA/IG51bGwgOiBbdG9Qb2ludChhMSwgc21heCA8IDEgPyBzbWF4IDogMSwgdmEpXTtcbiAgICAgIH1cblxuICAgICAgaWYgKG5vRW5kcG9pbnRUb3VjaCAmJiBzbWluID09PSAwICYmIHNtYXggPT09IDEpIHsgcmV0dXJuIG51bGw7IH1cblxuICAgICAgLy8gVGhlcmUncyBvdmVybGFwIG9uIGEgc2VnbWVudCAtLSB0d28gcG9pbnRzIG9mIGludGVyc2VjdGlvbi4gUmV0dXJuIGJvdGguXG4gICAgICByZXR1cm4gW1xuICAgICAgICB0b1BvaW50KGExLCBzbWluID4gMCA/IHNtaW4gOiAwLCB2YSksXG4gICAgICAgIHRvUG9pbnQoYTEsIHNtYXggPCAxID8gc21heCA6IDEsIHZhKVxuICAgICAgXTtcbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0gIHtTd2VlcEV2ZW50fSBzZTFcbiAgICogQHBhcmFtICB7U3dlZXBFdmVudH0gc2UyXG4gICAqIEBwYXJhbSAge1F1ZXVlfSAgICAgIHF1ZXVlXG4gICAqIEByZXR1cm4ge051bWJlcn1cbiAgICovXG4gIGZ1bmN0aW9uIHBvc3NpYmxlSW50ZXJzZWN0aW9uIChzZTEsIHNlMiwgcXVldWUpIHtcbiAgICAvLyB0aGF0IGRpc2FsbG93cyBzZWxmLWludGVyc2VjdGluZyBwb2x5Z29ucyxcbiAgICAvLyBkaWQgY29zdCB1cyBoYWxmIGEgZGF5LCBzbyBJJ2xsIGxlYXZlIGl0XG4gICAgLy8gb3V0IG9mIHJlc3BlY3RcbiAgICAvLyBpZiAoc2UxLmlzU3ViamVjdCA9PT0gc2UyLmlzU3ViamVjdCkgcmV0dXJuO1xuICAgIHZhciBpbnRlciA9IGludGVyc2VjdGlvbihcbiAgICAgIHNlMS5wb2ludCwgc2UxLm90aGVyRXZlbnQucG9pbnQsXG4gICAgICBzZTIucG9pbnQsIHNlMi5vdGhlckV2ZW50LnBvaW50XG4gICAgKTtcblxuICAgIHZhciBuaW50ZXJzZWN0aW9ucyA9IGludGVyID8gaW50ZXIubGVuZ3RoIDogMDtcbiAgICBpZiAobmludGVyc2VjdGlvbnMgPT09IDApIHsgcmV0dXJuIDA7IH0gLy8gbm8gaW50ZXJzZWN0aW9uXG5cbiAgICAvLyB0aGUgbGluZSBzZWdtZW50cyBpbnRlcnNlY3QgYXQgYW4gZW5kcG9pbnQgb2YgYm90aCBsaW5lIHNlZ21lbnRzXG4gICAgaWYgKChuaW50ZXJzZWN0aW9ucyA9PT0gMSkgJiZcbiAgICAgICAgKGVxdWFscyhzZTEucG9pbnQsIHNlMi5wb2ludCkgfHxcbiAgICAgICAgIGVxdWFscyhzZTEub3RoZXJFdmVudC5wb2ludCwgc2UyLm90aGVyRXZlbnQucG9pbnQpKSkge1xuICAgICAgcmV0dXJuIDA7XG4gICAgfVxuXG4gICAgaWYgKG5pbnRlcnNlY3Rpb25zID09PSAyICYmIHNlMS5pc1N1YmplY3QgPT09IHNlMi5pc1N1YmplY3QpIHtcbiAgICAgIC8vIGlmKHNlMS5jb250b3VySWQgPT09IHNlMi5jb250b3VySWQpe1xuICAgICAgLy8gY29uc29sZS53YXJuKCdFZGdlcyBvZiB0aGUgc2FtZSBwb2x5Z29uIG92ZXJsYXAnLFxuICAgICAgLy8gICBzZTEucG9pbnQsIHNlMS5vdGhlckV2ZW50LnBvaW50LCBzZTIucG9pbnQsIHNlMi5vdGhlckV2ZW50LnBvaW50KTtcbiAgICAgIC8vIH1cbiAgICAgIC8vdGhyb3cgbmV3IEVycm9yKCdFZGdlcyBvZiB0aGUgc2FtZSBwb2x5Z29uIG92ZXJsYXAnKTtcbiAgICAgIHJldHVybiAwO1xuICAgIH1cblxuICAgIC8vIFRoZSBsaW5lIHNlZ21lbnRzIGFzc29jaWF0ZWQgdG8gc2UxIGFuZCBzZTIgaW50ZXJzZWN0XG4gICAgaWYgKG5pbnRlcnNlY3Rpb25zID09PSAxKSB7XG5cbiAgICAgIC8vIGlmIHRoZSBpbnRlcnNlY3Rpb24gcG9pbnQgaXMgbm90IGFuIGVuZHBvaW50IG9mIHNlMVxuICAgICAgaWYgKCFlcXVhbHMoc2UxLnBvaW50LCBpbnRlclswXSkgJiYgIWVxdWFscyhzZTEub3RoZXJFdmVudC5wb2ludCwgaW50ZXJbMF0pKSB7XG4gICAgICAgIGRpdmlkZVNlZ21lbnQoc2UxLCBpbnRlclswXSwgcXVldWUpO1xuICAgICAgfVxuXG4gICAgICAvLyBpZiB0aGUgaW50ZXJzZWN0aW9uIHBvaW50IGlzIG5vdCBhbiBlbmRwb2ludCBvZiBzZTJcbiAgICAgIGlmICghZXF1YWxzKHNlMi5wb2ludCwgaW50ZXJbMF0pICYmICFlcXVhbHMoc2UyLm90aGVyRXZlbnQucG9pbnQsIGludGVyWzBdKSkge1xuICAgICAgICBkaXZpZGVTZWdtZW50KHNlMiwgaW50ZXJbMF0sIHF1ZXVlKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiAxO1xuICAgIH1cblxuICAgIC8vIFRoZSBsaW5lIHNlZ21lbnRzIGFzc29jaWF0ZWQgdG8gc2UxIGFuZCBzZTIgb3ZlcmxhcFxuICAgIHZhciBldmVudHMgICAgICAgID0gW107XG4gICAgdmFyIGxlZnRDb2luY2lkZSAgPSBmYWxzZTtcbiAgICB2YXIgcmlnaHRDb2luY2lkZSA9IGZhbHNlO1xuXG4gICAgaWYgKGVxdWFscyhzZTEucG9pbnQsIHNlMi5wb2ludCkpIHtcbiAgICAgIGxlZnRDb2luY2lkZSA9IHRydWU7IC8vIGxpbmtlZFxuICAgIH0gZWxzZSBpZiAoY29tcGFyZUV2ZW50cyhzZTEsIHNlMikgPT09IDEpIHtcbiAgICAgIGV2ZW50cy5wdXNoKHNlMiwgc2UxKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZXZlbnRzLnB1c2goc2UxLCBzZTIpO1xuICAgIH1cblxuICAgIGlmIChlcXVhbHMoc2UxLm90aGVyRXZlbnQucG9pbnQsIHNlMi5vdGhlckV2ZW50LnBvaW50KSkge1xuICAgICAgcmlnaHRDb2luY2lkZSA9IHRydWU7XG4gICAgfSBlbHNlIGlmIChjb21wYXJlRXZlbnRzKHNlMS5vdGhlckV2ZW50LCBzZTIub3RoZXJFdmVudCkgPT09IDEpIHtcbiAgICAgIGV2ZW50cy5wdXNoKHNlMi5vdGhlckV2ZW50LCBzZTEub3RoZXJFdmVudCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGV2ZW50cy5wdXNoKHNlMS5vdGhlckV2ZW50LCBzZTIub3RoZXJFdmVudCk7XG4gICAgfVxuXG4gICAgaWYgKChsZWZ0Q29pbmNpZGUgJiYgcmlnaHRDb2luY2lkZSkgfHwgbGVmdENvaW5jaWRlKSB7XG4gICAgICAvLyBib3RoIGxpbmUgc2VnbWVudHMgYXJlIGVxdWFsIG9yIHNoYXJlIHRoZSBsZWZ0IGVuZHBvaW50XG4gICAgICBzZTIudHlwZSA9IE5PTl9DT05UUklCVVRJTkc7XG4gICAgICBzZTEudHlwZSA9IChzZTIuaW5PdXQgPT09IHNlMS5pbk91dClcbiAgICAgICAgPyBTQU1FX1RSQU5TSVRJT04gOiBESUZGRVJFTlRfVFJBTlNJVElPTjtcblxuICAgICAgaWYgKGxlZnRDb2luY2lkZSAmJiAhcmlnaHRDb2luY2lkZSkge1xuICAgICAgICAvLyBob25lc3RseSBubyBpZGVhLCBidXQgY2hhbmdpbmcgZXZlbnRzIHNlbGVjdGlvbiBmcm9tIFsyLCAxXVxuICAgICAgICAvLyB0byBbMCwgMV0gZml4ZXMgdGhlIG92ZXJsYXBwaW5nIHNlbGYtaW50ZXJzZWN0aW5nIHBvbHlnb25zIGlzc3VlXG4gICAgICAgIGRpdmlkZVNlZ21lbnQoZXZlbnRzWzFdLm90aGVyRXZlbnQsIGV2ZW50c1swXS5wb2ludCwgcXVldWUpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIDI7XG4gICAgfVxuXG4gICAgLy8gdGhlIGxpbmUgc2VnbWVudHMgc2hhcmUgdGhlIHJpZ2h0IGVuZHBvaW50XG4gICAgaWYgKHJpZ2h0Q29pbmNpZGUpIHtcbiAgICAgIGRpdmlkZVNlZ21lbnQoZXZlbnRzWzBdLCBldmVudHNbMV0ucG9pbnQsIHF1ZXVlKTtcbiAgICAgIHJldHVybiAzO1xuICAgIH1cblxuICAgIC8vIG5vIGxpbmUgc2VnbWVudCBpbmNsdWRlcyB0b3RhbGx5IHRoZSBvdGhlciBvbmVcbiAgICBpZiAoZXZlbnRzWzBdICE9PSBldmVudHNbM10ub3RoZXJFdmVudCkge1xuICAgICAgZGl2aWRlU2VnbWVudChldmVudHNbMF0sIGV2ZW50c1sxXS5wb2ludCwgcXVldWUpO1xuICAgICAgZGl2aWRlU2VnbWVudChldmVudHNbMV0sIGV2ZW50c1syXS5wb2ludCwgcXVldWUpO1xuICAgICAgcmV0dXJuIDM7XG4gICAgfVxuXG4gICAgLy8gb25lIGxpbmUgc2VnbWVudCBpbmNsdWRlcyB0aGUgb3RoZXIgb25lXG4gICAgZGl2aWRlU2VnbWVudChldmVudHNbMF0sIGV2ZW50c1sxXS5wb2ludCwgcXVldWUpO1xuICAgIGRpdmlkZVNlZ21lbnQoZXZlbnRzWzNdLm90aGVyRXZlbnQsIGV2ZW50c1syXS5wb2ludCwgcXVldWUpO1xuXG4gICAgcmV0dXJuIDM7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtICB7U3dlZXBFdmVudH0gbGUxXG4gICAqIEBwYXJhbSAge1N3ZWVwRXZlbnR9IGxlMlxuICAgKiBAcmV0dXJuIHtOdW1iZXJ9XG4gICAqL1xuICBmdW5jdGlvbiBjb21wYXJlU2VnbWVudHMobGUxLCBsZTIpIHtcbiAgICBpZiAobGUxID09PSBsZTIpIHsgcmV0dXJuIDA7IH1cblxuICAgIC8vIFNlZ21lbnRzIGFyZSBub3QgY29sbGluZWFyXG4gICAgaWYgKHNpZ25lZEFyZWEobGUxLnBvaW50LCBsZTEub3RoZXJFdmVudC5wb2ludCwgbGUyLnBvaW50KSAhPT0gMCB8fFxuICAgICAgc2lnbmVkQXJlYShsZTEucG9pbnQsIGxlMS5vdGhlckV2ZW50LnBvaW50LCBsZTIub3RoZXJFdmVudC5wb2ludCkgIT09IDApIHtcblxuICAgICAgLy8gSWYgdGhleSBzaGFyZSB0aGVpciBsZWZ0IGVuZHBvaW50IHVzZSB0aGUgcmlnaHQgZW5kcG9pbnQgdG8gc29ydFxuICAgICAgaWYgKGVxdWFscyhsZTEucG9pbnQsIGxlMi5wb2ludCkpIHsgcmV0dXJuIGxlMS5pc0JlbG93KGxlMi5vdGhlckV2ZW50LnBvaW50KSA/IC0xIDogMTsgfVxuXG4gICAgICAvLyBEaWZmZXJlbnQgbGVmdCBlbmRwb2ludDogdXNlIHRoZSBsZWZ0IGVuZHBvaW50IHRvIHNvcnRcbiAgICAgIGlmIChsZTEucG9pbnRbMF0gPT09IGxlMi5wb2ludFswXSkgeyByZXR1cm4gbGUxLnBvaW50WzFdIDwgbGUyLnBvaW50WzFdID8gLTEgOiAxOyB9XG5cbiAgICAgIC8vIGhhcyB0aGUgbGluZSBzZWdtZW50IGFzc29jaWF0ZWQgdG8gZTEgYmVlbiBpbnNlcnRlZFxuICAgICAgLy8gaW50byBTIGFmdGVyIHRoZSBsaW5lIHNlZ21lbnQgYXNzb2NpYXRlZCB0byBlMiA/XG4gICAgICBpZiAoY29tcGFyZUV2ZW50cyhsZTEsIGxlMikgPT09IDEpIHsgcmV0dXJuIGxlMi5pc0Fib3ZlKGxlMS5wb2ludCkgPyAtMSA6IDE7IH1cblxuICAgICAgLy8gVGhlIGxpbmUgc2VnbWVudCBhc3NvY2lhdGVkIHRvIGUyIGhhcyBiZWVuIGluc2VydGVkXG4gICAgICAvLyBpbnRvIFMgYWZ0ZXIgdGhlIGxpbmUgc2VnbWVudCBhc3NvY2lhdGVkIHRvIGUxXG4gICAgICByZXR1cm4gbGUxLmlzQmVsb3cobGUyLnBvaW50KSA/IC0xIDogMTtcbiAgICB9XG5cbiAgICBpZiAobGUxLmlzU3ViamVjdCA9PT0gbGUyLmlzU3ViamVjdCkgeyAvLyBzYW1lIHBvbHlnb25cbiAgICAgIHZhciBwMSA9IGxlMS5wb2ludCwgcDIgPSBsZTIucG9pbnQ7XG4gICAgICBpZiAocDFbMF0gPT09IHAyWzBdICYmIHAxWzFdID09PSBwMlsxXS8qZXF1YWxzKGxlMS5wb2ludCwgbGUyLnBvaW50KSovKSB7XG4gICAgICAgIHAxID0gbGUxLm90aGVyRXZlbnQucG9pbnQ7IHAyID0gbGUyLm90aGVyRXZlbnQucG9pbnQ7XG4gICAgICAgIGlmIChwMVswXSA9PT0gcDJbMF0gJiYgcDFbMV0gPT09IHAyWzFdKSB7IHJldHVybiAwOyB9XG4gICAgICAgIGVsc2UgeyByZXR1cm4gbGUxLmNvbnRvdXJJZCA+IGxlMi5jb250b3VySWQgPyAxIDogLTE7IH1cbiAgICAgIH1cbiAgICB9IGVsc2UgeyAvLyBTZWdtZW50cyBhcmUgY29sbGluZWFyLCBidXQgYmVsb25nIHRvIHNlcGFyYXRlIHBvbHlnb25zXG4gICAgICByZXR1cm4gbGUxLmlzU3ViamVjdCA/IC0xIDogMTtcbiAgICB9XG5cbiAgICByZXR1cm4gY29tcGFyZUV2ZW50cyhsZTEsIGxlMikgPT09IDEgPyAxIDogLTE7XG4gIH1cblxuICBmdW5jdGlvbiBzdWJkaXZpZGUoZXZlbnRRdWV1ZSwgc3ViamVjdCwgY2xpcHBpbmcsIHNiYm94LCBjYmJveCwgb3BlcmF0aW9uKSB7XG4gICAgdmFyIHN3ZWVwTGluZSA9IG5ldyBTcGxheVRyZWUoY29tcGFyZVNlZ21lbnRzKTtcbiAgICB2YXIgc29ydGVkRXZlbnRzID0gW107XG5cbiAgICB2YXIgcmlnaHRib3VuZCA9IE1hdGgubWluKHNiYm94WzJdLCBjYmJveFsyXSk7XG5cbiAgICB2YXIgcHJldiwgbmV4dCwgYmVnaW47XG5cbiAgICB3aGlsZSAoZXZlbnRRdWV1ZS5sZW5ndGggIT09IDApIHtcbiAgICAgIHZhciBldmVudCA9IGV2ZW50UXVldWUucG9wKCk7XG4gICAgICBzb3J0ZWRFdmVudHMucHVzaChldmVudCk7XG5cbiAgICAgIC8vIG9wdGltaXphdGlvbiBieSBiYm94ZXMgZm9yIGludGVyc2VjdGlvbiBhbmQgZGlmZmVyZW5jZSBnb2VzIGhlcmVcbiAgICAgIGlmICgob3BlcmF0aW9uID09PSBJTlRFUlNFQ1RJT04gJiYgZXZlbnQucG9pbnRbMF0gPiByaWdodGJvdW5kKSB8fFxuICAgICAgICAgIChvcGVyYXRpb24gPT09IERJRkZFUkVOQ0UgICAmJiBldmVudC5wb2ludFswXSA+IHNiYm94WzJdKSkge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cblxuICAgICAgaWYgKGV2ZW50LmxlZnQpIHtcbiAgICAgICAgbmV4dCAgPSBwcmV2ID0gc3dlZXBMaW5lLmluc2VydChldmVudCk7XG4gICAgICAgIGJlZ2luID0gc3dlZXBMaW5lLm1pbk5vZGUoKTtcblxuICAgICAgICBpZiAocHJldiAhPT0gYmVnaW4pIHsgcHJldiA9IHN3ZWVwTGluZS5wcmV2KHByZXYpOyB9XG4gICAgICAgIGVsc2UgICAgICAgICAgICAgICAgeyBwcmV2ID0gbnVsbDsgfVxuXG4gICAgICAgIG5leHQgPSBzd2VlcExpbmUubmV4dChuZXh0KTtcblxuICAgICAgICB2YXIgcHJldkV2ZW50ID0gcHJldiA/IHByZXYua2V5IDogbnVsbDtcbiAgICAgICAgdmFyIHByZXZwcmV2RXZlbnQgPSAodm9pZCAwKTtcbiAgICAgICAgY29tcHV0ZUZpZWxkcyhldmVudCwgcHJldkV2ZW50LCBvcGVyYXRpb24pO1xuICAgICAgICBpZiAobmV4dCkge1xuICAgICAgICAgIGlmIChwb3NzaWJsZUludGVyc2VjdGlvbihldmVudCwgbmV4dC5rZXksIGV2ZW50UXVldWUpID09PSAyKSB7XG4gICAgICAgICAgICBjb21wdXRlRmllbGRzKGV2ZW50LCBwcmV2RXZlbnQsIG9wZXJhdGlvbik7XG4gICAgICAgICAgICBjb21wdXRlRmllbGRzKGV2ZW50LCBuZXh0LmtleSwgb3BlcmF0aW9uKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAocHJldikge1xuICAgICAgICAgIGlmIChwb3NzaWJsZUludGVyc2VjdGlvbihwcmV2LmtleSwgZXZlbnQsIGV2ZW50UXVldWUpID09PSAyKSB7XG4gICAgICAgICAgICB2YXIgcHJldnByZXYgPSBwcmV2O1xuICAgICAgICAgICAgaWYgKHByZXZwcmV2ICE9PSBiZWdpbikgeyBwcmV2cHJldiA9IHN3ZWVwTGluZS5wcmV2KHByZXZwcmV2KTsgfVxuICAgICAgICAgICAgZWxzZSAgICAgICAgICAgICAgICAgICAgeyBwcmV2cHJldiA9IG51bGw7IH1cblxuICAgICAgICAgICAgcHJldnByZXZFdmVudCA9IHByZXZwcmV2ID8gcHJldnByZXYua2V5IDogbnVsbDtcbiAgICAgICAgICAgIGNvbXB1dGVGaWVsZHMocHJldkV2ZW50LCBwcmV2cHJldkV2ZW50LCBvcGVyYXRpb24pO1xuICAgICAgICAgICAgY29tcHV0ZUZpZWxkcyhldmVudCwgICAgIHByZXZFdmVudCwgICAgIG9wZXJhdGlvbik7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBldmVudCA9IGV2ZW50Lm90aGVyRXZlbnQ7XG4gICAgICAgIG5leHQgPSBwcmV2ID0gc3dlZXBMaW5lLmZpbmQoZXZlbnQpO1xuXG4gICAgICAgIGlmIChwcmV2ICYmIG5leHQpIHtcblxuICAgICAgICAgIGlmIChwcmV2ICE9PSBiZWdpbikgeyBwcmV2ID0gc3dlZXBMaW5lLnByZXYocHJldik7IH1cbiAgICAgICAgICBlbHNlICAgICAgICAgICAgICAgIHsgcHJldiA9IG51bGw7IH1cblxuICAgICAgICAgIG5leHQgPSBzd2VlcExpbmUubmV4dChuZXh0KTtcbiAgICAgICAgICBzd2VlcExpbmUucmVtb3ZlKGV2ZW50KTtcblxuICAgICAgICAgIGlmIChuZXh0ICYmIHByZXYpIHtcbiAgICAgICAgICAgIHBvc3NpYmxlSW50ZXJzZWN0aW9uKHByZXYua2V5LCBuZXh0LmtleSwgZXZlbnRRdWV1ZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBzb3J0ZWRFdmVudHM7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtICB7QXJyYXkuPFN3ZWVwRXZlbnQ+fSBzb3J0ZWRFdmVudHNcbiAgICogQHJldHVybiB7QXJyYXkuPFN3ZWVwRXZlbnQ+fVxuICAgKi9cbiAgZnVuY3Rpb24gb3JkZXJFdmVudHMoc29ydGVkRXZlbnRzKSB7XG4gICAgdmFyIGV2ZW50LCBpLCBsZW4sIHRtcDtcbiAgICB2YXIgcmVzdWx0RXZlbnRzID0gW107XG4gICAgZm9yIChpID0gMCwgbGVuID0gc29ydGVkRXZlbnRzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICBldmVudCA9IHNvcnRlZEV2ZW50c1tpXTtcbiAgICAgIGlmICgoZXZlbnQubGVmdCAmJiBldmVudC5pblJlc3VsdCkgfHxcbiAgICAgICAgKCFldmVudC5sZWZ0ICYmIGV2ZW50Lm90aGVyRXZlbnQuaW5SZXN1bHQpKSB7XG4gICAgICAgIHJlc3VsdEV2ZW50cy5wdXNoKGV2ZW50KTtcbiAgICAgIH1cbiAgICB9XG4gICAgLy8gRHVlIHRvIG92ZXJsYXBwaW5nIGVkZ2VzIHRoZSByZXN1bHRFdmVudHMgYXJyYXkgY2FuIGJlIG5vdCB3aG9sbHkgc29ydGVkXG4gICAgdmFyIHNvcnRlZCA9IGZhbHNlO1xuICAgIHdoaWxlICghc29ydGVkKSB7XG4gICAgICBzb3J0ZWQgPSB0cnVlO1xuICAgICAgZm9yIChpID0gMCwgbGVuID0gcmVzdWx0RXZlbnRzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgIGlmICgoaSArIDEpIDwgbGVuICYmXG4gICAgICAgICAgY29tcGFyZUV2ZW50cyhyZXN1bHRFdmVudHNbaV0sIHJlc3VsdEV2ZW50c1tpICsgMV0pID09PSAxKSB7XG4gICAgICAgICAgdG1wID0gcmVzdWx0RXZlbnRzW2ldO1xuICAgICAgICAgIHJlc3VsdEV2ZW50c1tpXSA9IHJlc3VsdEV2ZW50c1tpICsgMV07XG4gICAgICAgICAgcmVzdWx0RXZlbnRzW2kgKyAxXSA9IHRtcDtcbiAgICAgICAgICBzb3J0ZWQgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuXG4gICAgZm9yIChpID0gMCwgbGVuID0gcmVzdWx0RXZlbnRzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICBldmVudCA9IHJlc3VsdEV2ZW50c1tpXTtcbiAgICAgIGV2ZW50LnBvcyA9IGk7XG4gICAgfVxuXG4gICAgLy8gaW1hZ2luZSwgdGhlIHJpZ2h0IGV2ZW50IGlzIGZvdW5kIGluIHRoZSBiZWdpbm5pbmcgb2YgdGhlIHF1ZXVlLFxuICAgIC8vIHdoZW4gaGlzIGxlZnQgY291bnRlcnBhcnQgaXMgbm90IG1hcmtlZCB5ZXRcbiAgICBmb3IgKGkgPSAwLCBsZW4gPSByZXN1bHRFdmVudHMubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgIGV2ZW50ID0gcmVzdWx0RXZlbnRzW2ldO1xuICAgICAgaWYgKCFldmVudC5sZWZ0KSB7XG4gICAgICAgIHRtcCA9IGV2ZW50LnBvcztcbiAgICAgICAgZXZlbnQucG9zID0gZXZlbnQub3RoZXJFdmVudC5wb3M7XG4gICAgICAgIGV2ZW50Lm90aGVyRXZlbnQucG9zID0gdG1wO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiByZXN1bHRFdmVudHM7XG4gIH1cblxuXG4gIC8qKlxuICAgKiBAcGFyYW0gIHtOdW1iZXJ9IHBvc1xuICAgKiBAcGFyYW0gIHtBcnJheS48U3dlZXBFdmVudD59IHJlc3VsdEV2ZW50c1xuICAgKiBAcGFyYW0gIHtPYmplY3Q+fSAgICBwcm9jZXNzZWRcbiAgICogQHJldHVybiB7TnVtYmVyfVxuICAgKi9cbiAgZnVuY3Rpb24gbmV4dFBvcyhwb3MsIHJlc3VsdEV2ZW50cywgcHJvY2Vzc2VkLCBvcmlnSW5kZXgpIHtcbiAgICB2YXIgbmV3UG9zID0gcG9zICsgMTtcbiAgICB2YXIgbGVuZ3RoID0gcmVzdWx0RXZlbnRzLmxlbmd0aDtcbiAgICBpZiAobmV3UG9zID4gbGVuZ3RoIC0gMSkgeyByZXR1cm4gcG9zIC0gMTsgfVxuICAgIHZhciBwICA9IHJlc3VsdEV2ZW50c1twb3NdLnBvaW50O1xuICAgIHZhciBwMSA9IHJlc3VsdEV2ZW50c1tuZXdQb3NdLnBvaW50O1xuXG5cbiAgICAvLyB3aGlsZSBpbiByYW5nZSBhbmQgbm90IHRoZSBjdXJyZW50IG9uZSBieSB2YWx1ZVxuICAgIHdoaWxlIChuZXdQb3MgPCBsZW5ndGggJiYgcDFbMF0gPT09IHBbMF0gJiYgcDFbMV0gPT09IHBbMV0pIHtcbiAgICAgIGlmICghcHJvY2Vzc2VkW25ld1Bvc10pIHtcbiAgICAgICAgcmV0dXJuIG5ld1BvcztcbiAgICAgIH0gZWxzZSAgIHtcbiAgICAgICAgbmV3UG9zKys7XG4gICAgICB9XG4gICAgICBwMSA9IHJlc3VsdEV2ZW50c1tuZXdQb3NdLnBvaW50O1xuICAgIH1cblxuICAgIG5ld1BvcyA9IHBvcyAtIDE7XG5cbiAgICB3aGlsZSAocHJvY2Vzc2VkW25ld1Bvc10gJiYgbmV3UG9zID49IG9yaWdJbmRleCkge1xuICAgICAgbmV3UG9zLS07XG4gICAgfVxuICAgIHJldHVybiBuZXdQb3M7XG4gIH1cblxuXG4gIC8qKlxuICAgKiBAcGFyYW0gIHtBcnJheS48U3dlZXBFdmVudD59IHNvcnRlZEV2ZW50c1xuICAgKiBAcmV0dXJuIHtBcnJheS48Kj59IHBvbHlnb25zXG4gICAqL1xuICBmdW5jdGlvbiBjb25uZWN0RWRnZXMoc29ydGVkRXZlbnRzLCBvcGVyYXRpb24pIHtcbiAgICB2YXIgaSwgbGVuO1xuICAgIHZhciByZXN1bHRFdmVudHMgPSBvcmRlckV2ZW50cyhzb3J0ZWRFdmVudHMpO1xuXG4gICAgLy8gXCJmYWxzZVwiLWZpbGxlZCBhcnJheVxuICAgIHZhciBwcm9jZXNzZWQgPSB7fTtcbiAgICB2YXIgcmVzdWx0ID0gW107XG4gICAgdmFyIGV2ZW50O1xuXG4gICAgZm9yIChpID0gMCwgbGVuID0gcmVzdWx0RXZlbnRzLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICBpZiAocHJvY2Vzc2VkW2ldKSB7IGNvbnRpbnVlOyB9XG4gICAgICB2YXIgY29udG91ciA9IFtbXV07XG5cbiAgICAgIGlmICghcmVzdWx0RXZlbnRzW2ldLmlzRXh0ZXJpb3JSaW5nKSB7XG4gICAgICAgIGlmIChvcGVyYXRpb24gPT09IERJRkZFUkVOQ0UgJiYgIXJlc3VsdEV2ZW50c1tpXS5pc1N1YmplY3QgJiYgcmVzdWx0Lmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgIHJlc3VsdC5wdXNoKGNvbnRvdXIpO1xuICAgICAgICB9IGVsc2UgaWYgKHJlc3VsdC5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICByZXN1bHQucHVzaChbW2NvbnRvdXJdXSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmVzdWx0W3Jlc3VsdC5sZW5ndGggLSAxXS5wdXNoKGNvbnRvdXJbMF0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKG9wZXJhdGlvbiA9PT0gRElGRkVSRU5DRSAmJiAhcmVzdWx0RXZlbnRzW2ldLmlzU3ViamVjdCAmJiByZXN1bHQubGVuZ3RoID4gMSkge1xuICAgICAgICByZXN1bHRbcmVzdWx0Lmxlbmd0aCAtIDFdLnB1c2goY29udG91clswXSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXN1bHQucHVzaChjb250b3VyKTtcbiAgICAgIH1cblxuICAgICAgdmFyIHJpbmdJZCA9IHJlc3VsdC5sZW5ndGggLSAxO1xuICAgICAgdmFyIHBvcyA9IGk7XG5cbiAgICAgIHZhciBpbml0aWFsID0gcmVzdWx0RXZlbnRzW2ldLnBvaW50O1xuICAgICAgY29udG91clswXS5wdXNoKGluaXRpYWwpO1xuXG4gICAgICB3aGlsZSAocG9zID49IGkpIHtcbiAgICAgICAgZXZlbnQgPSByZXN1bHRFdmVudHNbcG9zXTtcbiAgICAgICAgcHJvY2Vzc2VkW3Bvc10gPSB0cnVlO1xuXG4gICAgICAgIGlmIChldmVudC5sZWZ0KSB7XG4gICAgICAgICAgZXZlbnQucmVzdWx0SW5PdXQgPSBmYWxzZTtcbiAgICAgICAgICBldmVudC5jb250b3VySWQgICA9IHJpbmdJZDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBldmVudC5vdGhlckV2ZW50LnJlc3VsdEluT3V0ID0gdHJ1ZTtcbiAgICAgICAgICBldmVudC5vdGhlckV2ZW50LmNvbnRvdXJJZCAgID0gcmluZ0lkO1xuICAgICAgICB9XG5cbiAgICAgICAgcG9zID0gZXZlbnQucG9zO1xuICAgICAgICBwcm9jZXNzZWRbcG9zXSA9IHRydWU7XG4gICAgICAgIGNvbnRvdXJbMF0ucHVzaChyZXN1bHRFdmVudHNbcG9zXS5wb2ludCk7XG4gICAgICAgIHBvcyA9IG5leHRQb3MocG9zLCByZXN1bHRFdmVudHMsIHByb2Nlc3NlZCwgaSk7XG4gICAgICB9XG5cbiAgICAgIHBvcyA9IHBvcyA9PT0gLTEgPyBpIDogcG9zO1xuXG4gICAgICBldmVudCA9IHJlc3VsdEV2ZW50c1twb3NdO1xuICAgICAgcHJvY2Vzc2VkW3Bvc10gPSBwcm9jZXNzZWRbZXZlbnQucG9zXSA9IHRydWU7XG4gICAgICBldmVudC5vdGhlckV2ZW50LnJlc3VsdEluT3V0ID0gdHJ1ZTtcbiAgICAgIGV2ZW50Lm90aGVyRXZlbnQuY29udG91cklkICAgPSByaW5nSWQ7XG4gICAgfVxuXG4gICAgLy8gSGFuZGxlIGlmIHRoZSByZXN1bHQgaXMgYSBwb2x5Z29uIChlZyBub3QgbXVsdGlwb2x5KVxuICAgIC8vIENvbW1lbnRlZCBpdCBhZ2FpbiwgbGV0J3Mgc2VlIHdoYXQgZG8gd2UgbWVhbiBieSB0aGF0XG4gICAgLy8gaWYgKHJlc3VsdC5sZW5ndGggPT09IDEpIHJlc3VsdCA9IHJlc3VsdFswXTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgdmFyIHRpbnlxdWV1ZSA9IFRpbnlRdWV1ZTtcbiAgdmFyIGRlZmF1bHRfMSA9IFRpbnlRdWV1ZTtcblxuICBmdW5jdGlvbiBUaW55UXVldWUoZGF0YSwgY29tcGFyZSkge1xuICAgICAgdmFyIHRoaXMkMSA9IHRoaXM7XG5cbiAgICAgIGlmICghKHRoaXMgaW5zdGFuY2VvZiBUaW55UXVldWUpKSB7IHJldHVybiBuZXcgVGlueVF1ZXVlKGRhdGEsIGNvbXBhcmUpOyB9XG5cbiAgICAgIHRoaXMuZGF0YSA9IGRhdGEgfHwgW107XG4gICAgICB0aGlzLmxlbmd0aCA9IHRoaXMuZGF0YS5sZW5ndGg7XG4gICAgICB0aGlzLmNvbXBhcmUgPSBjb21wYXJlIHx8IGRlZmF1bHRDb21wYXJlO1xuXG4gICAgICBpZiAodGhpcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgZm9yICh2YXIgaSA9ICh0aGlzLmxlbmd0aCA+PiAxKSAtIDE7IGkgPj0gMDsgaS0tKSB7IHRoaXMkMS5fZG93bihpKTsgfVxuICAgICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gZGVmYXVsdENvbXBhcmUoYSwgYikge1xuICAgICAgcmV0dXJuIGEgPCBiID8gLTEgOiBhID4gYiA/IDEgOiAwO1xuICB9XG5cbiAgVGlueVF1ZXVlLnByb3RvdHlwZSA9IHtcblxuICAgICAgcHVzaDogZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgICB0aGlzLmRhdGEucHVzaChpdGVtKTtcbiAgICAgICAgICB0aGlzLmxlbmd0aCsrO1xuICAgICAgICAgIHRoaXMuX3VwKHRoaXMubGVuZ3RoIC0gMSk7XG4gICAgICB9LFxuXG4gICAgICBwb3A6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBpZiAodGhpcy5sZW5ndGggPT09IDApIHsgcmV0dXJuIHVuZGVmaW5lZDsgfVxuXG4gICAgICAgICAgdmFyIHRvcCA9IHRoaXMuZGF0YVswXTtcbiAgICAgICAgICB0aGlzLmxlbmd0aC0tO1xuXG4gICAgICAgICAgaWYgKHRoaXMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICB0aGlzLmRhdGFbMF0gPSB0aGlzLmRhdGFbdGhpcy5sZW5ndGhdO1xuICAgICAgICAgICAgICB0aGlzLl9kb3duKDApO1xuICAgICAgICAgIH1cbiAgICAgICAgICB0aGlzLmRhdGEucG9wKCk7XG5cbiAgICAgICAgICByZXR1cm4gdG9wO1xuICAgICAgfSxcblxuICAgICAgcGVlazogZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHJldHVybiB0aGlzLmRhdGFbMF07XG4gICAgICB9LFxuXG4gICAgICBfdXA6IGZ1bmN0aW9uIChwb3MpIHtcbiAgICAgICAgICB2YXIgZGF0YSA9IHRoaXMuZGF0YTtcbiAgICAgICAgICB2YXIgY29tcGFyZSA9IHRoaXMuY29tcGFyZTtcbiAgICAgICAgICB2YXIgaXRlbSA9IGRhdGFbcG9zXTtcblxuICAgICAgICAgIHdoaWxlIChwb3MgPiAwKSB7XG4gICAgICAgICAgICAgIHZhciBwYXJlbnQgPSAocG9zIC0gMSkgPj4gMTtcbiAgICAgICAgICAgICAgdmFyIGN1cnJlbnQgPSBkYXRhW3BhcmVudF07XG4gICAgICAgICAgICAgIGlmIChjb21wYXJlKGl0ZW0sIGN1cnJlbnQpID49IDApIHsgYnJlYWs7IH1cbiAgICAgICAgICAgICAgZGF0YVtwb3NdID0gY3VycmVudDtcbiAgICAgICAgICAgICAgcG9zID0gcGFyZW50O1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGRhdGFbcG9zXSA9IGl0ZW07XG4gICAgICB9LFxuXG4gICAgICBfZG93bjogZnVuY3Rpb24gKHBvcykge1xuICAgICAgICAgIHZhciB0aGlzJDEgPSB0aGlzO1xuXG4gICAgICAgICAgdmFyIGRhdGEgPSB0aGlzLmRhdGE7XG4gICAgICAgICAgdmFyIGNvbXBhcmUgPSB0aGlzLmNvbXBhcmU7XG4gICAgICAgICAgdmFyIGhhbGZMZW5ndGggPSB0aGlzLmxlbmd0aCA+PiAxO1xuICAgICAgICAgIHZhciBpdGVtID0gZGF0YVtwb3NdO1xuXG4gICAgICAgICAgd2hpbGUgKHBvcyA8IGhhbGZMZW5ndGgpIHtcbiAgICAgICAgICAgICAgdmFyIGxlZnQgPSAocG9zIDw8IDEpICsgMTtcbiAgICAgICAgICAgICAgdmFyIHJpZ2h0ID0gbGVmdCArIDE7XG4gICAgICAgICAgICAgIHZhciBiZXN0ID0gZGF0YVtsZWZ0XTtcblxuICAgICAgICAgICAgICBpZiAocmlnaHQgPCB0aGlzJDEubGVuZ3RoICYmIGNvbXBhcmUoZGF0YVtyaWdodF0sIGJlc3QpIDwgMCkge1xuICAgICAgICAgICAgICAgICAgbGVmdCA9IHJpZ2h0O1xuICAgICAgICAgICAgICAgICAgYmVzdCA9IGRhdGFbcmlnaHRdO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGlmIChjb21wYXJlKGJlc3QsIGl0ZW0pID49IDApIHsgYnJlYWs7IH1cblxuICAgICAgICAgICAgICBkYXRhW3Bvc10gPSBiZXN0O1xuICAgICAgICAgICAgICBwb3MgPSBsZWZ0O1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGRhdGFbcG9zXSA9IGl0ZW07XG4gICAgICB9XG4gIH07XG4gIHRpbnlxdWV1ZS5kZWZhdWx0ID0gZGVmYXVsdF8xO1xuXG4gIHZhciBtYXggPSBNYXRoLm1heDtcbiAgdmFyIG1pbiA9IE1hdGgubWluO1xuXG4gIHZhciBjb250b3VySWQgPSAwO1xuXG5cbiAgZnVuY3Rpb24gcHJvY2Vzc1BvbHlnb24oY29udG91ck9ySG9sZSwgaXNTdWJqZWN0LCBkZXB0aCwgUSwgYmJveCwgaXNFeHRlcmlvclJpbmcpIHtcbiAgICB2YXIgaSwgbGVuLCBzMSwgczIsIGUxLCBlMjtcbiAgICBmb3IgKGkgPSAwLCBsZW4gPSBjb250b3VyT3JIb2xlLmxlbmd0aCAtIDE7IGkgPCBsZW47IGkrKykge1xuICAgICAgczEgPSBjb250b3VyT3JIb2xlW2ldO1xuICAgICAgczIgPSBjb250b3VyT3JIb2xlW2kgKyAxXTtcbiAgICAgIGUxID0gbmV3IFN3ZWVwRXZlbnQoczEsIGZhbHNlLCB1bmRlZmluZWQsIGlzU3ViamVjdCk7XG4gICAgICBlMiA9IG5ldyBTd2VlcEV2ZW50KHMyLCBmYWxzZSwgZTEsICAgICAgICBpc1N1YmplY3QpO1xuICAgICAgZTEub3RoZXJFdmVudCA9IGUyO1xuXG4gICAgICBpZiAoczFbMF0gPT09IHMyWzBdICYmIHMxWzFdID09PSBzMlsxXSkge1xuICAgICAgICBjb250aW51ZTsgLy8gc2tpcCBjb2xsYXBzZWQgZWRnZXMsIG9yIGl0IGJyZWFrc1xuICAgICAgfVxuXG4gICAgICBlMS5jb250b3VySWQgPSBlMi5jb250b3VySWQgPSBkZXB0aDtcbiAgICAgIGlmICghaXNFeHRlcmlvclJpbmcpIHtcbiAgICAgICAgZTEuaXNFeHRlcmlvclJpbmcgPSBmYWxzZTtcbiAgICAgICAgZTIuaXNFeHRlcmlvclJpbmcgPSBmYWxzZTtcbiAgICAgIH1cbiAgICAgIGlmIChjb21wYXJlRXZlbnRzKGUxLCBlMikgPiAwKSB7XG4gICAgICAgIGUyLmxlZnQgPSB0cnVlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZTEubGVmdCA9IHRydWU7XG4gICAgICB9XG5cbiAgICAgIHZhciB4ID0gczFbMF0sIHkgPSBzMVsxXTtcbiAgICAgIGJib3hbMF0gPSBtaW4oYmJveFswXSwgeCk7XG4gICAgICBiYm94WzFdID0gbWluKGJib3hbMV0sIHkpO1xuICAgICAgYmJveFsyXSA9IG1heChiYm94WzJdLCB4KTtcbiAgICAgIGJib3hbM10gPSBtYXgoYmJveFszXSwgeSk7XG5cbiAgICAgIC8vIFB1c2hpbmcgaXQgc28gdGhlIHF1ZXVlIGlzIHNvcnRlZCBmcm9tIGxlZnQgdG8gcmlnaHQsXG4gICAgICAvLyB3aXRoIG9iamVjdCBvbiB0aGUgbGVmdCBoYXZpbmcgdGhlIGhpZ2hlc3QgcHJpb3JpdHkuXG4gICAgICBRLnB1c2goZTEpO1xuICAgICAgUS5wdXNoKGUyKTtcbiAgICB9XG4gIH1cblxuXG4gIGZ1bmN0aW9uIGZpbGxRdWV1ZShzdWJqZWN0LCBjbGlwcGluZywgc2Jib3gsIGNiYm94LCBvcGVyYXRpb24pIHtcbiAgICB2YXIgZXZlbnRRdWV1ZSA9IG5ldyB0aW55cXVldWUobnVsbCwgY29tcGFyZUV2ZW50cyk7XG4gICAgdmFyIHBvbHlnb25TZXQsIGlzRXh0ZXJpb3JSaW5nLCBpLCBpaSwgaiwgamo7IC8vLCBrLCBraztcblxuICAgIGZvciAoaSA9IDAsIGlpID0gc3ViamVjdC5sZW5ndGg7IGkgPCBpaTsgaSsrKSB7XG4gICAgICBwb2x5Z29uU2V0ID0gc3ViamVjdFtpXTtcbiAgICAgIGZvciAoaiA9IDAsIGpqID0gcG9seWdvblNldC5sZW5ndGg7IGogPCBqajsgaisrKSB7XG4gICAgICAgIGlzRXh0ZXJpb3JSaW5nID0gaiA9PT0gMDtcbiAgICAgICAgaWYgKGlzRXh0ZXJpb3JSaW5nKSB7IGNvbnRvdXJJZCsrOyB9XG4gICAgICAgIHByb2Nlc3NQb2x5Z29uKHBvbHlnb25TZXRbal0sIHRydWUsIGNvbnRvdXJJZCwgZXZlbnRRdWV1ZSwgc2Jib3gsIGlzRXh0ZXJpb3JSaW5nKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKGkgPSAwLCBpaSA9IGNsaXBwaW5nLmxlbmd0aDsgaSA8IGlpOyBpKyspIHtcbiAgICAgIHBvbHlnb25TZXQgPSBjbGlwcGluZ1tpXTtcbiAgICAgIGZvciAoaiA9IDAsIGpqID0gcG9seWdvblNldC5sZW5ndGg7IGogPCBqajsgaisrKSB7XG4gICAgICAgIGlzRXh0ZXJpb3JSaW5nID0gaiA9PT0gMDtcbiAgICAgICAgaWYgKG9wZXJhdGlvbiA9PT0gRElGRkVSRU5DRSkgeyBpc0V4dGVyaW9yUmluZyA9IGZhbHNlOyB9XG4gICAgICAgIGlmIChpc0V4dGVyaW9yUmluZykgeyBjb250b3VySWQrKzsgfVxuICAgICAgICBwcm9jZXNzUG9seWdvbihwb2x5Z29uU2V0W2pdLCBmYWxzZSwgY29udG91cklkLCBldmVudFF1ZXVlLCBjYmJveCwgaXNFeHRlcmlvclJpbmcpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBldmVudFF1ZXVlO1xuICB9XG5cbiAgdmFyIEVNUFRZID0gW107XG5cblxuICBmdW5jdGlvbiB0cml2aWFsT3BlcmF0aW9uKHN1YmplY3QsIGNsaXBwaW5nLCBvcGVyYXRpb24pIHtcbiAgICB2YXIgcmVzdWx0ID0gbnVsbDtcbiAgICBpZiAoc3ViamVjdC5sZW5ndGggKiBjbGlwcGluZy5sZW5ndGggPT09IDApIHtcbiAgICAgIGlmICAgICAgICAob3BlcmF0aW9uID09PSBJTlRFUlNFQ1RJT04pIHtcbiAgICAgICAgcmVzdWx0ID0gRU1QVFk7XG4gICAgICB9IGVsc2UgaWYgKG9wZXJhdGlvbiA9PT0gRElGRkVSRU5DRSkge1xuICAgICAgICByZXN1bHQgPSBzdWJqZWN0O1xuICAgICAgfSBlbHNlIGlmIChvcGVyYXRpb24gPT09IFVOSU9OIHx8XG4gICAgICAgICAgICAgICAgIG9wZXJhdGlvbiA9PT0gWE9SKSB7XG4gICAgICAgIHJlc3VsdCA9IChzdWJqZWN0Lmxlbmd0aCA9PT0gMCkgPyBjbGlwcGluZyA6IHN1YmplY3Q7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxuXG4gIGZ1bmN0aW9uIGNvbXBhcmVCQm94ZXMoc3ViamVjdCwgY2xpcHBpbmcsIHNiYm94LCBjYmJveCwgb3BlcmF0aW9uKSB7XG4gICAgdmFyIHJlc3VsdCA9IG51bGw7XG4gICAgaWYgKHNiYm94WzBdID4gY2Jib3hbMl0gfHxcbiAgICAgICAgY2Jib3hbMF0gPiBzYmJveFsyXSB8fFxuICAgICAgICBzYmJveFsxXSA+IGNiYm94WzNdIHx8XG4gICAgICAgIGNiYm94WzFdID4gc2Jib3hbM10pIHtcbiAgICAgIGlmICAgICAgICAob3BlcmF0aW9uID09PSBJTlRFUlNFQ1RJT04pIHtcbiAgICAgICAgcmVzdWx0ID0gRU1QVFk7XG4gICAgICB9IGVsc2UgaWYgKG9wZXJhdGlvbiA9PT0gRElGRkVSRU5DRSkge1xuICAgICAgICByZXN1bHQgPSBzdWJqZWN0O1xuICAgICAgfSBlbHNlIGlmIChvcGVyYXRpb24gPT09IFVOSU9OIHx8XG4gICAgICAgICAgICAgICAgIG9wZXJhdGlvbiA9PT0gWE9SKSB7XG4gICAgICAgIHJlc3VsdCA9IHN1YmplY3QuY29uY2F0KGNsaXBwaW5nKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG5cbiAgZnVuY3Rpb24gYm9vbGVhbihzdWJqZWN0LCBjbGlwcGluZywgb3BlcmF0aW9uKSB7XG4gICAgaWYgKHR5cGVvZiBzdWJqZWN0WzBdWzBdWzBdID09PSAnbnVtYmVyJykge1xuICAgICAgc3ViamVjdCA9IFtzdWJqZWN0XTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBjbGlwcGluZ1swXVswXVswXSA9PT0gJ251bWJlcicpIHtcbiAgICAgIGNsaXBwaW5nID0gW2NsaXBwaW5nXTtcbiAgICB9XG4gICAgdmFyIHRyaXZpYWwgPSB0cml2aWFsT3BlcmF0aW9uKHN1YmplY3QsIGNsaXBwaW5nLCBvcGVyYXRpb24pO1xuICAgIGlmICh0cml2aWFsKSB7XG4gICAgICByZXR1cm4gdHJpdmlhbCA9PT0gRU1QVFkgPyBudWxsIDogdHJpdmlhbDtcbiAgICB9XG4gICAgdmFyIHNiYm94ID0gW0luZmluaXR5LCBJbmZpbml0eSwgLUluZmluaXR5LCAtSW5maW5pdHldO1xuICAgIHZhciBjYmJveCA9IFtJbmZpbml0eSwgSW5maW5pdHksIC1JbmZpbml0eSwgLUluZmluaXR5XTtcblxuICAgIC8vY29uc29sZS50aW1lKCdmaWxsIHF1ZXVlJyk7XG4gICAgdmFyIGV2ZW50UXVldWUgPSBmaWxsUXVldWUoc3ViamVjdCwgY2xpcHBpbmcsIHNiYm94LCBjYmJveCwgb3BlcmF0aW9uKTtcbiAgICAvL2NvbnNvbGUudGltZUVuZCgnZmlsbCBxdWV1ZScpO1xuXG4gICAgdHJpdmlhbCA9IGNvbXBhcmVCQm94ZXMoc3ViamVjdCwgY2xpcHBpbmcsIHNiYm94LCBjYmJveCwgb3BlcmF0aW9uKTtcbiAgICBpZiAodHJpdmlhbCkge1xuICAgICAgcmV0dXJuIHRyaXZpYWwgPT09IEVNUFRZID8gbnVsbCA6IHRyaXZpYWw7XG4gICAgfVxuICAgIC8vY29uc29sZS50aW1lKCdzdWJkaXZpZGUgZWRnZXMnKTtcbiAgICB2YXIgc29ydGVkRXZlbnRzID0gc3ViZGl2aWRlKGV2ZW50UXVldWUsIHN1YmplY3QsIGNsaXBwaW5nLCBzYmJveCwgY2Jib3gsIG9wZXJhdGlvbik7XG4gICAgLy9jb25zb2xlLnRpbWVFbmQoJ3N1YmRpdmlkZSBlZGdlcycpO1xuXG4gICAgLy9jb25zb2xlLnRpbWUoJ2Nvbm5lY3QgdmVydGljZXMnKTtcbiAgICB2YXIgcmVzdWx0ID0gY29ubmVjdEVkZ2VzKHNvcnRlZEV2ZW50cywgb3BlcmF0aW9uKTtcbiAgICAvL2NvbnNvbGUudGltZUVuZCgnY29ubmVjdCB2ZXJ0aWNlcycpO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxuICBmdW5jdGlvbiB1bmlvbiAoc3ViamVjdCwgY2xpcHBpbmcpIHtcbiAgICByZXR1cm4gYm9vbGVhbihzdWJqZWN0LCBjbGlwcGluZywgVU5JT04pO1xuICB9XG5cbiAgZnVuY3Rpb24gZGlmZiAoc3ViamVjdCwgY2xpcHBpbmcpIHtcbiAgICByZXR1cm4gYm9vbGVhbihzdWJqZWN0LCBjbGlwcGluZywgRElGRkVSRU5DRSk7XG4gIH1cblxuICBmdW5jdGlvbiB4b3IgKHN1YmplY3QsIGNsaXBwaW5nKXtcbiAgICByZXR1cm4gYm9vbGVhbihzdWJqZWN0LCBjbGlwcGluZywgWE9SKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGludGVyc2VjdGlvbiQxIChzdWJqZWN0LCBjbGlwcGluZykge1xuICAgIHJldHVybiBib29sZWFuKHN1YmplY3QsIGNsaXBwaW5nLCBJTlRFUlNFQ1RJT04pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBlbnVtIHtOdW1iZXJ9XG4gICAqL1xuICB2YXIgb3BlcmF0aW9ucyA9IHsgVU5JT046IFVOSU9OLCBESUZGRVJFTkNFOiBESUZGRVJFTkNFLCBJTlRFUlNFQ1RJT046IElOVEVSU0VDVElPTiwgWE9SOiBYT1IgfTtcblxuICBleHBvcnRzLnVuaW9uID0gdW5pb247XG4gIGV4cG9ydHMuZGlmZiA9IGRpZmY7XG4gIGV4cG9ydHMueG9yID0geG9yO1xuICBleHBvcnRzLmludGVyc2VjdGlvbiA9IGludGVyc2VjdGlvbiQxO1xuICBleHBvcnRzLm9wZXJhdGlvbnMgPSBvcGVyYXRpb25zO1xuXG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG5cbn0pKSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tYXJ0aW5lei51bWQuanMubWFwXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9tYXJ0aW5lei1wb2x5Z29uLWNsaXBwaW5nL2Rpc3QvbWFydGluZXoudW1kLmpzXG4vLyBtb2R1bGUgaWQgPSA2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///6\n");

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = __webpack_require__(2);\r\n/**\r\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\r\n *\r\n * @name getCoord\r\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\r\n * @returns {Array<number>} coordinates\r\n * @example\r\n * var pt = turf.point([10, 10]);\r\n *\r\n * var coord = turf.getCoord(pt);\r\n * //= [10, 10]\r\n */\r\nfunction getCoord(coord) {\r\n    if (!coord) {\r\n        throw new Error(\"coord is required\");\r\n    }\r\n    if (!Array.isArray(coord)) {\r\n        if (coord.type === \"Feature\" && coord.geometry !== null && coord.geometry.type === \"Point\") {\r\n            return coord.geometry.coordinates;\r\n        }\r\n        if (coord.type === \"Point\") {\r\n            return coord.coordinates;\r\n        }\r\n    }\r\n    if (Array.isArray(coord) && coord.length >= 2 && !Array.isArray(coord[0]) && !Array.isArray(coord[1])) {\r\n        return coord;\r\n    }\r\n    throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\r\n}\r\nexports.getCoord = getCoord;\r\n/**\r\n * Unwrap coordinates from a Feature, Geometry Object or an Array\r\n *\r\n * @name getCoords\r\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\r\n * @returns {Array<any>} coordinates\r\n * @example\r\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\r\n *\r\n * var coords = turf.getCoords(poly);\r\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\r\n */\r\nfunction getCoords(coords) {\r\n    if (Array.isArray(coords)) {\r\n        return coords;\r\n    }\r\n    // Feature\r\n    if (coords.type === \"Feature\") {\r\n        if (coords.geometry !== null) {\r\n            return coords.geometry.coordinates;\r\n        }\r\n    }\r\n    else {\r\n        // Geometry\r\n        if (coords.coordinates) {\r\n            return coords.coordinates;\r\n        }\r\n    }\r\n    throw new Error(\"coords must be GeoJSON Feature, Geometry Object or an Array\");\r\n}\r\nexports.getCoords = getCoords;\r\n/**\r\n * Checks if coordinates contains a number\r\n *\r\n * @name containsNumber\r\n * @param {Array<any>} coordinates GeoJSON Coordinates\r\n * @returns {boolean} true if Array contains a number\r\n */\r\nfunction containsNumber(coordinates) {\r\n    if (coordinates.length > 1 && helpers_1.isNumber(coordinates[0]) && helpers_1.isNumber(coordinates[1])) {\r\n        return true;\r\n    }\r\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\r\n        return containsNumber(coordinates[0]);\r\n    }\r\n    throw new Error(\"coordinates must only contain numbers\");\r\n}\r\nexports.containsNumber = containsNumber;\r\n/**\r\n * Enforce expectations about types of GeoJSON objects for Turf.\r\n *\r\n * @name geojsonType\r\n * @param {GeoJSON} value any GeoJSON object\r\n * @param {string} type expected GeoJSON type\r\n * @param {string} name name of calling function\r\n * @throws {Error} if value is not the expected type.\r\n */\r\nfunction geojsonType(value, type, name) {\r\n    if (!type || !name) {\r\n        throw new Error(\"type and name required\");\r\n    }\r\n    if (!value || value.type !== type) {\r\n        throw new Error(\"Invalid input to \" + name + \": must be a \" + type + \", given \" + value.type);\r\n    }\r\n}\r\nexports.geojsonType = geojsonType;\r\n/**\r\n * Enforce expectations about types of {@link Feature} inputs for Turf.\r\n * Internally this uses {@link geojsonType} to judge geometry types.\r\n *\r\n * @name featureOf\r\n * @param {Feature} feature a feature with an expected geometry type\r\n * @param {string} type expected GeoJSON type\r\n * @param {string} name name of calling function\r\n * @throws {Error} error if value is not the expected type.\r\n */\r\nfunction featureOf(feature, type, name) {\r\n    if (!feature) {\r\n        throw new Error(\"No feature passed\");\r\n    }\r\n    if (!name) {\r\n        throw new Error(\".featureOf() requires a name\");\r\n    }\r\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\r\n        throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\r\n    }\r\n    if (!feature.geometry || feature.geometry.type !== type) {\r\n        throw new Error(\"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type);\r\n    }\r\n}\r\nexports.featureOf = featureOf;\r\n/**\r\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\r\n * Internally this uses {@link geojsonType} to judge geometry types.\r\n *\r\n * @name collectionOf\r\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\r\n * @param {string} type expected GeoJSON type\r\n * @param {string} name name of calling function\r\n * @throws {Error} if value is not the expected type.\r\n */\r\nfunction collectionOf(featureCollection, type, name) {\r\n    if (!featureCollection) {\r\n        throw new Error(\"No featureCollection passed\");\r\n    }\r\n    if (!name) {\r\n        throw new Error(\".collectionOf() requires a name\");\r\n    }\r\n    if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\r\n        throw new Error(\"Invalid input to \" + name + \", FeatureCollection required\");\r\n    }\r\n    for (var _i = 0, _a = featureCollection.features; _i < _a.length; _i++) {\r\n        var feature = _a[_i];\r\n        if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\r\n            throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\r\n        }\r\n        if (!feature.geometry || feature.geometry.type !== type) {\r\n            throw new Error(\"Invalid input to \" + name + \": must be a \" + type + \", given \" + feature.geometry.type);\r\n        }\r\n    }\r\n}\r\nexports.collectionOf = collectionOf;\r\n/**\r\n * Get Geometry from Feature or Geometry Object\r\n *\r\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\r\n * @returns {Geometry|null} GeoJSON Geometry Object\r\n * @throws {Error} if geojson is not a Feature or Geometry Object\r\n * @example\r\n * var point = {\r\n *   \"type\": \"Feature\",\r\n *   \"properties\": {},\r\n *   \"geometry\": {\r\n *     \"type\": \"Point\",\r\n *     \"coordinates\": [110, 40]\r\n *   }\r\n * }\r\n * var geom = turf.getGeom(point)\r\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\r\n */\r\nfunction getGeom(geojson) {\r\n    if (geojson.type === \"Feature\") {\r\n        return geojson.geometry;\r\n    }\r\n    return geojson;\r\n}\r\nexports.getGeom = getGeom;\r\n/**\r\n * Get GeoJSON object's type, Geometry type is prioritize.\r\n *\r\n * @param {GeoJSON} geojson GeoJSON object\r\n * @param {string} [name=\"geojson\"] name of the variable to display in error message\r\n * @returns {string} GeoJSON type\r\n * @example\r\n * var point = {\r\n *   \"type\": \"Feature\",\r\n *   \"properties\": {},\r\n *   \"geometry\": {\r\n *     \"type\": \"Point\",\r\n *     \"coordinates\": [110, 40]\r\n *   }\r\n * }\r\n * var geom = turf.getType(point)\r\n * //=\"Point\"\r\n */\r\nfunction getType(geojson, name) {\r\n    if (geojson.type === \"FeatureCollection\") {\r\n        return \"FeatureCollection\";\r\n    }\r\n    if (geojson.type === \"GeometryCollection\") {\r\n        return \"GeometryCollection\";\r\n    }\r\n    if (geojson.type === \"Feature\" && geojson.geometry !== null) {\r\n        return geojson.geometry.type;\r\n    }\r\n    return geojson.type;\r\n}\r\nexports.getType = getType;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7\n");

/***/ }),
/* 8 */
/***/ (function(module, exports) {

eval("/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNBcnJheS5qcz8zNDYxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgY2xhc3NpZmllZCBhcyBhbiBgQXJyYXlgIG9iamVjdC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDAuMS4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhbiBhcnJheSwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzQXJyYXkoWzEsIDIsIDNdKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzQXJyYXkoZG9jdW1lbnQuYm9keS5jaGlsZHJlbik7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uaXNBcnJheSgnYWJjJyk7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uaXNBcnJheShfLm5vb3ApO1xuICogLy8gPT4gZmFsc2VcbiAqL1xudmFyIGlzQXJyYXkgPSBBcnJheS5pc0FycmF5O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGlzQXJyYXk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNBcnJheS5qc1xuLy8gbW9kdWxlIGlkID0gOFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8\n");

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

eval("var baseGetTag = __webpack_require__(16),\n    isObjectLike = __webpack_require__(48);\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNTeW1ib2wuanM/ZThjOCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYmFzZUdldFRhZyA9IHJlcXVpcmUoJy4vX2Jhc2VHZXRUYWcnKSxcbiAgICBpc09iamVjdExpa2UgPSByZXF1aXJlKCcuL2lzT2JqZWN0TGlrZScpO1xuXG4vKiogYE9iamVjdCN0b1N0cmluZ2AgcmVzdWx0IHJlZmVyZW5jZXMuICovXG52YXIgc3ltYm9sVGFnID0gJ1tvYmplY3QgU3ltYm9sXSc7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgY2xhc3NpZmllZCBhcyBhIGBTeW1ib2xgIHByaW1pdGl2ZSBvciBvYmplY3QuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSBzeW1ib2wsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc1N5bWJvbChTeW1ib2wuaXRlcmF0b3IpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNTeW1ib2woJ2FiYycpO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNTeW1ib2wodmFsdWUpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PSAnc3ltYm9sJyB8fFxuICAgIChpc09iamVjdExpa2UodmFsdWUpICYmIGJhc2VHZXRUYWcodmFsdWUpID09IHN5bWJvbFRhZyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNTeW1ib2w7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNTeW1ib2wuanNcbi8vIG1vZHVsZSBpZCA9IDlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///9\n");

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

eval("var root = __webpack_require__(11);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19TeW1ib2wuanM/MzY0NCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcm9vdCA9IHJlcXVpcmUoJy4vX3Jvb3QnKTtcblxuLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovXG52YXIgU3ltYm9sID0gcm9vdC5TeW1ib2w7XG5cbm1vZHVsZS5leHBvcnRzID0gU3ltYm9sO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19TeW1ib2wuanNcbi8vIG1vZHVsZSBpZCA9IDEwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///10\n");

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

eval("var freeGlobal = __webpack_require__(44);\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19yb290LmpzPzRkMGQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGZyZWVHbG9iYWwgPSByZXF1aXJlKCcuL19mcmVlR2xvYmFsJyk7XG5cbi8qKiBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgc2VsZmAuICovXG52YXIgZnJlZVNlbGYgPSB0eXBlb2Ygc2VsZiA9PSAnb2JqZWN0JyAmJiBzZWxmICYmIHNlbGYuT2JqZWN0ID09PSBPYmplY3QgJiYgc2VsZjtcblxuLyoqIFVzZWQgYXMgYSByZWZlcmVuY2UgdG8gdGhlIGdsb2JhbCBvYmplY3QuICovXG52YXIgcm9vdCA9IGZyZWVHbG9iYWwgfHwgZnJlZVNlbGYgfHwgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblxubW9kdWxlLmV4cG9ydHMgPSByb290O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19yb290LmpzXG4vLyBtb2R1bGUgaWQgPSAxMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///11\n");

/***/ }),
/* 12 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__L_PM_Utils__ = __webpack_require__(13);\n\nvar SnapMixin = {\n  _initSnappableMarkers: function _initSnappableMarkers() {\n    this.options.snapDistance = this.options.snapDistance || 30;\n\n    this._assignEvents(this._markers);\n\n    this._layer.off('pm:dragstart', this._unsnap, this);\n\n    this._layer.on('pm:dragstart', this._unsnap, this);\n  },\n  _assignEvents: function _assignEvents(markerArr) {\n    var _this = this;\n\n    // loop through marker array and assign events to the markers\n    markerArr.forEach(function (marker) {\n      // if the marker is another array (Multipolygon stuff), recursively do this again\n      if (Array.isArray(marker)) {\n        _this._assignEvents(marker);\n\n        return;\n      } // add handleSnapping event on drag\n\n\n      marker.off('drag', _this._handleSnapping, _this);\n      marker.on('drag', _this._handleSnapping, _this); // cleanup event on dragend\n\n      marker.off('dragend', _this._cleanupSnapping, _this);\n      marker.on('dragend', _this._cleanupSnapping, _this);\n    });\n  },\n  _unsnap: function _unsnap() {\n    // delete the last snap\n    delete this._snapLatLng;\n  },\n  _cleanupSnapping: function _cleanupSnapping() {\n    // delete it, we need to refresh this with each start of a drag because\n    // meanwhile, new layers could've been added to the map\n    delete this._snapList; // remove map event\n\n    this._map.off('pm:remove', this._handleSnapLayerRemoval, this);\n\n    if (this.debugIndicatorLines) {\n      this.debugIndicatorLines.forEach(function (line) {\n        line.remove();\n      });\n    }\n  },\n  _handleSnapLayerRemoval: function _handleSnapLayerRemoval(_ref) {\n    var layer = _ref.layer;\n\n    // find the layers index in snaplist\n    var index = this._snapList.findIndex(function (e) {\n      return e._leaflet_id === layer._leaflet_id;\n    }); // remove it from the snaplist\n\n\n    this._snapList.splice(index, 1);\n  },\n  _handleSnapping: function _handleSnapping(e) {\n    var _this2 = this;\n\n    // if snapping is disabled via holding ALT during drag, stop right here\n    if (e.originalEvent.altKey) {\n      return false;\n    } // create a list of polygons that the marker could snap to\n    // this isn't inside a movestart/dragstart callback because middlemarkers are initialized\n    // after dragstart/movestart so it wouldn't fire for them\n\n\n    if (this._snapList === undefined) {\n      this._createSnapList(e);\n    } // if there are no layers to snap to, stop here\n\n\n    if (this._snapList.length <= 0) {\n      return false;\n    }\n\n    var marker = e.target; // get the closest layer, it's closest latlng, segment and the distance\n\n    var closestLayer = this._calcClosestLayer(marker.getLatLng(), this._snapList);\n\n    var isMarker = closestLayer.layer instanceof L.Marker || closestLayer.layer instanceof L.CircleMarker; // find the final latlng that we want to snap to\n\n    var snapLatLng;\n\n    if (!isMarker) {\n      snapLatLng = this._checkPrioritiySnapping(closestLayer);\n    } else {\n      snapLatLng = closestLayer.latlng;\n    } // minimal distance before marker snaps (in pixels)\n\n\n    var minDistance = this.options.snapDistance; // event info for pm:snap and pm:unsnap\n\n    var eventInfo = {\n      marker: marker,\n      snapLatLng: snapLatLng,\n      segment: closestLayer.segment,\n      layer: this._layer,\n      layerInteractedWith: closestLayer.layer,\n      // for lack of a better property name\n      distance: closestLayer.distance\n    };\n    eventInfo.marker.fire('pm:snapdrag', eventInfo);\n\n    this._layer.fire('pm:snapdrag', eventInfo);\n\n    if (closestLayer.distance < minDistance) {\n      // snap the marker\n      marker.setLatLng(snapLatLng);\n      marker._snapped = true;\n\n      var triggerSnap = function triggerSnap() {\n        _this2._snapLatLng = snapLatLng;\n        marker.fire('pm:snap', eventInfo);\n\n        _this2._layer.fire('pm:snap', eventInfo);\n      }; // check if the snapping position differs from the last snap\n      // Thanks Max & car2go Team\n\n\n      var a = this._snapLatLng || {};\n      var b = snapLatLng || {};\n\n      if (a.lat !== b.lat || a.lng !== b.lng) {\n        triggerSnap();\n      }\n    } else if (this._snapLatLng) {\n      // no more snapping\n      // if it was previously snapped...\n      // ...unsnap\n      this._unsnap(eventInfo);\n\n      marker._snapped = false; // and fire unsnap event\n\n      eventInfo.marker.fire('pm:unsnap', eventInfo);\n\n      this._layer.fire('pm:unsnap', eventInfo);\n    }\n\n    return true;\n  },\n  // we got the point we want to snap to (C), but we need to check if a coord of the polygon\n  // receives priority over C as the snapping point. Let's check this here\n  _checkPrioritiySnapping: function _checkPrioritiySnapping(closestLayer) {\n    var map = this._map; // A and B are the points of the closest segment to P (the marker position we want to snap)\n\n    var A = closestLayer.segment[0];\n    var B = closestLayer.segment[1]; // C is the point we would snap to on the segment.\n    // The closest point on the closest segment of the closest polygon to P. That's right.\n\n    var C = closestLayer.latlng; // distances from A to C and B to C to check which one is closer to C\n\n    var distanceAC = this._getDistance(map, A, C);\n\n    var distanceBC = this._getDistance(map, B, C); // closest latlng of A and B to C\n\n\n    var closestVertexLatLng = distanceAC < distanceBC ? A : B; // distance between closestVertexLatLng and C\n\n    var shortestDistance = distanceAC < distanceBC ? distanceAC : distanceBC; // snap to middle (M) of segment if option is enabled\n\n    if (this.options.snapMiddle) {\n      var M = __WEBPACK_IMPORTED_MODULE_0__L_PM_Utils__[\"a\" /* default */].calcMiddleLatLng(map, A, B);\n\n      var distanceMC = this._getDistance(map, M, C);\n\n      if (distanceMC < distanceAC && distanceMC < distanceBC) {\n        // M is the nearest vertex\n        closestVertexLatLng = M;\n        shortestDistance = distanceMC;\n      }\n    } // the distance that needs to be undercut to trigger priority\n\n\n    var priorityDistance = this.options.snapDistance; // the latlng we ultemately want to snap to\n\n    var snapLatlng; // if C is closer to the closestVertexLatLng (A, B or M) than the snapDistance,\n    // the closestVertexLatLng has priority over C as the snapping point.\n\n    if (shortestDistance < priorityDistance) {\n      snapLatlng = closestVertexLatLng;\n    } else {\n      snapLatlng = C;\n    } // return the copy of snapping point\n\n\n    return Object.assign({}, snapLatlng);\n  },\n  _createSnapList: function _createSnapList() {\n    var _this3 = this;\n\n    var layers = [];\n    var debugIndicatorLines = [];\n    var map = this._map;\n    map.off('pm:remove', this._handleSnapLayerRemoval, this);\n    map.on('pm:remove', this._handleSnapLayerRemoval, this); // find all layers that are or inherit from Polylines... and markers that are not\n    // temporary markers of polygon-edits\n\n    map.eachLayer(function (layer) {\n      if (layer instanceof L.Polyline || layer instanceof L.Marker || layer instanceof L.CircleMarker) {\n        layers.push(layer); // this is for debugging\n\n        var debugLine = L.polyline([], {\n          color: 'red',\n          pmIgnore: true\n        });\n        debugIndicatorLines.push(debugLine); // uncomment 👇 this line to show helper lines for debugging\n        // debugLine.addTo(map);\n      }\n    }); // ...except myself\n\n    layers = layers.filter(function (layer) {\n      return _this3._layer !== layer;\n    }); // also remove everything that has no coordinates yet\n\n    layers = layers.filter(function (layer) {\n      return layer._latlng || layer._latlngs && layer._latlngs.length > 0;\n    }); // finally remove everything that's leaflet.pm specific temporary stuff\n\n    layers = layers.filter(function (layer) {\n      return !layer._pmTempLayer;\n    }); // save snaplist from layers and the other snap layers added from other classes/scripts\n\n    if (this._otherSnapLayers) {\n      this._snapList = layers.concat(this._otherSnapLayers);\n    } else {\n      this._snapList = layers;\n    }\n\n    this.debugIndicatorLines = debugIndicatorLines;\n  },\n  _calcClosestLayer: function _calcClosestLayer(latlng, layers) {\n    var _this4 = this;\n\n    // the closest polygon to our dragged marker latlng\n    var closestLayer = {}; // loop through the layers\n\n    layers.forEach(function (layer, index) {\n      // find the closest latlng, segment and the distance of this layer to the dragged marker latlng\n      var results = _this4._calcLayerDistances(latlng, layer); // show indicator lines, it's for debugging\n\n\n      _this4.debugIndicatorLines[index].setLatLngs([latlng, results.latlng]); // save the info if it doesn't exist or if the distance is smaller than the previous one\n\n\n      if (closestLayer.distance === undefined || results.distance < closestLayer.distance) {\n        closestLayer = results;\n        closestLayer.layer = layer;\n      }\n    }); // return the closest layer and it's data\n    // if there is no closest layer, return undefined\n\n    return closestLayer;\n  },\n  _calcLayerDistances: function _calcLayerDistances(latlng, layer) {\n    var _this5 = this;\n\n    var map = this._map; // is this a marker?\n\n    var isMarker = layer instanceof L.Marker || layer instanceof L.CircleMarker; // is it a polygon?\n\n    var isPolygon = layer instanceof L.Polygon; // the point P which we want to snap (probpably the marker that is dragged)\n\n    var P = latlng; // the coords of the layer\n\n    var latlngs = isMarker ? layer.getLatLng() : layer.getLatLngs();\n\n    if (isMarker) {\n      // return the info for the marker, no more calculations needed\n      return {\n        latlng: Object.assign({}, latlngs),\n        distance: this._getDistance(map, latlngs, P)\n      };\n    } // the closest segment (line between two points) of the layer\n\n\n    var closestSegment; // the shortest distance from P to closestSegment\n\n    var shortestDistance; // loop through the coords of the layer\n\n    var loopThroughCoords = function loopThroughCoords(coords) {\n      coords.forEach(function (coord, index) {\n        if (Array.isArray(coord)) {\n          loopThroughCoords(coord);\n          return;\n        } // take this coord (A)...\n\n\n        var A = coord;\n        var nextIndex; // and the next coord (B) as points\n\n        if (isPolygon) {\n          nextIndex = index + 1 === coords.length ? 0 : index + 1;\n        } else {\n          nextIndex = index + 1 === coords.length ? undefined : index + 1;\n        }\n\n        var B = coords[nextIndex];\n\n        if (B) {\n          // calc the distance between P and AB-segment\n          var distance = _this5._getDistanceToSegment(map, P, A, B); // is the distance shorter than the previous one? Save it and the segment\n\n\n          if (shortestDistance === undefined || distance < shortestDistance) {\n            shortestDistance = distance;\n            closestSegment = [A, B];\n          }\n        }\n      });\n    };\n\n    loopThroughCoords(latlngs); // now, take the closest segment (closestSegment) and calc the closest point to P on it.\n\n    var C = this._getClosestPointOnSegment(map, latlng, closestSegment[0], closestSegment[1]); // return the latlng of that sucker\n\n\n    return {\n      latlng: Object.assign({}, C),\n      segment: closestSegment,\n      distance: shortestDistance\n    };\n  },\n  _getClosestPointOnSegment: function _getClosestPointOnSegment(map, latlng, latlngA, latlngB) {\n    var maxzoom = map.getMaxZoom();\n\n    if (maxzoom === Infinity) {\n      maxzoom = map.getZoom();\n    }\n\n    var P = map.project(latlng, maxzoom);\n    var A = map.project(latlngA, maxzoom);\n    var B = map.project(latlngB, maxzoom);\n    var closest = L.LineUtil.closestPointOnSegment(P, A, B);\n    return map.unproject(closest, maxzoom);\n  },\n  _getDistanceToSegment: function _getDistanceToSegment(map, latlng, latlngA, latlngB) {\n    var P = map.latLngToLayerPoint(latlng);\n    var A = map.latLngToLayerPoint(latlngA);\n    var B = map.latLngToLayerPoint(latlngB);\n    return L.LineUtil.pointToSegmentDistance(P, A, B);\n  },\n  _getDistance: function _getDistance(map, latlngA, latlngB) {\n    return map.latLngToLayerPoint(latlngA).distanceTo(map.latLngToLayerPoint(latlngB));\n  }\n};\n/* harmony default export */ __webpack_exports__[\"a\"] = (SnapMixin);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///12\n");

/***/ }),
/* 13 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("var Utils = {\n  calcMiddleLatLng: function calcMiddleLatLng(map, latlng1, latlng2) {\n    // calculate the middle coordinates between two markers\n    var p1 = map.project(latlng1);\n    var p2 = map.project(latlng2);\n    return map.unproject(p1._add(p2)._divideBy(2));\n  }\n};\n/* harmony default export */ __webpack_exports__[\"a\"] = (Utils);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvTC5QTS5VdGlscy5qcz8yYTI1Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBVdGlscyA9IHtcbiAgY2FsY01pZGRsZUxhdExuZzogZnVuY3Rpb24gY2FsY01pZGRsZUxhdExuZyhtYXAsIGxhdGxuZzEsIGxhdGxuZzIpIHtcbiAgICAvLyBjYWxjdWxhdGUgdGhlIG1pZGRsZSBjb29yZGluYXRlcyBiZXR3ZWVuIHR3byBtYXJrZXJzXG4gICAgdmFyIHAxID0gbWFwLnByb2plY3QobGF0bG5nMSk7XG4gICAgdmFyIHAyID0gbWFwLnByb2plY3QobGF0bG5nMik7XG4gICAgcmV0dXJuIG1hcC51bnByb2plY3QocDEuX2FkZChwMikuX2RpdmlkZUJ5KDIpKTtcbiAgfVxufTtcbmV4cG9ydCBkZWZhdWx0IFV0aWxzO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL0wuUE0uVXRpbHMuanNcbi8vIG1vZHVsZSBpZCA9IDEzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///13\n");

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar helpers_1 = __webpack_require__(2);\n/**\n * Takes a {@link LineString|linestring}, {@link MultiLineString|multi-linestring},\n * {@link MultiPolygon|multi-polygon} or {@link Polygon|polygon} and\n * returns {@link Point|points} at all self-intersections.\n *\n * @name kinks\n * @param {Feature<LineString|MultiLineString|MultiPolygon|Polygon>} featureIn input feature\n * @returns {FeatureCollection<Point>} self-intersections\n * @example\n * var poly = turf.polygon([[\n *   [-12.034835, 8.901183],\n *   [-12.060413, 8.899826],\n *   [-12.03638, 8.873199],\n *   [-12.059383, 8.871418],\n *   [-12.034835, 8.901183]\n * ]]);\n *\n * var kinks = turf.kinks(poly);\n *\n * //addToMap\n * var addToMap = [poly, kinks]\n */\nfunction kinks(featureIn) {\n    var coordinates;\n    var feature;\n    var results = {\n        type: \"FeatureCollection\",\n        features: [],\n    };\n    if (featureIn.type === \"Feature\") {\n        feature = featureIn.geometry;\n    }\n    else {\n        feature = featureIn;\n    }\n    if (feature.type === \"LineString\") {\n        coordinates = [feature.coordinates];\n    }\n    else if (feature.type === \"MultiLineString\") {\n        coordinates = feature.coordinates;\n    }\n    else if (feature.type === \"MultiPolygon\") {\n        coordinates = [].concat.apply([], feature.coordinates);\n    }\n    else if (feature.type === \"Polygon\") {\n        coordinates = feature.coordinates;\n    }\n    else {\n        throw new Error(\"Input must be a LineString, MultiLineString, \" +\n            \"Polygon, or MultiPolygon Feature or Geometry\");\n    }\n    coordinates.forEach(function (line1) {\n        coordinates.forEach(function (line2) {\n            for (var i = 0; i < line1.length - 1; i++) {\n                // start iteration at i, intersections for k < i have already\n                // been checked in previous outer loop iterations\n                for (var k = i; k < line2.length - 1; k++) {\n                    if (line1 === line2) {\n                        // segments are adjacent and always share a vertex, not a kink\n                        if (Math.abs(i - k) === 1) {\n                            continue;\n                        }\n                        // first and last segment in a closed lineString or ring always share a vertex, not a kink\n                        if (\n                        // segments are first and last segment of lineString\n                        i === 0 &&\n                            k === line1.length - 2 &&\n                            // lineString is closed\n                            line1[i][0] === line1[line1.length - 1][0] &&\n                            line1[i][1] === line1[line1.length - 1][1]) {\n                            continue;\n                        }\n                    }\n                    var intersection = lineIntersects(line1[i][0], line1[i][1], line1[i + 1][0], line1[i + 1][1], line2[k][0], line2[k][1], line2[k + 1][0], line2[k + 1][1]);\n                    if (intersection) {\n                        results.features.push(helpers_1.point([intersection[0], intersection[1]]));\n                    }\n                }\n            }\n        });\n    });\n    return results;\n}\nexports.default = kinks;\n// modified from http://jsfiddle.net/justin_c_rounds/Gd2S2/light/\nfunction lineIntersects(line1StartX, line1StartY, line1EndX, line1EndY, line2StartX, line2StartY, line2EndX, line2EndY) {\n    // if the lines intersect, the result contains the x and y of the\n    // intersection (treating the lines as infinite) and booleans for whether\n    // line segment 1 or line segment 2 contain the point\n    var denominator;\n    var a;\n    var b;\n    var numerator1;\n    var numerator2;\n    var result = {\n        x: null,\n        y: null,\n        onLine1: false,\n        onLine2: false,\n    };\n    denominator = ((line2EndY - line2StartY) * (line1EndX - line1StartX)) - ((line2EndX - line2StartX) * (line1EndY - line1StartY));\n    if (denominator === 0) {\n        if (result.x !== null && result.y !== null) {\n            return result;\n        }\n        else {\n            return false;\n        }\n    }\n    a = line1StartY - line2StartY;\n    b = line1StartX - line2StartX;\n    numerator1 = ((line2EndX - line2StartX) * a) - ((line2EndY - line2StartY) * b);\n    numerator2 = ((line1EndX - line1StartX) * a) - ((line1EndY - line1StartY) * b);\n    a = numerator1 / denominator;\n    b = numerator2 / denominator;\n    // if we cast these lines infinitely in both directions, they intersect here:\n    result.x = line1StartX + (a * (line1EndX - line1StartX));\n    result.y = line1StartY + (a * (line1EndY - line1StartY));\n    // if line1 is a segment and line2 is infinite, they intersect if:\n    if (a >= 0 && a <= 1) {\n        result.onLine1 = true;\n    }\n    // if line2 is a segment and line1 is infinite, they intersect if:\n    if (b >= 0 && b <= 1) {\n        result.onLine2 = true;\n    }\n    // if line1 and line2 are segments, they intersect if both of the above are true\n    if (result.onLine1 && result.onLine2) {\n        return [result.x, result.y];\n    }\n    else {\n        return false;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///14\n");

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar helpers = __webpack_require__(2);\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n    // Handles null Geometry -- Skips this GeoJSON\n    if (geojson === null) return;\n    var j, k, l, geometry, stopG, coords,\n        geometryMaybeCollection,\n        wrapShrink = 0,\n        coordIndex = 0,\n        isGeometryCollection,\n        type = geojson.type,\n        isFeatureCollection = type === 'FeatureCollection',\n        isFeature = type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[featureIndex].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n            var multiFeatureIndex = 0;\n            var geometryIndex = 0;\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n\n            // Handles null Geometry -- Skips this geometry\n            if (geometry === null) continue;\n            coords = geometry.coordinates;\n            var geomType = geometry.type;\n\n            wrapShrink = (excludeWrapCoord && (geomType === 'Polygon' || geomType === 'MultiPolygon')) ? 1 : 0;\n\n            switch (geomType) {\n            case null:\n                break;\n            case 'Point':\n                if (callback(coords, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                coordIndex++;\n                multiFeatureIndex++;\n                break;\n            case 'LineString':\n            case 'MultiPoint':\n                for (j = 0; j < coords.length; j++) {\n                    if (callback(coords[j], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                    coordIndex++;\n                    if (geomType === 'MultiPoint') multiFeatureIndex++;\n                }\n                if (geomType === 'LineString') multiFeatureIndex++;\n                break;\n            case 'Polygon':\n            case 'MultiLineString':\n                for (j = 0; j < coords.length; j++) {\n                    for (k = 0; k < coords[j].length - wrapShrink; k++) {\n                        if (callback(coords[j][k], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                        coordIndex++;\n                    }\n                    if (geomType === 'MultiLineString') multiFeatureIndex++;\n                    if (geomType === 'Polygon') geometryIndex++;\n                }\n                if (geomType === 'Polygon') multiFeatureIndex++;\n                break;\n            case 'MultiPolygon':\n                for (j = 0; j < coords.length; j++) {\n                    geometryIndex = 0;\n                    for (k = 0; k < coords[j].length; k++) {\n                        for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                            if (callback(coords[j][k][l], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                            coordIndex++;\n                        }\n                        geometryIndex++;\n                    }\n                    multiFeatureIndex++;\n                }\n                break;\n            case 'GeometryCollection':\n                for (j = 0; j < geometry.geometries.length; j++)\n                    if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false) return false;\n                break;\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n    }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n    var previousValue = initialValue;\n    coordEach(geojson, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (coordIndex === 0 && initialValue === undefined) previousValue = currentCoord;\n        else previousValue = callback(previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n    }, excludeWrapCoord);\n    return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n    var i;\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        for (i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i].properties, i) === false) break;\n        }\n        break;\n    case 'Feature':\n        callback(geojson.properties, 0);\n        break;\n    }\n}\n\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    propEach(geojson, function (currentProperties, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentProperties;\n        else previousValue = callback(previousValue, currentProperties, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n    if (geojson.type === 'Feature') {\n        callback(geojson, 0);\n    } else if (geojson.type === 'FeatureCollection') {\n        for (var i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i], i) === false) break;\n        }\n    }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    featureEach(geojson, function (currentFeature, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n    var coords = [];\n    coordEach(geojson, function (coord) {\n        coords.push(coord);\n    });\n    return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n    var i, j, g, geometry, stopG,\n        geometryMaybeCollection,\n        isGeometryCollection,\n        featureProperties,\n        featureBBox,\n        featureId,\n        featureIndex = 0,\n        isFeatureCollection = geojson.type === 'FeatureCollection',\n        isFeature = geojson.type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (i = 0; i < stop; i++) {\n\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[i].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        featureProperties = (isFeatureCollection ? geojson.features[i].properties :\n            (isFeature ? geojson.properties : {}));\n        featureBBox = (isFeatureCollection ? geojson.features[i].bbox :\n            (isFeature ? geojson.bbox : undefined));\n        featureId = (isFeatureCollection ? geojson.features[i].id :\n            (isFeature ? geojson.id : undefined));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (g = 0; g < stopG; g++) {\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n\n            // Handle null Geometry\n            if (geometry === null) {\n                if (callback(null, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                continue;\n            }\n            switch (geometry.type) {\n            case 'Point':\n            case 'LineString':\n            case 'MultiPoint':\n            case 'Polygon':\n            case 'MultiLineString':\n            case 'MultiPolygon': {\n                if (callback(geometry, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                break;\n            }\n            case 'GeometryCollection': {\n                for (j = 0; j < geometry.geometries.length; j++) {\n                    if (callback(geometry.geometries[j], featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                }\n                break;\n            }\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n        // Only increase `featureIndex` per each feature\n        featureIndex++;\n    }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    geomEach(geojson, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentGeometry;\n        else previousValue = callback(previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n    geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n        // Callback for single geometry\n        var type = (geometry === null) ? null : geometry.type;\n        switch (type) {\n        case null:\n        case 'Point':\n        case 'LineString':\n        case 'Polygon':\n            if (callback(helpers.feature(geometry, properties, {bbox: bbox, id: id}), featureIndex, 0) === false) return false;\n            return;\n        }\n\n        var geomType;\n\n        // Callback for multi-geometry\n        switch (type) {\n        case 'MultiPoint':\n            geomType = 'Point';\n            break;\n        case 'MultiLineString':\n            geomType = 'LineString';\n            break;\n        case 'MultiPolygon':\n            geomType = 'Polygon';\n            break;\n        }\n\n        for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n            var coordinate = geometry.coordinates[multiFeatureIndex];\n            var geom = {\n                type: geomType,\n                coordinates: coordinate\n            };\n            if (callback(helpers.feature(geom, properties), featureIndex, multiFeatureIndex) === false) return false;\n        }\n    });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    flattenEach(geojson, function (currentFeature, featureIndex, multiFeatureIndex) {\n        if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex, multiFeatureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n    flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n        var segmentIndex = 0;\n\n        // Exclude null Geometries\n        if (!feature.geometry) return;\n        // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n        var type = feature.geometry.type;\n        if (type === 'Point' || type === 'MultiPoint') return;\n\n        // Generate 2-vertex line segments\n        var previousCoords;\n        var previousFeatureIndex = 0;\n        var previousMultiIndex = 0;\n        var prevGeomIndex = 0;\n        if (coordEach(feature, function (currentCoord, coordIndex, featureIndexCoord, multiPartIndexCoord, geometryIndex) {\n            // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n            if (previousCoords === undefined || featureIndex > previousFeatureIndex || multiPartIndexCoord > previousMultiIndex || geometryIndex > prevGeomIndex) {\n                previousCoords = currentCoord;\n                previousFeatureIndex = featureIndex;\n                previousMultiIndex = multiPartIndexCoord;\n                prevGeomIndex = geometryIndex;\n                segmentIndex = 0;\n                return;\n            }\n            var currentSegment = helpers.lineString([previousCoords, currentCoord], feature.properties);\n            if (callback(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) === false) return false;\n            segmentIndex++;\n            previousCoords = currentCoord;\n        }) === false) return false;\n    });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentInex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    var started = false;\n    segmentEach(geojson, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n        if (started === false && initialValue === undefined) previousValue = currentSegment;\n        else previousValue = callback(previousValue, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex);\n        started = true;\n    });\n    return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n    // validation\n    if (!geojson) throw new Error('geojson is required');\n\n    flattenEach(geojson, function (feature, featureIndex, multiFeatureIndex) {\n        if (feature.geometry === null) return;\n        var type = feature.geometry.type;\n        var coords = feature.geometry.coordinates;\n        switch (type) {\n        case 'LineString':\n            if (callback(feature, featureIndex, multiFeatureIndex, 0, 0) === false) return false;\n            break;\n        case 'Polygon':\n            for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n                if (callback(helpers.lineString(coords[geometryIndex], feature.properties), featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n            }\n            break;\n        }\n    });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    lineEach(geojson, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentLine;\n        else previousValue = callback(previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!helpers.isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var segmentIndex = options.segmentIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find SegmentIndex\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n        if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n        return helpers.lineString([coords[segmentIndex], coords[segmentIndex + 1]], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n        return helpers.lineString([coords[geometryIndex][segmentIndex], coords[geometryIndex][segmentIndex + 1]], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n        return helpers.lineString([coords[multiFeatureIndex][segmentIndex], coords[multiFeatureIndex][segmentIndex + 1]], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n        return helpers.lineString([coords[multiFeatureIndex][geometryIndex][segmentIndex], coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!helpers.isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var coordIndex = options.coordIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find Coord Index\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n        return helpers.point(coords, properties, options);\n    case 'MultiPoint':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        return helpers.point(coords[multiFeatureIndex], properties, options);\n    case 'LineString':\n        if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n        return helpers.point(coords[coordIndex], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[geometryIndex].length + coordIndex;\n        return helpers.point(coords[geometryIndex][coordIndex], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex].length + coordIndex;\n        return helpers.point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n        return helpers.point(coords[multiFeatureIndex][geometryIndex][coordIndex], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\nexports.coordEach = coordEach;\nexports.coordReduce = coordReduce;\nexports.propEach = propEach;\nexports.propReduce = propReduce;\nexports.featureEach = featureEach;\nexports.featureReduce = featureReduce;\nexports.coordAll = coordAll;\nexports.geomEach = geomEach;\nexports.geomReduce = geomReduce;\nexports.flattenEach = flattenEach;\nexports.flattenReduce = flattenReduce;\nexports.segmentEach = segmentEach;\nexports.segmentReduce = segmentReduce;\nexports.lineEach = lineEach;\nexports.lineReduce = lineReduce;\nexports.findSegment = findSegment;\nexports.findPoint = findPoint;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///15\n");

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

eval("var Symbol = __webpack_require__(10),\n    getRawTag = __webpack_require__(46),\n    objectToString = __webpack_require__(47);\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlR2V0VGFnLmpzPzY4MjMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIFN5bWJvbCA9IHJlcXVpcmUoJy4vX1N5bWJvbCcpLFxuICAgIGdldFJhd1RhZyA9IHJlcXVpcmUoJy4vX2dldFJhd1RhZycpLFxuICAgIG9iamVjdFRvU3RyaW5nID0gcmVxdWlyZSgnLi9fb2JqZWN0VG9TdHJpbmcnKTtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIG51bGxUYWcgPSAnW29iamVjdCBOdWxsXScsXG4gICAgdW5kZWZpbmVkVGFnID0gJ1tvYmplY3QgVW5kZWZpbmVkXSc7XG5cbi8qKiBCdWlsdC1pbiB2YWx1ZSByZWZlcmVuY2VzLiAqL1xudmFyIHN5bVRvU3RyaW5nVGFnID0gU3ltYm9sID8gU3ltYm9sLnRvU3RyaW5nVGFnIDogdW5kZWZpbmVkO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBnZXRUYWdgIHdpdGhvdXQgZmFsbGJhY2tzIGZvciBidWdneSBlbnZpcm9ubWVudHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHF1ZXJ5LlxuICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgYHRvU3RyaW5nVGFnYC5cbiAqL1xuZnVuY3Rpb24gYmFzZUdldFRhZyh2YWx1ZSkge1xuICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgIHJldHVybiB2YWx1ZSA9PT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkVGFnIDogbnVsbFRhZztcbiAgfVxuICByZXR1cm4gKHN5bVRvU3RyaW5nVGFnICYmIHN5bVRvU3RyaW5nVGFnIGluIE9iamVjdCh2YWx1ZSkpXG4gICAgPyBnZXRSYXdUYWcodmFsdWUpXG4gICAgOiBvYmplY3RUb1N0cmluZyh2YWx1ZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZUdldFRhZztcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUdldFRhZy5qc1xuLy8gbW9kdWxlIGlkID0gMTZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///16\n");

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

eval("var baseIsNative = __webpack_require__(56),\n    getValue = __webpack_require__(61);\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXROYXRpdmUuanM/MjAyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYmFzZUlzTmF0aXZlID0gcmVxdWlyZSgnLi9fYmFzZUlzTmF0aXZlJyksXG4gICAgZ2V0VmFsdWUgPSByZXF1aXJlKCcuL19nZXRWYWx1ZScpO1xuXG4vKipcbiAqIEdldHMgdGhlIG5hdGl2ZSBmdW5jdGlvbiBhdCBga2V5YCBvZiBgb2JqZWN0YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSBtZXRob2QgdG8gZ2V0LlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGZ1bmN0aW9uIGlmIGl0J3MgbmF0aXZlLCBlbHNlIGB1bmRlZmluZWRgLlxuICovXG5mdW5jdGlvbiBnZXROYXRpdmUob2JqZWN0LCBrZXkpIHtcbiAgdmFyIHZhbHVlID0gZ2V0VmFsdWUob2JqZWN0LCBrZXkpO1xuICByZXR1cm4gYmFzZUlzTmF0aXZlKHZhbHVlKSA/IHZhbHVlIDogdW5kZWZpbmVkO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldE5hdGl2ZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fZ2V0TmF0aXZlLmpzXG4vLyBtb2R1bGUgaWQgPSAxN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///17\n");

/***/ }),
/* 18 */
/***/ (function(module, exports) {

eval("/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzT2JqZWN0LmpzP2M4MjMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyB0aGVcbiAqIFtsYW5ndWFnZSB0eXBlXShodHRwOi8vd3d3LmVjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtZWNtYXNjcmlwdC1sYW5ndWFnZS10eXBlcylcbiAqIG9mIGBPYmplY3RgLiAoZS5nLiBhcnJheXMsIGZ1bmN0aW9ucywgb2JqZWN0cywgcmVnZXhlcywgYG5ldyBOdW1iZXIoMClgLCBhbmQgYG5ldyBTdHJpbmcoJycpYClcbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDAuMS4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhbiBvYmplY3QsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc09iamVjdCh7fSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdChbMSwgMiwgM10pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3QoXy5ub29wKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0KG51bGwpO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNPYmplY3QodmFsdWUpIHtcbiAgdmFyIHR5cGUgPSB0eXBlb2YgdmFsdWU7XG4gIHJldHVybiB2YWx1ZSAhPSBudWxsICYmICh0eXBlID09ICdvYmplY3QnIHx8IHR5cGUgPT0gJ2Z1bmN0aW9uJyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNPYmplY3Q7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvaXNPYmplY3QuanNcbi8vIG1vZHVsZSBpZCA9IDE4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///18\n");

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(20);


/***/ }),
/* 20 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__polyfills__ = __webpack_require__(21);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__polyfills___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__polyfills__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__package_json__ = __webpack_require__(22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__package_json___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__package_json__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__L_PM_Map__ = __webpack_require__(23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Toolbar_L_PM_Toolbar__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__Draw_L_PM_Draw__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__Draw_L_PM_Draw_Marker__ = __webpack_require__(27);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__Draw_L_PM_Draw_Line__ = __webpack_require__(28);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__Draw_L_PM_Draw_Poly__ = __webpack_require__(29);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__Draw_L_PM_Draw_Rectangle__ = __webpack_require__(30);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__Draw_L_PM_Draw_Circle__ = __webpack_require__(31);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__Draw_L_PM_Draw_Cut__ = __webpack_require__(32);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__Edit_L_PM_Edit__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__Edit_L_PM_Edit_LayerGroup__ = __webpack_require__(37);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__Edit_L_PM_Edit_Marker__ = __webpack_require__(38);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__Edit_L_PM_Edit_Line__ = __webpack_require__(39);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__Edit_L_PM_Edit_Poly__ = __webpack_require__(83);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__Edit_L_PM_Edit_Rectangle__ = __webpack_require__(84);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__Edit_L_PM_Edit_Circle__ = __webpack_require__(85);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__css_layers_css__ = __webpack_require__(86);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__css_layers_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_18__css_layers_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__css_controls_css__ = __webpack_require__(87);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__css_controls_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_19__css_controls_css__);\n/**\n *\n * A Leaflet Plugin For Editing Geometry Layers in Leaflet 1.0\n * by Sumit Kumar (@TweetsOfSumit)\n * Github Repo: https://github.com/codeofsumit/leaflet.pm\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nL.PM = L.PM || {\n  Map: __WEBPACK_IMPORTED_MODULE_2__L_PM_Map__[\"a\" /* default */],\n  Toolbar: __WEBPACK_IMPORTED_MODULE_3__Toolbar_L_PM_Toolbar__[\"a\" /* default */],\n  Draw: __WEBPACK_IMPORTED_MODULE_4__Draw_L_PM_Draw__[\"a\" /* default */],\n  Edit: __WEBPACK_IMPORTED_MODULE_11__Edit_L_PM_Edit__[\"a\" /* default */],\n  version: __WEBPACK_IMPORTED_MODULE_1__package_json__[\"version\"],\n  initialize: function initialize() {\n    this.addInitHooks();\n  },\n  addInitHooks: function addInitHooks() {\n    function initMap() {\n      if (!this.options.pmIgnore) {\n        this.pm = new L.PM.Map(this);\n      }\n    }\n\n    L.Map.addInitHook(initMap);\n\n    function initLayerGroup() {\n      this.pm = new L.PM.Edit.LayerGroup(this);\n    }\n\n    L.LayerGroup.addInitHook(initLayerGroup);\n\n    function initMarker() {\n      if (!this.options.pmIgnore) {\n        this.pm = new L.PM.Edit.Marker(this);\n      }\n    }\n\n    L.Marker.addInitHook(initMarker);\n\n    function initPolyline() {\n      if (!this.options.pmIgnore) {\n        this.pm = new L.PM.Edit.Line(this);\n      }\n    }\n\n    L.Polyline.addInitHook(initPolyline);\n\n    function initPolygon() {\n      if (!this.options.pmIgnore) {\n        this.pm = new L.PM.Edit.Poly(this);\n      }\n    }\n\n    L.Polygon.addInitHook(initPolygon);\n\n    function initRectangle() {\n      if (!this.options.pmIgnore) {\n        this.pm = new L.PM.Edit.Rectangle(this);\n      }\n    }\n\n    L.Rectangle.addInitHook(initRectangle);\n\n    function initCircle() {\n      if (!this.options.pmIgnore) {\n        this.pm = new L.PM.Edit.Circle(this);\n      }\n    }\n\n    L.Circle.addInitHook(initCircle);\n  }\n}; // initialize leaflet.pm\n\nL.PM.initialize();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvTC5QTS5qcz9hYTY1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICpcbiAqIEEgTGVhZmxldCBQbHVnaW4gRm9yIEVkaXRpbmcgR2VvbWV0cnkgTGF5ZXJzIGluIExlYWZsZXQgMS4wXG4gKiBieSBTdW1pdCBLdW1hciAoQFR3ZWV0c09mU3VtaXQpXG4gKiBHaXRodWIgUmVwbzogaHR0cHM6Ly9naXRodWIuY29tL2NvZGVvZnN1bWl0L2xlYWZsZXQucG1cbiAqL1xuaW1wb3J0ICcuL3BvbHlmaWxscyc7XG5pbXBvcnQgeyB2ZXJzaW9uIH0gZnJvbSAnLi4vLi4vcGFja2FnZS5qc29uJztcbmltcG9ydCBNYXAgZnJvbSAnLi9MLlBNLk1hcCc7XG5pbXBvcnQgVG9vbGJhciBmcm9tICcuL1Rvb2xiYXIvTC5QTS5Ub29sYmFyJztcbmltcG9ydCBEcmF3IGZyb20gJy4vRHJhdy9MLlBNLkRyYXcnO1xuaW1wb3J0ICcuL0RyYXcvTC5QTS5EcmF3Lk1hcmtlcic7XG5pbXBvcnQgJy4vRHJhdy9MLlBNLkRyYXcuTGluZSc7XG5pbXBvcnQgJy4vRHJhdy9MLlBNLkRyYXcuUG9seSc7XG5pbXBvcnQgJy4vRHJhdy9MLlBNLkRyYXcuUmVjdGFuZ2xlJztcbmltcG9ydCAnLi9EcmF3L0wuUE0uRHJhdy5DaXJjbGUnO1xuaW1wb3J0ICcuL0RyYXcvTC5QTS5EcmF3LkN1dCc7XG5pbXBvcnQgRWRpdCBmcm9tICcuL0VkaXQvTC5QTS5FZGl0JztcbmltcG9ydCAnLi9FZGl0L0wuUE0uRWRpdC5MYXllckdyb3VwJztcbmltcG9ydCAnLi9FZGl0L0wuUE0uRWRpdC5NYXJrZXInO1xuaW1wb3J0ICcuL0VkaXQvTC5QTS5FZGl0LkxpbmUnO1xuaW1wb3J0ICcuL0VkaXQvTC5QTS5FZGl0LlBvbHknO1xuaW1wb3J0ICcuL0VkaXQvTC5QTS5FZGl0LlJlY3RhbmdsZSc7XG5pbXBvcnQgJy4vRWRpdC9MLlBNLkVkaXQuQ2lyY2xlJztcbmltcG9ydCAnLi4vY3NzL2xheWVycy5jc3MnO1xuaW1wb3J0ICcuLi9jc3MvY29udHJvbHMuY3NzJztcbkwuUE0gPSBMLlBNIHx8IHtcbiAgTWFwOiBNYXAsXG4gIFRvb2xiYXI6IFRvb2xiYXIsXG4gIERyYXc6IERyYXcsXG4gIEVkaXQ6IEVkaXQsXG4gIHZlcnNpb246IHZlcnNpb24sXG4gIGluaXRpYWxpemU6IGZ1bmN0aW9uIGluaXRpYWxpemUoKSB7XG4gICAgdGhpcy5hZGRJbml0SG9va3MoKTtcbiAgfSxcbiAgYWRkSW5pdEhvb2tzOiBmdW5jdGlvbiBhZGRJbml0SG9va3MoKSB7XG4gICAgZnVuY3Rpb24gaW5pdE1hcCgpIHtcbiAgICAgIGlmICghdGhpcy5vcHRpb25zLnBtSWdub3JlKSB7XG4gICAgICAgIHRoaXMucG0gPSBuZXcgTC5QTS5NYXAodGhpcyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgTC5NYXAuYWRkSW5pdEhvb2soaW5pdE1hcCk7XG5cbiAgICBmdW5jdGlvbiBpbml0TGF5ZXJHcm91cCgpIHtcbiAgICAgIHRoaXMucG0gPSBuZXcgTC5QTS5FZGl0LkxheWVyR3JvdXAodGhpcyk7XG4gICAgfVxuXG4gICAgTC5MYXllckdyb3VwLmFkZEluaXRIb29rKGluaXRMYXllckdyb3VwKTtcblxuICAgIGZ1bmN0aW9uIGluaXRNYXJrZXIoKSB7XG4gICAgICBpZiAoIXRoaXMub3B0aW9ucy5wbUlnbm9yZSkge1xuICAgICAgICB0aGlzLnBtID0gbmV3IEwuUE0uRWRpdC5NYXJrZXIodGhpcyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgTC5NYXJrZXIuYWRkSW5pdEhvb2soaW5pdE1hcmtlcik7XG5cbiAgICBmdW5jdGlvbiBpbml0UG9seWxpbmUoKSB7XG4gICAgICBpZiAoIXRoaXMub3B0aW9ucy5wbUlnbm9yZSkge1xuICAgICAgICB0aGlzLnBtID0gbmV3IEwuUE0uRWRpdC5MaW5lKHRoaXMpO1xuICAgICAgfVxuICAgIH1cblxuICAgIEwuUG9seWxpbmUuYWRkSW5pdEhvb2soaW5pdFBvbHlsaW5lKTtcblxuICAgIGZ1bmN0aW9uIGluaXRQb2x5Z29uKCkge1xuICAgICAgaWYgKCF0aGlzLm9wdGlvbnMucG1JZ25vcmUpIHtcbiAgICAgICAgdGhpcy5wbSA9IG5ldyBMLlBNLkVkaXQuUG9seSh0aGlzKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBMLlBvbHlnb24uYWRkSW5pdEhvb2soaW5pdFBvbHlnb24pO1xuXG4gICAgZnVuY3Rpb24gaW5pdFJlY3RhbmdsZSgpIHtcbiAgICAgIGlmICghdGhpcy5vcHRpb25zLnBtSWdub3JlKSB7XG4gICAgICAgIHRoaXMucG0gPSBuZXcgTC5QTS5FZGl0LlJlY3RhbmdsZSh0aGlzKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBMLlJlY3RhbmdsZS5hZGRJbml0SG9vayhpbml0UmVjdGFuZ2xlKTtcblxuICAgIGZ1bmN0aW9uIGluaXRDaXJjbGUoKSB7XG4gICAgICBpZiAoIXRoaXMub3B0aW9ucy5wbUlnbm9yZSkge1xuICAgICAgICB0aGlzLnBtID0gbmV3IEwuUE0uRWRpdC5DaXJjbGUodGhpcyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgTC5DaXJjbGUuYWRkSW5pdEhvb2soaW5pdENpcmNsZSk7XG4gIH1cbn07IC8vIGluaXRpYWxpemUgbGVhZmxldC5wbVxuXG5MLlBNLmluaXRpYWxpemUoKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9qcy9MLlBNLmpzXG4vLyBtb2R1bGUgaWQgPSAyMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///20\n");

/***/ }),
/* 21 */
/***/ (function(module, exports) {

eval("/* eslint-disable */\n// Array.findIndex Polyfill\nArray.prototype.findIndex = Array.prototype.findIndex || function (callback) {\n  if (this === null) {\n    throw new TypeError('Array.prototype.findIndex called on null or undefined');\n  } else if (typeof callback !== 'function') {\n    throw new TypeError('callback must be a function');\n  }\n\n  var list = Object(this); // Makes sures is always has an positive integer as length.\n\n  var length = list.length >>> 0;\n  var thisArg = arguments[1];\n\n  for (var i = 0; i < length; i++) {\n    if (callback.call(thisArg, list[i], i, list)) {\n      return i;\n    }\n  }\n\n  return -1;\n}; // Array.find Polyfill for IE<12.\n// Requested here: https://github.com/codeofsumit/leaflet.pm/issues/173\n\n\nArray.prototype.find = Array.prototype.find || function (callback) {\n  if (this === null) {\n    throw new TypeError('Array.prototype.find called on null or undefined');\n  } else if (typeof callback !== 'function') {\n    throw new TypeError('callback must be a function');\n  }\n\n  var list = Object(this); // Makes sures is always has an positive integer as length.\n\n  var length = list.length >>> 0;\n  var thisArg = arguments[1];\n\n  for (var i = 0; i < length; i++) {\n    var element = list[i];\n\n    if (callback.call(thisArg, element, i, list)) {\n      return element;\n    }\n  }\n}; // Polyfill for Object.assign()\n// https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Polyfill\n\n\nif (typeof Object.assign != 'function') {\n  Object.assign = function (target) {\n    'use strict';\n\n    if (target == null) {\n      throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    target = Object(target);\n\n    for (var index = 1; index < arguments.length; index++) {\n      var source = arguments[index];\n\n      if (source != null) {\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n    }\n\n    return target;\n  };\n} // Polyfill for Element.remove()\n// https://developer.mozilla.org/de/docs/Web/API/ChildNode/remove#Polyfill\n\n\n(function (arr) {\n  arr.forEach(function (item) {\n    if (item.hasOwnProperty('remove')) {\n      return;\n    }\n\n    Object.defineProperty(item, 'remove', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function remove() {\n        this.parentNode.removeChild(this);\n      }\n    });\n  });\n})([Element.prototype, CharacterData.prototype, DocumentType.prototype]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvcG9seWZpbGxzLmpzP2MyNmYiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgKi9cbi8vIEFycmF5LmZpbmRJbmRleCBQb2x5ZmlsbFxuQXJyYXkucHJvdG90eXBlLmZpbmRJbmRleCA9IEFycmF5LnByb3RvdHlwZS5maW5kSW5kZXggfHwgZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gIGlmICh0aGlzID09PSBudWxsKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQXJyYXkucHJvdG90eXBlLmZpbmRJbmRleCBjYWxsZWQgb24gbnVsbCBvciB1bmRlZmluZWQnKTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgY2FsbGJhY2sgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdjYWxsYmFjayBtdXN0IGJlIGEgZnVuY3Rpb24nKTtcbiAgfVxuXG4gIHZhciBsaXN0ID0gT2JqZWN0KHRoaXMpOyAvLyBNYWtlcyBzdXJlcyBpcyBhbHdheXMgaGFzIGFuIHBvc2l0aXZlIGludGVnZXIgYXMgbGVuZ3RoLlxuXG4gIHZhciBsZW5ndGggPSBsaXN0Lmxlbmd0aCA+Pj4gMDtcbiAgdmFyIHRoaXNBcmcgPSBhcmd1bWVudHNbMV07XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgIGlmIChjYWxsYmFjay5jYWxsKHRoaXNBcmcsIGxpc3RbaV0sIGksIGxpc3QpKSB7XG4gICAgICByZXR1cm4gaTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gLTE7XG59OyAvLyBBcnJheS5maW5kIFBvbHlmaWxsIGZvciBJRTwxMi5cbi8vIFJlcXVlc3RlZCBoZXJlOiBodHRwczovL2dpdGh1Yi5jb20vY29kZW9mc3VtaXQvbGVhZmxldC5wbS9pc3N1ZXMvMTczXG5cblxuQXJyYXkucHJvdG90eXBlLmZpbmQgPSBBcnJheS5wcm90b3R5cGUuZmluZCB8fCBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgaWYgKHRoaXMgPT09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdBcnJheS5wcm90b3R5cGUuZmluZCBjYWxsZWQgb24gbnVsbCBvciB1bmRlZmluZWQnKTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgY2FsbGJhY2sgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdjYWxsYmFjayBtdXN0IGJlIGEgZnVuY3Rpb24nKTtcbiAgfVxuXG4gIHZhciBsaXN0ID0gT2JqZWN0KHRoaXMpOyAvLyBNYWtlcyBzdXJlcyBpcyBhbHdheXMgaGFzIGFuIHBvc2l0aXZlIGludGVnZXIgYXMgbGVuZ3RoLlxuXG4gIHZhciBsZW5ndGggPSBsaXN0Lmxlbmd0aCA+Pj4gMDtcbiAgdmFyIHRoaXNBcmcgPSBhcmd1bWVudHNbMV07XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgIHZhciBlbGVtZW50ID0gbGlzdFtpXTtcblxuICAgIGlmIChjYWxsYmFjay5jYWxsKHRoaXNBcmcsIGVsZW1lbnQsIGksIGxpc3QpKSB7XG4gICAgICByZXR1cm4gZWxlbWVudDtcbiAgICB9XG4gIH1cbn07IC8vIFBvbHlmaWxsIGZvciBPYmplY3QuYXNzaWduKClcbi8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RlL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL09iamVjdC9hc3NpZ24jUG9seWZpbGxcblxuXG5pZiAodHlwZW9mIE9iamVjdC5hc3NpZ24gIT0gJ2Z1bmN0aW9uJykge1xuICBPYmplY3QuYXNzaWduID0gZnVuY3Rpb24gKHRhcmdldCkge1xuICAgICd1c2Ugc3RyaWN0JztcblxuICAgIGlmICh0YXJnZXQgPT0gbnVsbCkge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQ2Fubm90IGNvbnZlcnQgdW5kZWZpbmVkIG9yIG51bGwgdG8gb2JqZWN0Jyk7XG4gICAgfVxuXG4gICAgdGFyZ2V0ID0gT2JqZWN0KHRhcmdldCk7XG5cbiAgICBmb3IgKHZhciBpbmRleCA9IDE7IGluZGV4IDwgYXJndW1lbnRzLmxlbmd0aDsgaW5kZXgrKykge1xuICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpbmRleF07XG5cbiAgICAgIGlmIChzb3VyY2UgIT0gbnVsbCkge1xuICAgICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcbiAgICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfTtcbn0gLy8gUG9seWZpbGwgZm9yIEVsZW1lbnQucmVtb3ZlKClcbi8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2RlL2RvY3MvV2ViL0FQSS9DaGlsZE5vZGUvcmVtb3ZlI1BvbHlmaWxsXG5cblxuKGZ1bmN0aW9uIChhcnIpIHtcbiAgYXJyLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICBpZiAoaXRlbS5oYXNPd25Qcm9wZXJ0eSgncmVtb3ZlJykpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoaXRlbSwgJ3JlbW92ZScsIHtcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgIHZhbHVlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICAgIHRoaXMucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG59KShbRWxlbWVudC5wcm90b3R5cGUsIENoYXJhY3RlckRhdGEucHJvdG90eXBlLCBEb2N1bWVudFR5cGUucHJvdG90eXBlXSk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvcG9seWZpbGxzLmpzXG4vLyBtb2R1bGUgaWQgPSAyMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///21\n");

/***/ }),
/* 22 */
/***/ (function(module, exports) {

eval("module.exports = {\"name\":\"leaflet.pm\",\"version\":\"2.0.3\",\"description\":\"A Leaflet Plugin For Editing Geometry Layers in Leaflet 1.0\",\"keywords\":[\"leaflet\",\"polygon management\",\"geometry editing\",\"map data\",\"map overlay\",\"polygon\",\"geojson\",\"leaflet-draw\",\"data-field-geojson\",\"ui-leaflet-draw\"],\"files\":[\"dist\"],\"main\":\"dist/leaflet.pm.min.js\",\"dependencies\":{\"@turf/difference\":\"^6.0.2\",\"@turf/intersect\":\"^6.1.3\",\"@turf/kinks\":\"6.x\",\"@turf/union\":\"^6.0.3\",\"lodash\":\"^4.17.11\"},\"devDependencies\":{\"@babel/core\":\"^7.2.2\",\"@babel/preset-env\":\"^7.3.1\",\"babel-loader\":\"^8.0.5\",\"css-loader\":\"^0.28.11\",\"cypress\":\"^3.1.4\",\"eslint\":\"^4.19.1\",\"eslint-config-airbnb-base\":\"^12.1.0\",\"eslint-config-prettier\":\"^3.6.0\",\"eslint-plugin-cypress\":\"^2.2.0\",\"eslint-plugin-import\":\"^2.15.0\",\"extract-text-webpack-plugin\":\"^3.0.2\",\"file-loader\":\"^0.11.1\",\"leaflet\":\"^1.4.0\",\"prettier\":\"1.16.1\",\"style-loader\":\"^0.19.0\",\"uglifyjs-webpack-plugin\":\"^1.3.0\",\"url-loader\":\"^0.6.2\",\"webpack\":\"^3.12.0\"},\"peerDependencies\":{\"leaflet\":\"^1.2.0\"},\"scripts\":{\"start\":\"npm run dev\",\"dev\":\"./node_modules/.bin/webpack --config=webpack.dev.js\",\"test\":\"$(npm bin)/cypress run\",\"cypress\":\"$(npm bin)/cypress open\",\"build\":\"./node_modules/.bin/webpack --config=webpack.build.js\",\"prepare\":\"npm run build\",\"eslint-check\":\"eslint --print-config . | eslint-config-prettier-check\",\"eslint\":\"eslint src/ --fix\",\"prettier\":\"prettier --write '{src,cypress}/**/*.{js,css}'\",\"lint\":\"npm run eslint && npm run prettier\"},\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/codeofsumit/leaflet.pm.git\"},\"author\":{\"name\":\"Sumit Kumar\",\"email\":\"sk@outlook.com\",\"url\":\"http://twitter.com/TweetsOfSumit\"},\"license\":\"MIT\",\"bugs\":{\"url\":\"https://github.com/codeofsumit/leaflet.pm/issues\"},\"homepage\":\"https://leafletpm.now.sh\",\"prettier\":{\"trailingComma\":\"es5\",\"tabWidth\":2,\"semi\":true,\"singleQuote\":true}}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlLmpzb24/ZWQ4OCJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcIm5hbWVcIjpcImxlYWZsZXQucG1cIixcInZlcnNpb25cIjpcIjIuMC4zXCIsXCJkZXNjcmlwdGlvblwiOlwiQSBMZWFmbGV0IFBsdWdpbiBGb3IgRWRpdGluZyBHZW9tZXRyeSBMYXllcnMgaW4gTGVhZmxldCAxLjBcIixcImtleXdvcmRzXCI6W1wibGVhZmxldFwiLFwicG9seWdvbiBtYW5hZ2VtZW50XCIsXCJnZW9tZXRyeSBlZGl0aW5nXCIsXCJtYXAgZGF0YVwiLFwibWFwIG92ZXJsYXlcIixcInBvbHlnb25cIixcImdlb2pzb25cIixcImxlYWZsZXQtZHJhd1wiLFwiZGF0YS1maWVsZC1nZW9qc29uXCIsXCJ1aS1sZWFmbGV0LWRyYXdcIl0sXCJmaWxlc1wiOltcImRpc3RcIl0sXCJtYWluXCI6XCJkaXN0L2xlYWZsZXQucG0ubWluLmpzXCIsXCJkZXBlbmRlbmNpZXNcIjp7XCJAdHVyZi9kaWZmZXJlbmNlXCI6XCJeNi4wLjJcIixcIkB0dXJmL2ludGVyc2VjdFwiOlwiXjYuMS4zXCIsXCJAdHVyZi9raW5rc1wiOlwiNi54XCIsXCJAdHVyZi91bmlvblwiOlwiXjYuMC4zXCIsXCJsb2Rhc2hcIjpcIl40LjE3LjExXCJ9LFwiZGV2RGVwZW5kZW5jaWVzXCI6e1wiQGJhYmVsL2NvcmVcIjpcIl43LjIuMlwiLFwiQGJhYmVsL3ByZXNldC1lbnZcIjpcIl43LjMuMVwiLFwiYmFiZWwtbG9hZGVyXCI6XCJeOC4wLjVcIixcImNzcy1sb2FkZXJcIjpcIl4wLjI4LjExXCIsXCJjeXByZXNzXCI6XCJeMy4xLjRcIixcImVzbGludFwiOlwiXjQuMTkuMVwiLFwiZXNsaW50LWNvbmZpZy1haXJibmItYmFzZVwiOlwiXjEyLjEuMFwiLFwiZXNsaW50LWNvbmZpZy1wcmV0dGllclwiOlwiXjMuNi4wXCIsXCJlc2xpbnQtcGx1Z2luLWN5cHJlc3NcIjpcIl4yLjIuMFwiLFwiZXNsaW50LXBsdWdpbi1pbXBvcnRcIjpcIl4yLjE1LjBcIixcImV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblwiOlwiXjMuMC4yXCIsXCJmaWxlLWxvYWRlclwiOlwiXjAuMTEuMVwiLFwibGVhZmxldFwiOlwiXjEuNC4wXCIsXCJwcmV0dGllclwiOlwiMS4xNi4xXCIsXCJzdHlsZS1sb2FkZXJcIjpcIl4wLjE5LjBcIixcInVnbGlmeWpzLXdlYnBhY2stcGx1Z2luXCI6XCJeMS4zLjBcIixcInVybC1sb2FkZXJcIjpcIl4wLjYuMlwiLFwid2VicGFja1wiOlwiXjMuMTIuMFwifSxcInBlZXJEZXBlbmRlbmNpZXNcIjp7XCJsZWFmbGV0XCI6XCJeMS4yLjBcIn0sXCJzY3JpcHRzXCI6e1wic3RhcnRcIjpcIm5wbSBydW4gZGV2XCIsXCJkZXZcIjpcIi4vbm9kZV9tb2R1bGVzLy5iaW4vd2VicGFjayAtLWNvbmZpZz13ZWJwYWNrLmRldi5qc1wiLFwidGVzdFwiOlwiJChucG0gYmluKS9jeXByZXNzIHJ1blwiLFwiY3lwcmVzc1wiOlwiJChucG0gYmluKS9jeXByZXNzIG9wZW5cIixcImJ1aWxkXCI6XCIuL25vZGVfbW9kdWxlcy8uYmluL3dlYnBhY2sgLS1jb25maWc9d2VicGFjay5idWlsZC5qc1wiLFwicHJlcGFyZVwiOlwibnBtIHJ1biBidWlsZFwiLFwiZXNsaW50LWNoZWNrXCI6XCJlc2xpbnQgLS1wcmludC1jb25maWcgLiB8IGVzbGludC1jb25maWctcHJldHRpZXItY2hlY2tcIixcImVzbGludFwiOlwiZXNsaW50IHNyYy8gLS1maXhcIixcInByZXR0aWVyXCI6XCJwcmV0dGllciAtLXdyaXRlICd7c3JjLGN5cHJlc3N9LyoqLyoue2pzLGNzc30nXCIsXCJsaW50XCI6XCJucG0gcnVuIGVzbGludCAmJiBucG0gcnVuIHByZXR0aWVyXCJ9LFwicmVwb3NpdG9yeVwiOntcInR5cGVcIjpcImdpdFwiLFwidXJsXCI6XCJnaXQraHR0cHM6Ly9naXRodWIuY29tL2NvZGVvZnN1bWl0L2xlYWZsZXQucG0uZ2l0XCJ9LFwiYXV0aG9yXCI6e1wibmFtZVwiOlwiU3VtaXQgS3VtYXJcIixcImVtYWlsXCI6XCJza0BvdXRsb29rLmNvbVwiLFwidXJsXCI6XCJodHRwOi8vdHdpdHRlci5jb20vVHdlZXRzT2ZTdW1pdFwifSxcImxpY2Vuc2VcIjpcIk1JVFwiLFwiYnVnc1wiOntcInVybFwiOlwiaHR0cHM6Ly9naXRodWIuY29tL2NvZGVvZnN1bWl0L2xlYWZsZXQucG0vaXNzdWVzXCJ9LFwiaG9tZXBhZ2VcIjpcImh0dHBzOi8vbGVhZmxldHBtLm5vdy5zaFwiLFwicHJldHRpZXJcIjp7XCJ0cmFpbGluZ0NvbW1hXCI6XCJlczVcIixcInRhYldpZHRoXCI6MixcInNlbWlcIjp0cnVlLFwic2luZ2xlUXVvdGVcIjp0cnVlfX1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3BhY2thZ2UuanNvblxuLy8gbW9kdWxlIGlkID0gMjJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///22\n");

/***/ }),
/* 23 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_union__ = __webpack_require__(24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_union___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__turf_union__);\n\nvar Map = L.Class.extend({\n  initialize: function initialize(map) {\n    this.map = map;\n    this.Draw = new L.PM.Draw(map);\n    this.Toolbar = new L.PM.Toolbar(map);\n    this._globalRemovalMode = false;\n    this._globalUnionMode = false;\n  },\n  addControls: function addControls(options) {\n    this.Toolbar.addControls(options);\n  },\n  removeControls: function removeControls() {\n    this.Toolbar.removeControls();\n  },\n  toggleControls: function toggleControls() {\n    this.Toolbar.toggleControls();\n  },\n  controlsVisible: function controlsVisible() {\n    return this.Toolbar.isVisible;\n  },\n  enableDraw: function enableDraw() {\n    var shape = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Poly';\n    var options = arguments.length > 1 ? arguments[1] : undefined;\n    this.Draw.enable(shape, options);\n  },\n  disableDraw: function disableDraw() {\n    var shape = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Poly';\n    this.Draw.disable(shape);\n  },\n  setPathOptions: function setPathOptions(options) {\n    this.Draw.setPathOptions(options);\n  },\n  findLayers: function findLayers() {\n    var layers = [];\n    this.map.eachLayer(function (layer) {\n      if (layer instanceof L.Polyline || layer instanceof L.Marker || layer instanceof L.Circle) {\n        layers.push(layer);\n      }\n    }); // filter out layers that don't have the leaflet.pm instance\n\n    layers = layers.filter(function (layer) {\n      return !!layer.pm;\n    }); // filter out everything that's leaflet.pm specific temporary stuff\n\n    layers = layers.filter(function (layer) {\n      return !layer._pmTempLayer;\n    });\n    return layers;\n  },\n  removeLayer: function removeLayer(e) {\n    var layer = e.target; // only remove layer, if it's handled by leaflet.pm,\n    // not a tempLayer and not currently being dragged\n\n    var removeable = !layer._pmTempLayer && (!layer.pm || !layer.pm.dragging());\n\n    if (removeable) {\n      layer.remove();\n      this.map.fire('pm:remove', {\n        layer: layer\n      });\n    }\n  },\n  uniteLayer: function uniteLayer(e) {\n    var layer = e.target; // only remove layer, if it's handled by leaflet.pm,\n    // not a tempLayer and not currently being dragged\n\n    var unitable = !layer._pmTempLayer && (!layer.pm || !layer.pm.dragging()) && layer instanceof L.Polygon;\n\n    if (unitable) {\n      var l = this._unionLayer;\n\n      if (this._unionLayer) {\n        this._unionLayer = __WEBPACK_IMPORTED_MODULE_0__turf_union___default()(layer.toGeoJSON(), l.toGeoJSON()); // the resulting layer after the cut\n\n        var resultingLayer = L.geoJSON(this._unionLayer, l.options).addTo(this.map);\n        resultingLayer.addTo(this.map); // give the new layer the original options\n\n        resultingLayer.pm.enable(this.options);\n        resultingLayer.pm.disable();\n        l.remove();\n        layer.remove();\n        this.map.fire('pm:union', {\n          resultingLayer: resultingLayer\n        });\n      } else {\n        this._unionLayer = layer;\n      }\n    }\n  },\n  globalDragModeEnabled: function globalDragModeEnabled() {\n    return !!this._globalDragMode;\n  },\n  enableGlobalDragMode: function enableGlobalDragMode() {\n    var layers = this.findLayers();\n    this._globalDragMode = true;\n    layers.forEach(function (layer) {\n      layer.pm.enableLayerDrag();\n    }); // remove map handler\n\n    this.map.on('layeradd', this.layerAddHandler, this); // toogle the button in the toolbar if this is called programatically\n\n    this.Toolbar.toggleButton('dragMode', this._globalDragMode);\n  },\n  disableGlobalDragMode: function disableGlobalDragMode() {\n    var layers = this.findLayers();\n    this._globalDragMode = false;\n    layers.forEach(function (layer) {\n      layer.pm.disableLayerDrag();\n    }); // remove map handler\n\n    this.map.off('layeradd', this.layerAddHandler, this); // toogle the button in the toolbar if this is called programatically\n\n    this.Toolbar.toggleButton('dragMode', this._globalDragMode);\n  },\n  toggleGlobalDragMode: function toggleGlobalDragMode() {\n    if (this.globalDragModeEnabled()) {\n      this.disableGlobalDragMode();\n    } else {\n      this.enableGlobalDragMode();\n    }\n  },\n  layerAddHandler: function layerAddHandler(_ref) {\n    var layer = _ref.layer;\n    // is this layer handled by leaflet.pm?\n    var isRelevant = !!layer.pm && !layer._pmTempLayer; // do nothing if layer is not handled by leaflet so it doesn't fire unnecessarily\n\n    if (!isRelevant) {\n      return;\n    } // re-enable global removal mode if it's enabled already\n\n\n    if (this.globalRemovalEnabled()) {\n      this.disableGlobalRemovalMode();\n      this.enableGlobalRemovalMode();\n    } // re-enable global edit mode if it's enabled already\n\n\n    if (this.globalEditEnabled()) {\n      this.disableGlobalEditMode();\n      this.enableGlobalEditMode();\n    } // re-enable global drag mode if it's enabled already\n\n\n    if (this.globalDragModeEnabled()) {\n      this.disableGlobalDragMode();\n      this.enableGlobalDragMode();\n    } // re-enable global union mode if it's enabled already\n\n\n    if (this.globalUnionEnabled()) {\n      this.disableGlobalUnionMode();\n      this.enableGlobalUnionMode();\n    }\n  },\n  disableGlobalRemovalMode: function disableGlobalRemovalMode() {\n    var _this = this;\n\n    this._globalRemovalMode = false;\n    this.map.eachLayer(function (layer) {\n      layer.off('click', _this.removeLayer, _this);\n    }); // remove map handler\n\n    this.map.off('layeradd', this.layerAddHandler, this); // toogle the button in the toolbar if this is called programatically\n\n    this.Toolbar.toggleButton('deleteLayer', this._globalRemovalMode);\n  },\n  enableGlobalRemovalMode: function enableGlobalRemovalMode() {\n    var _this2 = this;\n\n    var isRelevant = function isRelevant(layer) {\n      return layer.pm && !(layer.pm.options && layer.pm.options.preventMarkerRemoval);\n    };\n\n    this._globalRemovalMode = true; // handle existing layers\n\n    this.map.eachLayer(function (layer) {\n      if (isRelevant(layer)) {\n        layer.on('click', _this2.removeLayer, _this2);\n      }\n    }); // handle layers that are added while in removal  xmode\n\n    this.map.on('layeradd', this.layerAddHandler, this); // toogle the button in the toolbar if this is called programatically\n\n    this.Toolbar.toggleButton('deleteLayer', this._globalRemovalMode);\n  },\n  toggleGlobalRemovalMode: function toggleGlobalRemovalMode() {\n    // toggle global edit mode\n    if (this.globalRemovalEnabled()) {\n      this.disableGlobalRemovalMode();\n    } else {\n      this.enableGlobalRemovalMode();\n    }\n  },\n  globalRemovalEnabled: function globalRemovalEnabled() {\n    return !!this._globalRemovalMode;\n  },\n  disableGlobalUnionMode: function disableGlobalUnionMode() {\n    var _this3 = this;\n\n    this._globalUnionMode = false;\n    this._unionLayer = undefined;\n    this.map.eachLayer(function (layer) {\n      layer.off('click', _this3.uniteLayer, _this3);\n    }); // remove map handler\n\n    this.map.off('layeradd', this.layerAddHandler, this); // toogle the button in the toolbar if this is called programatically\n\n    this.Toolbar.toggleButton('unionMode', this._globalUnionMode);\n  },\n  enableGlobalUnionMode: function enableGlobalUnionMode() {\n    var _this4 = this;\n\n    var isRelevant = function isRelevant(layer) {\n      return layer.pm;\n    };\n\n    this._globalUnionMode = true;\n    this._unionLayer = undefined; // handle existing layers\n\n    this.map.eachLayer(function (layer) {\n      if (isRelevant(layer)) {\n        layer.on('click', _this4.uniteLayer, _this4);\n      }\n    }); // handle layers that are added while in removal  xmode\n\n    this.map.on('layeradd', this.layerAddHandler, this); // toogle the button in the toolbar if this is called programatically\n\n    this.Toolbar.toggleButton('unionMode', this._globalUnionMode);\n  },\n  toggleGlobalUnionMode: function toggleGlobalUnionMode() {\n    // toggle global edit mode\n    if (this.globalUnionEnabled()) {\n      this.disableGlobalUnionMode();\n    } else {\n      this.enableGlobalUnionMode();\n    }\n  },\n  globalUnionEnabled: function globalUnionEnabled() {\n    return !!this._globalUnionMode;\n  },\n  globalEditEnabled: function globalEditEnabled() {\n    return this._globalEditMode;\n  },\n  enableGlobalEditMode: function enableGlobalEditMode(options) {\n    // find all layers handled by leaflet.pm\n    var layers = this.findLayers();\n    this._globalEditMode = true;\n    layers.forEach(function (layer) {\n      // console.log(layer);\n      layer.pm.enable(options);\n    }); // handle layers that are added while in removal  xmode\n\n    this.map.on('layeradd', this.layerAddHandler, this); // toggle the button in the toolbar\n\n    this.Toolbar.toggleButton('editPolygon', this._globalEditMode); // fire event\n\n    this._fireEditModeEvent(true);\n  },\n  disableGlobalEditMode: function disableGlobalEditMode() {\n    // find all layers handles by leaflet.pm\n    var layers = this.findLayers();\n    this._globalEditMode = false;\n    layers.forEach(function (layer) {\n      layer.pm.disable();\n    }); // handle layers that are added while in removal  xmode\n\n    this.map.on('layeroff', this.layerAddHandler, this); // toggle the button in the toolbar\n\n    this.Toolbar.toggleButton('editPolygon', this._globalEditMode); // fire event\n\n    this._fireEditModeEvent(false);\n  },\n  _fireEditModeEvent: function _fireEditModeEvent(enabled) {\n    this.map.fire('pm:globaleditmodetoggled', {\n      enabled: enabled,\n      map: this.map\n    });\n  },\n  toggleGlobalEditMode: function toggleGlobalEditMode(options) {\n    // console.log('toggle global edit mode', options);\n    if (this.globalEditEnabled()) {\n      // disable\n      this.disableGlobalEditMode();\n    } else {\n      // enable\n      this.enableGlobalEditMode(options);\n    }\n  }\n});\n/* harmony default export */ __webpack_exports__[\"a\"] = (Map);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///23\n");

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar martinez = __webpack_require__(6);\r\nvar invariant_1 = __webpack_require__(7);\r\nvar helpers_1 = __webpack_require__(2);\r\n/**\r\n * Takes two {@link (Multi)Polygon(s)} and returns a combined polygon. If the input polygons are not contiguous, this function returns a {@link MultiPolygon} feature.\r\n *\r\n * @name union\r\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\r\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\r\n * @param {Object} [options={}] Optional Parameters\r\n * @param {Object} [options.properties={}] Translate Properties to output Feature\r\n * @returns {Feature<(Polygon|MultiPolygon)>} a combined {@link Polygon} or {@link MultiPolygon} feature\r\n * @example\r\n * var poly1 = turf.polygon([[\r\n *     [-82.574787, 35.594087],\r\n *     [-82.574787, 35.615581],\r\n *     [-82.545261, 35.615581],\r\n *     [-82.545261, 35.594087],\r\n *     [-82.574787, 35.594087]\r\n * ]], {\"fill\": \"#0f0\"});\r\n * var poly2 = turf.polygon([[\r\n *     [-82.560024, 35.585153],\r\n *     [-82.560024, 35.602602],\r\n *     [-82.52964, 35.602602],\r\n *     [-82.52964, 35.585153],\r\n *     [-82.560024, 35.585153]\r\n * ]], {\"fill\": \"#00f\"});\r\n *\r\n * var union = turf.union(poly1, poly2);\r\n *\r\n * //addToMap\r\n * var addToMap = [poly1, poly2, union];\r\n */\r\nfunction union(polygon1, polygon2, options) {\r\n    if (options === void 0) { options = {}; }\r\n    var coords1 = invariant_1.getGeom(polygon1).coordinates;\r\n    var coords2 = invariant_1.getGeom(polygon2).coordinates;\r\n    var unioned = martinez.union(coords1, coords2);\r\n    if (unioned.length === 0)\r\n        return null;\r\n    if (unioned.length === 1)\r\n        return helpers_1.polygon(unioned[0], options.properties);\r\n    else\r\n        return helpers_1.multiPolygon(unioned, options.properties);\r\n}\r\nexports.default = union;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHR1cmYvdW5pb24vaW5kZXguanM/NmI4OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG52YXIgbWFydGluZXogPSByZXF1aXJlKFwibWFydGluZXotcG9seWdvbi1jbGlwcGluZ1wiKTtcclxudmFyIGludmFyaWFudF8xID0gcmVxdWlyZShcIkB0dXJmL2ludmFyaWFudFwiKTtcclxudmFyIGhlbHBlcnNfMSA9IHJlcXVpcmUoXCJAdHVyZi9oZWxwZXJzXCIpO1xyXG4vKipcclxuICogVGFrZXMgdHdvIHtAbGluayAoTXVsdGkpUG9seWdvbihzKX0gYW5kIHJldHVybnMgYSBjb21iaW5lZCBwb2x5Z29uLiBJZiB0aGUgaW5wdXQgcG9seWdvbnMgYXJlIG5vdCBjb250aWd1b3VzLCB0aGlzIGZ1bmN0aW9uIHJldHVybnMgYSB7QGxpbmsgTXVsdGlQb2x5Z29ufSBmZWF0dXJlLlxyXG4gKlxyXG4gKiBAbmFtZSB1bmlvblxyXG4gKiBAcGFyYW0ge0ZlYXR1cmU8UG9seWdvbnxNdWx0aVBvbHlnb24+fSBwb2x5Z29uMSBpbnB1dCBQb2x5Z29uIGZlYXR1cmVcclxuICogQHBhcmFtIHtGZWF0dXJlPFBvbHlnb258TXVsdGlQb2x5Z29uPn0gcG9seWdvbjIgUG9seWdvbiBmZWF0dXJlIHRvIGRpZmZlcmVuY2UgZnJvbSBwb2x5Z29uMVxyXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnM9e31dIE9wdGlvbmFsIFBhcmFtZXRlcnNcclxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zLnByb3BlcnRpZXM9e31dIFRyYW5zbGF0ZSBQcm9wZXJ0aWVzIHRvIG91dHB1dCBGZWF0dXJlXHJcbiAqIEByZXR1cm5zIHtGZWF0dXJlPChQb2x5Z29ufE11bHRpUG9seWdvbik+fSBhIGNvbWJpbmVkIHtAbGluayBQb2x5Z29ufSBvciB7QGxpbmsgTXVsdGlQb2x5Z29ufSBmZWF0dXJlXHJcbiAqIEBleGFtcGxlXHJcbiAqIHZhciBwb2x5MSA9IHR1cmYucG9seWdvbihbW1xyXG4gKiAgICAgWy04Mi41NzQ3ODcsIDM1LjU5NDA4N10sXHJcbiAqICAgICBbLTgyLjU3NDc4NywgMzUuNjE1NTgxXSxcclxuICogICAgIFstODIuNTQ1MjYxLCAzNS42MTU1ODFdLFxyXG4gKiAgICAgWy04Mi41NDUyNjEsIDM1LjU5NDA4N10sXHJcbiAqICAgICBbLTgyLjU3NDc4NywgMzUuNTk0MDg3XVxyXG4gKiBdXSwge1wiZmlsbFwiOiBcIiMwZjBcIn0pO1xyXG4gKiB2YXIgcG9seTIgPSB0dXJmLnBvbHlnb24oW1tcclxuICogICAgIFstODIuNTYwMDI0LCAzNS41ODUxNTNdLFxyXG4gKiAgICAgWy04Mi41NjAwMjQsIDM1LjYwMjYwMl0sXHJcbiAqICAgICBbLTgyLjUyOTY0LCAzNS42MDI2MDJdLFxyXG4gKiAgICAgWy04Mi41Mjk2NCwgMzUuNTg1MTUzXSxcclxuICogICAgIFstODIuNTYwMDI0LCAzNS41ODUxNTNdXHJcbiAqIF1dLCB7XCJmaWxsXCI6IFwiIzAwZlwifSk7XHJcbiAqXHJcbiAqIHZhciB1bmlvbiA9IHR1cmYudW5pb24ocG9seTEsIHBvbHkyKTtcclxuICpcclxuICogLy9hZGRUb01hcFxyXG4gKiB2YXIgYWRkVG9NYXAgPSBbcG9seTEsIHBvbHkyLCB1bmlvbl07XHJcbiAqL1xyXG5mdW5jdGlvbiB1bmlvbihwb2x5Z29uMSwgcG9seWdvbjIsIG9wdGlvbnMpIHtcclxuICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHsgb3B0aW9ucyA9IHt9OyB9XHJcbiAgICB2YXIgY29vcmRzMSA9IGludmFyaWFudF8xLmdldEdlb20ocG9seWdvbjEpLmNvb3JkaW5hdGVzO1xyXG4gICAgdmFyIGNvb3JkczIgPSBpbnZhcmlhbnRfMS5nZXRHZW9tKHBvbHlnb24yKS5jb29yZGluYXRlcztcclxuICAgIHZhciB1bmlvbmVkID0gbWFydGluZXoudW5pb24oY29vcmRzMSwgY29vcmRzMik7XHJcbiAgICBpZiAodW5pb25lZC5sZW5ndGggPT09IDApXHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICBpZiAodW5pb25lZC5sZW5ndGggPT09IDEpXHJcbiAgICAgICAgcmV0dXJuIGhlbHBlcnNfMS5wb2x5Z29uKHVuaW9uZWRbMF0sIG9wdGlvbnMucHJvcGVydGllcyk7XHJcbiAgICBlbHNlXHJcbiAgICAgICAgcmV0dXJuIGhlbHBlcnNfMS5tdWx0aVBvbHlnb24odW5pb25lZCwgb3B0aW9ucy5wcm9wZXJ0aWVzKTtcclxufVxyXG5leHBvcnRzLmRlZmF1bHQgPSB1bmlvbjtcclxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvQHR1cmYvdW5pb24vaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDI0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///24\n");

/***/ }),
/* 25 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__L_Controls__ = __webpack_require__(26);\n\nL.Control.PMButton = __WEBPACK_IMPORTED_MODULE_0__L_Controls__[\"a\" /* default */];\nvar Toolbar = L.Class.extend({\n  options: {\n    drawMarker: true,\n    drawRectangle: true,\n    drawPolyline: true,\n    drawPolygon: true,\n    drawCircle: true,\n    editMode: true,\n    dragMode: true,\n    cutPolygon: true,\n    unionMode: true,\n    removalMode: true,\n    position: 'topleft',\n    textCancel: 'Cancel',\n    textRemoveLastVertex: 'Remove Last Vertex',\n    textFinish: 'Finish',\n    textDrawMaker: 'Draw Marker',\n    textDrawPolygon: 'Draw Polygon',\n    textDrawPolyline: 'Draw Polyline',\n    textDrawCircle: 'Draw Circle',\n    textDrawRectangle: 'Draw Rectangle',\n    textEditLayers: 'Edit Layers',\n    textDragLayers: 'Drag Layers',\n    textCutLayers: 'Cut Layers',\n    textUnionMode: 'Union Mode',\n    textRemovalMode: 'Removal Mode'\n  },\n  initialize: function initialize(map) {\n    this.map = map;\n    this.buttons = {};\n    this.isVisible = false;\n    this.drawContainer = L.DomUtil.create('div', 'leaflet-pm-toolbar leaflet-pm-draw leaflet-bar leaflet-control');\n    this.editContainer = L.DomUtil.create('div', 'leaflet-pm-toolbar leaflet-pm-edit leaflet-bar leaflet-control'); // this._defineButtons();\n  },\n  getButtons: function getButtons() {\n    return this.buttons;\n  },\n  addControls: function addControls() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.options;\n    // adds all buttons to the map specified inside options\n    console.log('add', options); // make button renaming backwards compatible\n\n    if (typeof options.editPolygon !== 'undefined') {\n      options.editMode = options.editPolygon;\n    }\n\n    if (typeof options.deleteLayer !== 'undefined') {\n      options.removalMode = options.deleteLayer;\n    } // first set the options\n\n\n    L.Util.setOptions(this, options);\n    console.log('setOptions', this);\n\n    this._defineButtons();\n\n    this.applyIconStyle(); // now show the specified buttons\n\n    this._showHideButtons();\n\n    this.isVisible = true;\n  },\n  applyIconStyle: function applyIconStyle() {\n    var buttons = this.getButtons();\n    var iconClasses = {\n      geomanIcons: {\n        drawMarker: 'control-icon leaflet-pm-icon-marker',\n        drawPolyline: 'control-icon leaflet-pm-icon-polyline',\n        drawRectangle: 'control-icon leaflet-pm-icon-rectangle',\n        drawPolygon: 'control-icon leaflet-pm-icon-polygon',\n        drawCircle: 'control-icon leaflet-pm-icon-circle',\n        editMode: 'control-icon leaflet-pm-icon-edit',\n        dragMode: 'control-icon leaflet-pm-icon-drag',\n        cutPolygon: 'control-icon leaflet-pm-icon-cut',\n        unionMode: 'control-icon leaflet-pm-icon-union',\n        removalMode: 'control-icon leaflet-pm-icon-delete'\n      }\n    };\n\n    for (var name in buttons) {\n      var button = buttons[name];\n      L.Util.setOptions(button, {\n        className: iconClasses.geomanIcons[name]\n      });\n    }\n  },\n  removeControls: function removeControls() {\n    // grab all buttons to loop through\n    var buttons = this.getButtons(); // remove all buttons\n\n    for (var btn in buttons) {\n      buttons[btn].remove();\n    }\n\n    this.isVisible = false;\n  },\n  toggleControls: function toggleControls() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.options;\n\n    if (this.isVisible) {\n      this.removeControls();\n    } else {\n      this.addControls(options);\n    }\n  },\n  _addButton: function _addButton(name, button) {\n    this.buttons[name] = button;\n    this.options[name] = this.options[name] || false;\n    return this.buttons[name];\n  },\n  triggerClickOnToggledButtons: function triggerClickOnToggledButtons(exceptThisButton) {\n    // this function is used when - e.g. drawing mode is enabled and a possible\n    // other active mode (like removal tool) is already active.\n    // we can't have two active modes because of possible event conflicts\n    // so, we trigger a click on all currently active (toggled) buttons\n    for (var name in this.buttons) {\n      if (this.buttons[name] !== exceptThisButton && this.buttons[name].toggled()) {\n        this.buttons[name]._triggerClick();\n      }\n    }\n  },\n  toggleButton: function toggleButton(name, status) {\n    // does not fire the events/functionality of the button\n    // this just changes the state and is used if a functionality (like Draw)\n    // is enabled manually via script\n    // backwards compatibility with button rename\n    if (name === 'editPolygon') {\n      name = 'editMode';\n    }\n\n    if (name === 'deleteLayer') {\n      name = 'removalMode';\n    } // as some mode got enabled, we still have to trigger the click on the other buttons\n    // to disable their mode\n\n\n    this.triggerClickOnToggledButtons(this.buttons[name]); // now toggle the state of the button\n\n    return this.buttons[name].toggle(status);\n  },\n  _defineButtons: function _defineButtons() {\n    var _this = this;\n\n    console.log('_defineButtons', this); // some buttons are still in their respective classes, like L.PM.Draw.Poly\n\n    var drawMarkerButton = {\n      className: 'control-icon leaflet-pm-icon-marker',\n      title: this.options.textDrawMaker,\n      jsClass: 'Marker',\n      onClick: function onClick() {},\n      afterClick: function afterClick() {\n        // toggle drawing mode\n        _this.map.pm.Draw.Marker.toggle();\n      },\n      doToggle: true,\n      toggleStatus: false,\n      disableOtherButtons: true,\n      position: this.options.position,\n      actions: ['cancel'],\n      actionsTitle: {\n        cancel: this.options.textCancel\n      }\n    };\n    var drawPolyButton = {\n      title: this.options.textDrawPolygon,\n      className: 'control-icon leaflet-pm-icon-polygon',\n      jsClass: 'Poly',\n      onClick: function onClick() {},\n      afterClick: function afterClick() {\n        // toggle drawing mode\n        _this.map.pm.Draw.Poly.toggle();\n      },\n      doToggle: true,\n      toggleStatus: false,\n      disableOtherButtons: true,\n      position: this.options.position,\n      actions: ['finish', 'removeLastVertex', 'cancel'],\n      actionsTitle: {\n        finish: this.options.textFinish,\n        cancel: this.options.textCancel,\n        removeLastVertex: this.options.textRemoveLastVertex\n      }\n    };\n    var drawLineButton = {\n      className: 'control-icon leaflet-pm-icon-polyline',\n      title: this.options.textDrawPolyline,\n      jsClass: 'Line',\n      onClick: function onClick() {},\n      afterClick: function afterClick() {\n        // toggle drawing mode\n        _this.map.pm.Draw.Line.toggle();\n      },\n      doToggle: true,\n      toggleStatus: false,\n      disableOtherButtons: true,\n      position: this.options.position,\n      actions: ['finish', 'removeLastVertex', 'cancel'],\n      actionsTitle: {\n        finish: this.options.textFinish,\n        cancel: this.options.textCancel,\n        removeLastVertex: this.options.textRemoveLastVertex\n      }\n    };\n    var drawCircleButton = {\n      title: this.options.textDrawCircle,\n      className: 'control-icon leaflet-pm-icon-circle',\n      jsClass: 'Circle',\n      onClick: function onClick() {},\n      afterClick: function afterClick() {\n        // toggle drawing mode\n        _this.map.pm.Draw.Circle.toggle();\n      },\n      doToggle: true,\n      toggleStatus: false,\n      disableOtherButtons: true,\n      position: this.options.position,\n      actions: ['cancel'],\n      actionsTitle: {\n        cancel: this.options.textCancel\n      }\n    };\n    var drawRectButton = {\n      title: this.options.textDrawRectangle,\n      className: 'control-icon leaflet-pm-icon-rectangle',\n      jsClass: 'Rectangle',\n      onClick: function onClick() {},\n      afterClick: function afterClick() {\n        // toggle drawing mode\n        _this.map.pm.Draw.Rectangle.toggle();\n      },\n      doToggle: true,\n      toggleStatus: false,\n      disableOtherButtons: true,\n      position: this.options.position,\n      actions: ['cancel'],\n      actionsTitle: {\n        cancel: this.options.textCancel\n      }\n    };\n    var editButton = {\n      title: this.options.textEditLayers,\n      className: 'control-icon leaflet-pm-icon-edit',\n      onClick: function onClick() {},\n      afterClick: function afterClick() {\n        _this.map.pm.toggleGlobalEditMode();\n      },\n      doToggle: true,\n      toggleStatus: false,\n      disableOtherButtons: true,\n      position: this.options.position,\n      tool: 'edit',\n      actions: ['cancel'],\n      actionsTitle: {\n        cancel: this.options.textCancel\n      }\n    };\n    var dragButton = {\n      title: this.options.textDragLayers,\n      className: 'control-icon leaflet-pm-icon-drag',\n      onClick: function onClick() {},\n      afterClick: function afterClick() {\n        _this.map.pm.toggleGlobalDragMode();\n      },\n      doToggle: true,\n      toggleStatus: false,\n      disableOtherButtons: true,\n      position: this.options.position,\n      tool: 'edit',\n      actions: ['cancel'],\n      actionsTitle: {\n        cancel: this.options.textCancel\n      }\n    };\n    var cutButton = {\n      title: this.options.textCutLayers,\n      className: 'control-icon leaflet-pm-icon-cut',\n      jsClass: 'Cut',\n      onClick: function onClick() {},\n      afterClick: function afterClick() {\n        // enable polygon drawing mode without snap\n        _this.map.pm.Draw.Cut.toggle({\n          snappable: true,\n          cursorMarker: true,\n          allowSelfIntersection: false\n        });\n      },\n      doToggle: true,\n      toggleStatus: false,\n      disableOtherButtons: true,\n      position: this.options.position,\n      tool: 'edit',\n      actions: ['finish', 'removeLastVertex', 'cancel'],\n      actionsTitle: {\n        finish: this.options.textFinish,\n        cancel: this.options.textCancel,\n        removeLastVertex: this.options.textRemoveLastVertex\n      }\n    };\n    var unionButton = {\n      title: this.options.textUnionMode,\n      className: 'control-icon leaflet-pm-icon-union',\n      jsClass: 'Union',\n      onClick: function onClick() {},\n      afterClick: function afterClick() {\n        // enable polygon drawing mode without snap\n        _this.map.pm.toggleGlobalUnionMode();\n      },\n      doToggle: true,\n      toggleStatus: false,\n      disableOtherButtons: true,\n      position: this.options.position,\n      tool: 'edit',\n      actions: ['cancel'],\n      actionsTitle: {\n        cancel: this.options.textCancel\n      }\n    };\n    var deleteButton = {\n      title: this.options.textRemovalMode,\n      className: 'control-icon leaflet-pm-icon-delete',\n      onClick: function onClick() {},\n      afterClick: function afterClick() {\n        _this.map.pm.toggleGlobalRemovalMode();\n      },\n      doToggle: true,\n      toggleStatus: false,\n      disableOtherButtons: true,\n      position: this.options.position,\n      tool: 'edit',\n      actions: ['cancel'],\n      actionsTitle: {\n        cancel: this.options.textCancel\n      }\n    };\n\n    this._addButton('drawMarker', new L.Control.PMButton(drawMarkerButton));\n\n    this._addButton('drawPolyline', new L.Control.PMButton(drawLineButton));\n\n    this._addButton('drawRectangle', new L.Control.PMButton(drawRectButton));\n\n    this._addButton('drawPolygon', new L.Control.PMButton(drawPolyButton));\n\n    this._addButton('drawCircle', new L.Control.PMButton(drawCircleButton));\n\n    this._addButton('editMode', new L.Control.PMButton(editButton));\n\n    this._addButton('dragMode', new L.Control.PMButton(dragButton));\n\n    this._addButton('cutPolygon', new L.Control.PMButton(cutButton));\n\n    this._addButton('unionMode', new L.Control.PMButton(unionButton));\n\n    this._addButton('removalMode', new L.Control.PMButton(deleteButton));\n  },\n  _showHideButtons: function _showHideButtons() {\n    // remove all buttons, that's because the Toolbar can be added again with\n    // different options so it's basically a reset and add again\n    this.removeControls();\n    var buttons = this.getButtons();\n\n    for (var btn in buttons) {\n      if (this.options[btn]) {\n        // if options say the button should be visible, add it to the map\n        buttons[btn].setPosition(this.options.position);\n        buttons[btn].addTo(this.map);\n      }\n    }\n  }\n});\n/* harmony default export */ __webpack_exports__[\"a\"] = (Toolbar);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///25\n");

/***/ }),
/* 26 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("var PMButton = L.Control.extend({\n  options: {\n    position: 'topleft'\n  },\n  // TODO: clean up variable names like _button should be _options and that domNodeVariable stuff\n  initialize: function initialize(options) {\n    this._button = L.Util.setOptions(this, options);\n  },\n  onAdd: function onAdd(map) {\n    this._map = map;\n    this._container = this._button.tool === 'edit' ? this._map.pm.Toolbar.editContainer : this._map.pm.Toolbar.drawContainer;\n    this.buttonsDomNode = this._makeButton(this._button);\n\n    this._container.appendChild(this.buttonsDomNode);\n\n    return this._container;\n  },\n  onRemove: function onRemove() {\n    this.buttonsDomNode.remove();\n    return this._container;\n  },\n  getText: function getText() {\n    return this._button.text;\n  },\n  getIconUrl: function getIconUrl() {\n    return this._button.iconUrl;\n  },\n  destroy: function destroy() {\n    this._button = {};\n\n    this._update();\n  },\n  toggle: function toggle(e) {\n    if (typeof e === 'boolean') {\n      this._button.toggleStatus = e;\n    } else {\n      this._button.toggleStatus = !this._button.toggleStatus;\n    }\n\n    this._applyStyleClasses();\n\n    return this._button.toggleStatus;\n  },\n  toggled: function toggled() {\n    return this._button.toggleStatus;\n  },\n  onCreate: function onCreate() {\n    this.toggle(false);\n  },\n  _triggerClick: function _triggerClick(e) {\n    this._button.onClick(e);\n\n    this._clicked(e);\n\n    this._button.afterClick(e);\n  },\n  _makeButton: function _makeButton(button) {\n    var _this = this;\n\n    // button container\n    var buttonContainer = L.DomUtil.create('div', 'button-container', this._container); // the button itself\n\n    var newButton = L.DomUtil.create('a', 'leaflet-buttons-control-button', buttonContainer); // the buttons actions\n\n    var actionContainer = L.DomUtil.create('div', 'leaflet-pm-actions-container', buttonContainer);\n    var activeActions = button.actions;\n    var actions = {\n      cancel: {\n        text: button.actionsTitle.cancel || 'Cancel',\n        onClick: function onClick() {\n          this._triggerClick();\n        }\n      },\n      removeLastVertex: {\n        text: button.actionsTitle.removeLastVertex || 'Remove Last Vertex',\n        onClick: function onClick() {\n          this._map.pm.Draw[button.jsClass]._removeLastVertex();\n        }\n      },\n      finish: {\n        text: button.actionsTitle.finish || 'Finish',\n        onClick: function onClick(e) {\n          this._map.pm.Draw[button.jsClass]._finishShape(e);\n        }\n      }\n    };\n    activeActions.forEach(function (name) {\n      var action = actions[name];\n      var actionNode = L.DomUtil.create('a', \"leaflet-pm-action action-\".concat(name), actionContainer);\n      console.log(action.text);\n      actionNode.innerHTML = action.text;\n      L.DomEvent.addListener(actionNode, 'click', action.onClick, _this);\n      L.DomEvent.disableClickPropagation(actionNode);\n    });\n\n    if (button.toggleStatus) {\n      L.DomUtil.addClass(newButton, 'active');\n    }\n\n    var image = L.DomUtil.create('div', 'control-icon', newButton);\n\n    if (button.title) {\n      image.setAttribute('title', button.title);\n    }\n\n    if (button.iconUrl) {\n      image.setAttribute('src', button.iconUrl);\n    }\n\n    if (button.className) {\n      L.DomUtil.addClass(image, button.className);\n    } // before the actual click, trigger a click on currently toggled buttons to\n    // untoggle them and their functionality\n\n\n    L.DomEvent.addListener(newButton, 'click', function () {\n      if (_this._button.disableOtherButtons) {\n        _this._map.pm.Toolbar.triggerClickOnToggledButtons(_this);\n      }\n    });\n    L.DomEvent.addListener(newButton, 'click', this._triggerClick, this);\n    L.DomEvent.disableClickPropagation(newButton);\n    return buttonContainer;\n  },\n  _applyStyleClasses: function _applyStyleClasses() {\n    if (!this._container) {\n      return;\n    }\n\n    if (!this._button.toggleStatus) {\n      L.DomUtil.removeClass(this.buttonsDomNode, 'active');\n    } else {\n      L.DomUtil.addClass(this.buttonsDomNode, 'active');\n    }\n  },\n  _clicked: function _clicked() {\n    if (this._button.doToggle) {\n      this.toggle();\n    }\n  }\n});\n/* harmony default export */ __webpack_exports__[\"a\"] = (PMButton);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvVG9vbGJhci9MLkNvbnRyb2xzLmpzPzg5ZTYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIFBNQnV0dG9uID0gTC5Db250cm9sLmV4dGVuZCh7XG4gIG9wdGlvbnM6IHtcbiAgICBwb3NpdGlvbjogJ3RvcGxlZnQnXG4gIH0sXG4gIC8vIFRPRE86IGNsZWFuIHVwIHZhcmlhYmxlIG5hbWVzIGxpa2UgX2J1dHRvbiBzaG91bGQgYmUgX29wdGlvbnMgYW5kIHRoYXQgZG9tTm9kZVZhcmlhYmxlIHN0dWZmXG4gIGluaXRpYWxpemU6IGZ1bmN0aW9uIGluaXRpYWxpemUob3B0aW9ucykge1xuICAgIHRoaXMuX2J1dHRvbiA9IEwuVXRpbC5zZXRPcHRpb25zKHRoaXMsIG9wdGlvbnMpO1xuICB9LFxuICBvbkFkZDogZnVuY3Rpb24gb25BZGQobWFwKSB7XG4gICAgdGhpcy5fbWFwID0gbWFwO1xuICAgIHRoaXMuX2NvbnRhaW5lciA9IHRoaXMuX2J1dHRvbi50b29sID09PSAnZWRpdCcgPyB0aGlzLl9tYXAucG0uVG9vbGJhci5lZGl0Q29udGFpbmVyIDogdGhpcy5fbWFwLnBtLlRvb2xiYXIuZHJhd0NvbnRhaW5lcjtcbiAgICB0aGlzLmJ1dHRvbnNEb21Ob2RlID0gdGhpcy5fbWFrZUJ1dHRvbih0aGlzLl9idXR0b24pO1xuXG4gICAgdGhpcy5fY29udGFpbmVyLmFwcGVuZENoaWxkKHRoaXMuYnV0dG9uc0RvbU5vZGUpO1xuXG4gICAgcmV0dXJuIHRoaXMuX2NvbnRhaW5lcjtcbiAgfSxcbiAgb25SZW1vdmU6IGZ1bmN0aW9uIG9uUmVtb3ZlKCkge1xuICAgIHRoaXMuYnV0dG9uc0RvbU5vZGUucmVtb3ZlKCk7XG4gICAgcmV0dXJuIHRoaXMuX2NvbnRhaW5lcjtcbiAgfSxcbiAgZ2V0VGV4dDogZnVuY3Rpb24gZ2V0VGV4dCgpIHtcbiAgICByZXR1cm4gdGhpcy5fYnV0dG9uLnRleHQ7XG4gIH0sXG4gIGdldEljb25Vcmw6IGZ1bmN0aW9uIGdldEljb25VcmwoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2J1dHRvbi5pY29uVXJsO1xuICB9LFxuICBkZXN0cm95OiBmdW5jdGlvbiBkZXN0cm95KCkge1xuICAgIHRoaXMuX2J1dHRvbiA9IHt9O1xuXG4gICAgdGhpcy5fdXBkYXRlKCk7XG4gIH0sXG4gIHRvZ2dsZTogZnVuY3Rpb24gdG9nZ2xlKGUpIHtcbiAgICBpZiAodHlwZW9mIGUgPT09ICdib29sZWFuJykge1xuICAgICAgdGhpcy5fYnV0dG9uLnRvZ2dsZVN0YXR1cyA9IGU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2J1dHRvbi50b2dnbGVTdGF0dXMgPSAhdGhpcy5fYnV0dG9uLnRvZ2dsZVN0YXR1cztcbiAgICB9XG5cbiAgICB0aGlzLl9hcHBseVN0eWxlQ2xhc3NlcygpO1xuXG4gICAgcmV0dXJuIHRoaXMuX2J1dHRvbi50b2dnbGVTdGF0dXM7XG4gIH0sXG4gIHRvZ2dsZWQ6IGZ1bmN0aW9uIHRvZ2dsZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2J1dHRvbi50b2dnbGVTdGF0dXM7XG4gIH0sXG4gIG9uQ3JlYXRlOiBmdW5jdGlvbiBvbkNyZWF0ZSgpIHtcbiAgICB0aGlzLnRvZ2dsZShmYWxzZSk7XG4gIH0sXG4gIF90cmlnZ2VyQ2xpY2s6IGZ1bmN0aW9uIF90cmlnZ2VyQ2xpY2soZSkge1xuICAgIHRoaXMuX2J1dHRvbi5vbkNsaWNrKGUpO1xuXG4gICAgdGhpcy5fY2xpY2tlZChlKTtcblxuICAgIHRoaXMuX2J1dHRvbi5hZnRlckNsaWNrKGUpO1xuICB9LFxuICBfbWFrZUJ1dHRvbjogZnVuY3Rpb24gX21ha2VCdXR0b24oYnV0dG9uKSB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIC8vIGJ1dHRvbiBjb250YWluZXJcbiAgICB2YXIgYnV0dG9uQ29udGFpbmVyID0gTC5Eb21VdGlsLmNyZWF0ZSgnZGl2JywgJ2J1dHRvbi1jb250YWluZXInLCB0aGlzLl9jb250YWluZXIpOyAvLyB0aGUgYnV0dG9uIGl0c2VsZlxuXG4gICAgdmFyIG5ld0J1dHRvbiA9IEwuRG9tVXRpbC5jcmVhdGUoJ2EnLCAnbGVhZmxldC1idXR0b25zLWNvbnRyb2wtYnV0dG9uJywgYnV0dG9uQ29udGFpbmVyKTsgLy8gdGhlIGJ1dHRvbnMgYWN0aW9uc1xuXG4gICAgdmFyIGFjdGlvbkNvbnRhaW5lciA9IEwuRG9tVXRpbC5jcmVhdGUoJ2RpdicsICdsZWFmbGV0LXBtLWFjdGlvbnMtY29udGFpbmVyJywgYnV0dG9uQ29udGFpbmVyKTtcbiAgICB2YXIgYWN0aXZlQWN0aW9ucyA9IGJ1dHRvbi5hY3Rpb25zO1xuICAgIHZhciBhY3Rpb25zID0ge1xuICAgICAgY2FuY2VsOiB7XG4gICAgICAgIHRleHQ6IGJ1dHRvbi5hY3Rpb25zVGl0bGUuY2FuY2VsIHx8ICdDYW5jZWwnLFxuICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKCkge1xuICAgICAgICAgIHRoaXMuX3RyaWdnZXJDbGljaygpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgcmVtb3ZlTGFzdFZlcnRleDoge1xuICAgICAgICB0ZXh0OiBidXR0b24uYWN0aW9uc1RpdGxlLnJlbW92ZUxhc3RWZXJ0ZXggfHwgJ1JlbW92ZSBMYXN0IFZlcnRleCcsXG4gICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soKSB7XG4gICAgICAgICAgdGhpcy5fbWFwLnBtLkRyYXdbYnV0dG9uLmpzQ2xhc3NdLl9yZW1vdmVMYXN0VmVydGV4KCk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBmaW5pc2g6IHtcbiAgICAgICAgdGV4dDogYnV0dG9uLmFjdGlvbnNUaXRsZS5maW5pc2ggfHwgJ0ZpbmlzaCcsXG4gICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soZSkge1xuICAgICAgICAgIHRoaXMuX21hcC5wbS5EcmF3W2J1dHRvbi5qc0NsYXNzXS5fZmluaXNoU2hhcGUoZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuICAgIGFjdGl2ZUFjdGlvbnMuZm9yRWFjaChmdW5jdGlvbiAobmFtZSkge1xuICAgICAgdmFyIGFjdGlvbiA9IGFjdGlvbnNbbmFtZV07XG4gICAgICB2YXIgYWN0aW9uTm9kZSA9IEwuRG9tVXRpbC5jcmVhdGUoJ2EnLCBcImxlYWZsZXQtcG0tYWN0aW9uIGFjdGlvbi1cIi5jb25jYXQobmFtZSksIGFjdGlvbkNvbnRhaW5lcik7XG4gICAgICBjb25zb2xlLmxvZyhhY3Rpb24udGV4dCk7XG4gICAgICBhY3Rpb25Ob2RlLmlubmVySFRNTCA9IGFjdGlvbi50ZXh0O1xuICAgICAgTC5Eb21FdmVudC5hZGRMaXN0ZW5lcihhY3Rpb25Ob2RlLCAnY2xpY2snLCBhY3Rpb24ub25DbGljaywgX3RoaXMpO1xuICAgICAgTC5Eb21FdmVudC5kaXNhYmxlQ2xpY2tQcm9wYWdhdGlvbihhY3Rpb25Ob2RlKTtcbiAgICB9KTtcblxuICAgIGlmIChidXR0b24udG9nZ2xlU3RhdHVzKSB7XG4gICAgICBMLkRvbVV0aWwuYWRkQ2xhc3MobmV3QnV0dG9uLCAnYWN0aXZlJyk7XG4gICAgfVxuXG4gICAgdmFyIGltYWdlID0gTC5Eb21VdGlsLmNyZWF0ZSgnZGl2JywgJ2NvbnRyb2wtaWNvbicsIG5ld0J1dHRvbik7XG5cbiAgICBpZiAoYnV0dG9uLnRpdGxlKSB7XG4gICAgICBpbWFnZS5zZXRBdHRyaWJ1dGUoJ3RpdGxlJywgYnV0dG9uLnRpdGxlKTtcbiAgICB9XG5cbiAgICBpZiAoYnV0dG9uLmljb25VcmwpIHtcbiAgICAgIGltYWdlLnNldEF0dHJpYnV0ZSgnc3JjJywgYnV0dG9uLmljb25VcmwpO1xuICAgIH1cblxuICAgIGlmIChidXR0b24uY2xhc3NOYW1lKSB7XG4gICAgICBMLkRvbVV0aWwuYWRkQ2xhc3MoaW1hZ2UsIGJ1dHRvbi5jbGFzc05hbWUpO1xuICAgIH0gLy8gYmVmb3JlIHRoZSBhY3R1YWwgY2xpY2ssIHRyaWdnZXIgYSBjbGljayBvbiBjdXJyZW50bHkgdG9nZ2xlZCBidXR0b25zIHRvXG4gICAgLy8gdW50b2dnbGUgdGhlbSBhbmQgdGhlaXIgZnVuY3Rpb25hbGl0eVxuXG5cbiAgICBMLkRvbUV2ZW50LmFkZExpc3RlbmVyKG5ld0J1dHRvbiwgJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKF90aGlzLl9idXR0b24uZGlzYWJsZU90aGVyQnV0dG9ucykge1xuICAgICAgICBfdGhpcy5fbWFwLnBtLlRvb2xiYXIudHJpZ2dlckNsaWNrT25Ub2dnbGVkQnV0dG9ucyhfdGhpcyk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgTC5Eb21FdmVudC5hZGRMaXN0ZW5lcihuZXdCdXR0b24sICdjbGljaycsIHRoaXMuX3RyaWdnZXJDbGljaywgdGhpcyk7XG4gICAgTC5Eb21FdmVudC5kaXNhYmxlQ2xpY2tQcm9wYWdhdGlvbihuZXdCdXR0b24pO1xuICAgIHJldHVybiBidXR0b25Db250YWluZXI7XG4gIH0sXG4gIF9hcHBseVN0eWxlQ2xhc3NlczogZnVuY3Rpb24gX2FwcGx5U3R5bGVDbGFzc2VzKCkge1xuICAgIGlmICghdGhpcy5fY29udGFpbmVyKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKCF0aGlzLl9idXR0b24udG9nZ2xlU3RhdHVzKSB7XG4gICAgICBMLkRvbVV0aWwucmVtb3ZlQ2xhc3ModGhpcy5idXR0b25zRG9tTm9kZSwgJ2FjdGl2ZScpO1xuICAgIH0gZWxzZSB7XG4gICAgICBMLkRvbVV0aWwuYWRkQ2xhc3ModGhpcy5idXR0b25zRG9tTm9kZSwgJ2FjdGl2ZScpO1xuICAgIH1cbiAgfSxcbiAgX2NsaWNrZWQ6IGZ1bmN0aW9uIF9jbGlja2VkKCkge1xuICAgIGlmICh0aGlzLl9idXR0b24uZG9Ub2dnbGUpIHtcbiAgICAgIHRoaXMudG9nZ2xlKCk7XG4gICAgfVxuICB9XG59KTtcbmV4cG9ydCBkZWZhdWx0IFBNQnV0dG9uO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL1Rvb2xiYXIvTC5Db250cm9scy5qc1xuLy8gbW9kdWxlIGlkID0gMjZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///26\n");

/***/ }),
/* 27 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__L_PM_Draw__ = __webpack_require__(0);\n\n__WEBPACK_IMPORTED_MODULE_0__L_PM_Draw__[\"a\" /* default */].Marker = __WEBPACK_IMPORTED_MODULE_0__L_PM_Draw__[\"a\" /* default */].extend({\n  initialize: function initialize(map) {\n    this._map = map;\n    this._shape = 'Marker';\n    this.toolbarButtonName = 'drawMarker';\n  },\n  enable: function enable(options) {\n    // TODO: Think about if these options could be passed globally for all\n    // instances of L.PM.Draw. So a dev could set drawing style one time as some kind of config\n    L.Util.setOptions(this, options); // change enabled state\n\n    this._enabled = true; // create a marker on click on the map\n\n    this._map.on('click', this._createMarker, this); // toggle the draw button of the Toolbar in case drawing mode got enabled without the button\n\n\n    this._map.pm.Toolbar.toggleButton(this.toolbarButtonName, true); // this is the hintmarker on the mouse cursor\n\n\n    this._hintMarker = L.marker([0, 0], this.options.markerStyle);\n    this._hintMarker._pmTempLayer = true;\n\n    this._hintMarker.addTo(this._map); // add tooltip to hintmarker\n\n\n    if (this.options.tooltips) {\n      console.log(this.options);\n\n      this._hintMarker.bindTooltip(this.options.textHintPlaceMarker || 'Click to place marker', {\n        permanent: true,\n        offset: L.point(0, 10),\n        direction: 'bottom',\n        opacity: 0.8\n      }).openTooltip();\n    } // this is just to keep the snappable mixin happy\n\n\n    this._layer = this._hintMarker; // sync hint marker with mouse cursor\n\n    this._map.on('mousemove', this._syncHintMarker, this); // fire drawstart event\n\n\n    this._map.fire('pm:drawstart', {\n      shape: this._shape,\n      workingLayer: this._layer\n    }); // enable edit mode for existing markers\n\n\n    this._map.eachLayer(function (layer) {\n      if (layer instanceof L.Marker && layer.pm) {\n        layer.pm.enable();\n      }\n    });\n  },\n  disable: function disable() {\n    // cancel, if drawing mode isn't even enabled\n    if (!this._enabled) {\n      return;\n    } // undbind click event, don't create a marker on click anymore\n\n\n    this._map.off('click', this._createMarker, this); // remove hint marker\n\n\n    this._hintMarker.remove(); // remove event listener to sync hint marker\n\n\n    this._map.off('mousemove', this._syncHintMarker, this); // disable dragging and removing for all markers\n\n\n    this._map.eachLayer(function (layer) {\n      if (layer instanceof L.Marker && layer.pm && !layer._pmTempLayer) {\n        layer.pm.disable();\n      }\n    }); // fire drawend event\n\n\n    this._map.fire('pm:drawend', {\n      shape: this._shape\n    }); // toggle the draw button of the Toolbar in case drawing mode got disabled without the button\n\n\n    this._map.pm.Toolbar.toggleButton(this.toolbarButtonName, false); // change enabled state\n\n\n    this._enabled = false;\n  },\n  enabled: function enabled() {\n    return this._enabled;\n  },\n  toggle: function toggle(options) {\n    if (this.enabled()) {\n      this.disable();\n    } else {\n      this.enable(options);\n    }\n  },\n  _createMarker: function _createMarker(e) {\n    if (!e.latlng) {\n      return;\n    } // assign the coordinate of the click to the hintMarker, that's necessary for\n    // mobile where the marker can't follow a cursor\n\n\n    if (!this._hintMarker._snapped) {\n      this._hintMarker.setLatLng(e.latlng);\n    } // get coordinate for new vertex by hintMarker (cursor marker)\n\n\n    var latlng = this._hintMarker.getLatLng(); // create marker\n\n\n    var marker = new L.Marker(latlng, this.options.markerStyle); // add marker to the map\n\n    marker.addTo(this._map); // enable editing for the marker\n\n    marker.pm.enable(); // fire the pm:create event and pass shape and marker\n\n    this._map.fire('pm:create', {\n      shape: this._shape,\n      marker: marker,\n      // DEPRECATED\n      layer: marker\n    });\n\n    this._cleanupSnapping();\n  },\n  _syncHintMarker: function _syncHintMarker(e) {\n    // move the cursor marker\n    this._hintMarker.setLatLng(e.latlng); // if snapping is enabled, do it\n\n\n    if (this.options.snappable) {\n      var fakeDragEvent = e;\n      fakeDragEvent.target = this._hintMarker;\n\n      this._handleSnapping(fakeDragEvent);\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvRHJhdy9MLlBNLkRyYXcuTWFya2VyLmpzP2M3NjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERyYXcgZnJvbSAnLi9MLlBNLkRyYXcnO1xuRHJhdy5NYXJrZXIgPSBEcmF3LmV4dGVuZCh7XG4gIGluaXRpYWxpemU6IGZ1bmN0aW9uIGluaXRpYWxpemUobWFwKSB7XG4gICAgdGhpcy5fbWFwID0gbWFwO1xuICAgIHRoaXMuX3NoYXBlID0gJ01hcmtlcic7XG4gICAgdGhpcy50b29sYmFyQnV0dG9uTmFtZSA9ICdkcmF3TWFya2VyJztcbiAgfSxcbiAgZW5hYmxlOiBmdW5jdGlvbiBlbmFibGUob3B0aW9ucykge1xuICAgIC8vIFRPRE86IFRoaW5rIGFib3V0IGlmIHRoZXNlIG9wdGlvbnMgY291bGQgYmUgcGFzc2VkIGdsb2JhbGx5IGZvciBhbGxcbiAgICAvLyBpbnN0YW5jZXMgb2YgTC5QTS5EcmF3LiBTbyBhIGRldiBjb3VsZCBzZXQgZHJhd2luZyBzdHlsZSBvbmUgdGltZSBhcyBzb21lIGtpbmQgb2YgY29uZmlnXG4gICAgTC5VdGlsLnNldE9wdGlvbnModGhpcywgb3B0aW9ucyk7IC8vIGNoYW5nZSBlbmFibGVkIHN0YXRlXG5cbiAgICB0aGlzLl9lbmFibGVkID0gdHJ1ZTsgLy8gY3JlYXRlIGEgbWFya2VyIG9uIGNsaWNrIG9uIHRoZSBtYXBcblxuICAgIHRoaXMuX21hcC5vbignY2xpY2snLCB0aGlzLl9jcmVhdGVNYXJrZXIsIHRoaXMpOyAvLyB0b2dnbGUgdGhlIGRyYXcgYnV0dG9uIG9mIHRoZSBUb29sYmFyIGluIGNhc2UgZHJhd2luZyBtb2RlIGdvdCBlbmFibGVkIHdpdGhvdXQgdGhlIGJ1dHRvblxuXG5cbiAgICB0aGlzLl9tYXAucG0uVG9vbGJhci50b2dnbGVCdXR0b24odGhpcy50b29sYmFyQnV0dG9uTmFtZSwgdHJ1ZSk7IC8vIHRoaXMgaXMgdGhlIGhpbnRtYXJrZXIgb24gdGhlIG1vdXNlIGN1cnNvclxuXG5cbiAgICB0aGlzLl9oaW50TWFya2VyID0gTC5tYXJrZXIoWzAsIDBdLCB0aGlzLm9wdGlvbnMubWFya2VyU3R5bGUpO1xuICAgIHRoaXMuX2hpbnRNYXJrZXIuX3BtVGVtcExheWVyID0gdHJ1ZTtcblxuICAgIHRoaXMuX2hpbnRNYXJrZXIuYWRkVG8odGhpcy5fbWFwKTsgLy8gYWRkIHRvb2x0aXAgdG8gaGludG1hcmtlclxuXG5cbiAgICBpZiAodGhpcy5vcHRpb25zLnRvb2x0aXBzKSB7XG4gICAgICBjb25zb2xlLmxvZyh0aGlzLm9wdGlvbnMpO1xuXG4gICAgICB0aGlzLl9oaW50TWFya2VyLmJpbmRUb29sdGlwKHRoaXMub3B0aW9ucy50ZXh0SGludFBsYWNlTWFya2VyIHx8ICdDbGljayB0byBwbGFjZSBtYXJrZXInLCB7XG4gICAgICAgIHBlcm1hbmVudDogdHJ1ZSxcbiAgICAgICAgb2Zmc2V0OiBMLnBvaW50KDAsIDEwKSxcbiAgICAgICAgZGlyZWN0aW9uOiAnYm90dG9tJyxcbiAgICAgICAgb3BhY2l0eTogMC44XG4gICAgICB9KS5vcGVuVG9vbHRpcCgpO1xuICAgIH0gLy8gdGhpcyBpcyBqdXN0IHRvIGtlZXAgdGhlIHNuYXBwYWJsZSBtaXhpbiBoYXBweVxuXG5cbiAgICB0aGlzLl9sYXllciA9IHRoaXMuX2hpbnRNYXJrZXI7IC8vIHN5bmMgaGludCBtYXJrZXIgd2l0aCBtb3VzZSBjdXJzb3JcblxuICAgIHRoaXMuX21hcC5vbignbW91c2Vtb3ZlJywgdGhpcy5fc3luY0hpbnRNYXJrZXIsIHRoaXMpOyAvLyBmaXJlIGRyYXdzdGFydCBldmVudFxuXG5cbiAgICB0aGlzLl9tYXAuZmlyZSgncG06ZHJhd3N0YXJ0Jywge1xuICAgICAgc2hhcGU6IHRoaXMuX3NoYXBlLFxuICAgICAgd29ya2luZ0xheWVyOiB0aGlzLl9sYXllclxuICAgIH0pOyAvLyBlbmFibGUgZWRpdCBtb2RlIGZvciBleGlzdGluZyBtYXJrZXJzXG5cblxuICAgIHRoaXMuX21hcC5lYWNoTGF5ZXIoZnVuY3Rpb24gKGxheWVyKSB7XG4gICAgICBpZiAobGF5ZXIgaW5zdGFuY2VvZiBMLk1hcmtlciAmJiBsYXllci5wbSkge1xuICAgICAgICBsYXllci5wbS5lbmFibGUoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSxcbiAgZGlzYWJsZTogZnVuY3Rpb24gZGlzYWJsZSgpIHtcbiAgICAvLyBjYW5jZWwsIGlmIGRyYXdpbmcgbW9kZSBpc24ndCBldmVuIGVuYWJsZWRcbiAgICBpZiAoIXRoaXMuX2VuYWJsZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9IC8vIHVuZGJpbmQgY2xpY2sgZXZlbnQsIGRvbid0IGNyZWF0ZSBhIG1hcmtlciBvbiBjbGljayBhbnltb3JlXG5cblxuICAgIHRoaXMuX21hcC5vZmYoJ2NsaWNrJywgdGhpcy5fY3JlYXRlTWFya2VyLCB0aGlzKTsgLy8gcmVtb3ZlIGhpbnQgbWFya2VyXG5cblxuICAgIHRoaXMuX2hpbnRNYXJrZXIucmVtb3ZlKCk7IC8vIHJlbW92ZSBldmVudCBsaXN0ZW5lciB0byBzeW5jIGhpbnQgbWFya2VyXG5cblxuICAgIHRoaXMuX21hcC5vZmYoJ21vdXNlbW92ZScsIHRoaXMuX3N5bmNIaW50TWFya2VyLCB0aGlzKTsgLy8gZGlzYWJsZSBkcmFnZ2luZyBhbmQgcmVtb3ZpbmcgZm9yIGFsbCBtYXJrZXJzXG5cblxuICAgIHRoaXMuX21hcC5lYWNoTGF5ZXIoZnVuY3Rpb24gKGxheWVyKSB7XG4gICAgICBpZiAobGF5ZXIgaW5zdGFuY2VvZiBMLk1hcmtlciAmJiBsYXllci5wbSAmJiAhbGF5ZXIuX3BtVGVtcExheWVyKSB7XG4gICAgICAgIGxheWVyLnBtLmRpc2FibGUoKTtcbiAgICAgIH1cbiAgICB9KTsgLy8gZmlyZSBkcmF3ZW5kIGV2ZW50XG5cblxuICAgIHRoaXMuX21hcC5maXJlKCdwbTpkcmF3ZW5kJywge1xuICAgICAgc2hhcGU6IHRoaXMuX3NoYXBlXG4gICAgfSk7IC8vIHRvZ2dsZSB0aGUgZHJhdyBidXR0b24gb2YgdGhlIFRvb2xiYXIgaW4gY2FzZSBkcmF3aW5nIG1vZGUgZ290IGRpc2FibGVkIHdpdGhvdXQgdGhlIGJ1dHRvblxuXG5cbiAgICB0aGlzLl9tYXAucG0uVG9vbGJhci50b2dnbGVCdXR0b24odGhpcy50b29sYmFyQnV0dG9uTmFtZSwgZmFsc2UpOyAvLyBjaGFuZ2UgZW5hYmxlZCBzdGF0ZVxuXG5cbiAgICB0aGlzLl9lbmFibGVkID0gZmFsc2U7XG4gIH0sXG4gIGVuYWJsZWQ6IGZ1bmN0aW9uIGVuYWJsZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2VuYWJsZWQ7XG4gIH0sXG4gIHRvZ2dsZTogZnVuY3Rpb24gdG9nZ2xlKG9wdGlvbnMpIHtcbiAgICBpZiAodGhpcy5lbmFibGVkKCkpIHtcbiAgICAgIHRoaXMuZGlzYWJsZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmVuYWJsZShvcHRpb25zKTtcbiAgICB9XG4gIH0sXG4gIF9jcmVhdGVNYXJrZXI6IGZ1bmN0aW9uIF9jcmVhdGVNYXJrZXIoZSkge1xuICAgIGlmICghZS5sYXRsbmcpIHtcbiAgICAgIHJldHVybjtcbiAgICB9IC8vIGFzc2lnbiB0aGUgY29vcmRpbmF0ZSBvZiB0aGUgY2xpY2sgdG8gdGhlIGhpbnRNYXJrZXIsIHRoYXQncyBuZWNlc3NhcnkgZm9yXG4gICAgLy8gbW9iaWxlIHdoZXJlIHRoZSBtYXJrZXIgY2FuJ3QgZm9sbG93IGEgY3Vyc29yXG5cblxuICAgIGlmICghdGhpcy5faGludE1hcmtlci5fc25hcHBlZCkge1xuICAgICAgdGhpcy5faGludE1hcmtlci5zZXRMYXRMbmcoZS5sYXRsbmcpO1xuICAgIH0gLy8gZ2V0IGNvb3JkaW5hdGUgZm9yIG5ldyB2ZXJ0ZXggYnkgaGludE1hcmtlciAoY3Vyc29yIG1hcmtlcilcblxuXG4gICAgdmFyIGxhdGxuZyA9IHRoaXMuX2hpbnRNYXJrZXIuZ2V0TGF0TG5nKCk7IC8vIGNyZWF0ZSBtYXJrZXJcblxuXG4gICAgdmFyIG1hcmtlciA9IG5ldyBMLk1hcmtlcihsYXRsbmcsIHRoaXMub3B0aW9ucy5tYXJrZXJTdHlsZSk7IC8vIGFkZCBtYXJrZXIgdG8gdGhlIG1hcFxuXG4gICAgbWFya2VyLmFkZFRvKHRoaXMuX21hcCk7IC8vIGVuYWJsZSBlZGl0aW5nIGZvciB0aGUgbWFya2VyXG5cbiAgICBtYXJrZXIucG0uZW5hYmxlKCk7IC8vIGZpcmUgdGhlIHBtOmNyZWF0ZSBldmVudCBhbmQgcGFzcyBzaGFwZSBhbmQgbWFya2VyXG5cbiAgICB0aGlzLl9tYXAuZmlyZSgncG06Y3JlYXRlJywge1xuICAgICAgc2hhcGU6IHRoaXMuX3NoYXBlLFxuICAgICAgbWFya2VyOiBtYXJrZXIsXG4gICAgICAvLyBERVBSRUNBVEVEXG4gICAgICBsYXllcjogbWFya2VyXG4gICAgfSk7XG5cbiAgICB0aGlzLl9jbGVhbnVwU25hcHBpbmcoKTtcbiAgfSxcbiAgX3N5bmNIaW50TWFya2VyOiBmdW5jdGlvbiBfc3luY0hpbnRNYXJrZXIoZSkge1xuICAgIC8vIG1vdmUgdGhlIGN1cnNvciBtYXJrZXJcbiAgICB0aGlzLl9oaW50TWFya2VyLnNldExhdExuZyhlLmxhdGxuZyk7IC8vIGlmIHNuYXBwaW5nIGlzIGVuYWJsZWQsIGRvIGl0XG5cblxuICAgIGlmICh0aGlzLm9wdGlvbnMuc25hcHBhYmxlKSB7XG4gICAgICB2YXIgZmFrZURyYWdFdmVudCA9IGU7XG4gICAgICBmYWtlRHJhZ0V2ZW50LnRhcmdldCA9IHRoaXMuX2hpbnRNYXJrZXI7XG5cbiAgICAgIHRoaXMuX2hhbmRsZVNuYXBwaW5nKGZha2VEcmFnRXZlbnQpO1xuICAgIH1cbiAgfVxufSk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvRHJhdy9MLlBNLkRyYXcuTWFya2VyLmpzXG4vLyBtb2R1bGUgaWQgPSAyN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///27\n");

/***/ }),
/* 28 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_kinks__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_kinks___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__turf_kinks__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__L_PM_Draw__ = __webpack_require__(0);\n\n\n__WEBPACK_IMPORTED_MODULE_1__L_PM_Draw__[\"a\" /* default */].Line = __WEBPACK_IMPORTED_MODULE_1__L_PM_Draw__[\"a\" /* default */].extend({\n  initialize: function initialize(map) {\n    this._map = map;\n    this._shape = 'Line';\n    this.toolbarButtonName = 'drawPolyline';\n    this._doesSelfIntersect = false;\n  },\n  enable: function enable(options) {\n    L.Util.setOptions(this, options); // fallback option for finishOnDoubleClick\n    // TODO: remove in a later release\n\n    if (this.options.finishOnDoubleClick && !this.options.finishOn) {\n      this.options.finishOn = 'dblclick';\n    } // enable draw mode\n\n\n    this._enabled = true; // create a new layergroup\n\n    this._layerGroup = new L.LayerGroup();\n    this._layerGroup._pmTempLayer = true;\n\n    this._layerGroup.addTo(this._map); // this is the polyLine that'll make up the polygon\n\n\n    this._layer = L.polyline([], this.options.templineStyle);\n    this._layer._pmTempLayer = true;\n\n    this._layerGroup.addLayer(this._layer); // this is the hintline from the mouse cursor to the last marker\n\n\n    this._hintline = L.polyline([], this.options.hintlineStyle);\n    this._hintline._pmTempLayer = true;\n\n    this._layerGroup.addLayer(this._hintline); // this is the hintmarker on the mouse cursor\n\n\n    this._hintMarker = L.marker(this._map.getCenter(), {\n      icon: L.divIcon({\n        className: 'marker-icon cursor-marker'\n      })\n    });\n    this._hintMarker._pmTempLayer = true;\n\n    this._layerGroup.addLayer(this._hintMarker); // show the hintmarker if the option is set\n\n\n    if (this.options.cursorMarker) {\n      L.DomUtil.addClass(this._hintMarker._icon, 'visible');\n    } // add tooltip to hintmarker\n\n\n    if (this.options.tooltips) {\n      this._hintMarker.bindTooltip(this.options.textHintFirstVertex || 'Click to place first vertex', {\n        permanent: true,\n        offset: L.point(0, 10),\n        direction: 'bottom',\n        opacity: 0.8\n      }).openTooltip();\n    } // change map cursor\n\n\n    this._map._container.style.cursor = 'crosshair'; // create a polygon-point on click\n\n    this._map.on('click', this._createVertex, this); // finish on layer event\n    // #http://leafletjs.com/reference-1.2.0.html#interactive-layer-click\n\n\n    if (this.options.finishOn) {\n      this._map.on(this.options.finishOn, this._finishShape, this);\n    } // prevent zoom on double click if finishOn is === dblclick\n\n\n    if (this.options.finishOn === 'dblclick') {\n      this.tempMapDoubleClickZoomState = this._map.doubleClickZoom._enabled;\n\n      if (this.tempMapDoubleClickZoomState) {\n        this._map.doubleClickZoom.disable();\n      }\n    } // sync hint marker with mouse cursor\n\n\n    this._map.on('mousemove', this._syncHintMarker, this); // sync the hintline with hint marker\n\n\n    this._hintMarker.on('move', this._syncHintLine, this); // fire drawstart event\n\n\n    this._map.fire('pm:drawstart', {\n      shape: this._shape,\n      workingLayer: this._layer\n    }); // toggle the draw button of the Toolbar in case drawing mode got enabled without the button\n\n\n    this._map.pm.Toolbar.toggleButton(this.toolbarButtonName, true); // an array used in the snapping mixin.\n    // TODO: think about moving this somewhere else?\n\n\n    this._otherSnapLayers = [];\n  },\n  disable: function disable() {\n    // disable draw mode\n    // cancel, if drawing mode isn't even enabled\n    if (!this._enabled) {\n      return;\n    }\n\n    this._enabled = false; // reset cursor\n\n    this._map._container.style.cursor = ''; // unbind listeners\n\n    this._map.off('click', this._createVertex, this);\n\n    this._map.off('mousemove', this._syncHintMarker, this);\n\n    if (this.options.finishOn) {\n      this._map.off(this.options.finishOn, this._finishShape, this);\n    }\n\n    if (this.tempMapDoubleClickZoomState) {\n      this._map.doubleClickZoom.enable();\n    } // remove layer\n\n\n    this._map.removeLayer(this._layerGroup); // fire drawend event\n\n\n    this._map.fire('pm:drawend', {\n      shape: this._shape\n    }); // toggle the draw button of the Toolbar in case drawing mode got disabled without the button\n\n\n    this._map.pm.Toolbar.toggleButton(this.toolbarButtonName, false); // cleanup snapping\n\n\n    if (this.options.snappable) {\n      this._cleanupSnapping();\n    }\n  },\n  enabled: function enabled() {\n    return this._enabled;\n  },\n  toggle: function toggle(options) {\n    if (this.enabled()) {\n      this.disable();\n    } else {\n      this.enable(options);\n    }\n  },\n  hasSelfIntersection: function hasSelfIntersection() {\n    // check for self intersection of the layer and return true/false\n    var selfIntersection = __WEBPACK_IMPORTED_MODULE_0__turf_kinks___default()(this._layer.toGeoJSON(15));\n    return selfIntersection.features.length > 0;\n  },\n  _syncHintLine: function _syncHintLine() {\n    var polyPoints = this._layer.getLatLngs();\n\n    if (polyPoints.length > 0) {\n      var lastPolygonPoint = polyPoints[polyPoints.length - 1]; // set coords for hintline from marker to last vertex of drawin polyline\n\n      this._hintline.setLatLngs([lastPolygonPoint, this._hintMarker.getLatLng()]);\n    }\n  },\n  _syncHintMarker: function _syncHintMarker(e) {\n    // move the cursor marker\n    this._hintMarker.setLatLng(e.latlng); // if snapping is enabled, do it\n\n\n    if (this.options.snappable) {\n      var fakeDragEvent = e;\n      fakeDragEvent.target = this._hintMarker;\n\n      this._handleSnapping(fakeDragEvent);\n    } // if self-intersection is forbidden, handle it\n\n\n    if (!this.options.allowSelfIntersection) {\n      this._handleSelfIntersection(true, e.latlng);\n    }\n  },\n  _handleSelfIntersection: function _handleSelfIntersection(addVertex, latlng) {\n    // ok we need to check the self intersection here\n    // problem: during draw, the marker on the cursor is not yet part\n    // of the layer. So we need to clone the layer, add the\n    // potential new vertex (cursor markers latlngs) and check the self\n    // intersection on the clone. Phew... - let's do it 💪\n    // clone layer (polyline is enough, even when it's a polygon)\n    var clone = L.polyline(this._layer.getLatLngs());\n\n    if (addVertex) {\n      // get vertex from param or from hintmarker\n      if (!latlng) {\n        latlng = this._hintMarker.getLatLng();\n      } // add the vertex\n\n\n      clone.addLatLng(latlng);\n    } // check the self intersection\n\n\n    var selfIntersection = __WEBPACK_IMPORTED_MODULE_0__turf_kinks___default()(clone.toGeoJSON(15));\n    this._doesSelfIntersect = selfIntersection.features.length > 0; // change the style based on self intersection\n\n    if (this._doesSelfIntersect) {\n      this._hintline.setStyle({\n        color: 'red'\n      });\n    } else {\n      this._hintline.setStyle(this.options.hintlineStyle);\n    }\n  },\n  _removeLastVertex: function _removeLastVertex() {\n    // remove last coords\n    var coords = this._layer.getLatLngs();\n\n    var removedCoord = coords.pop(); // if all coords are gone, cancel drawing\n\n    if (coords.length < 1) {\n      this.disable();\n      return;\n    } // find corresponding marker\n\n\n    var marker = this._layerGroup.getLayers().filter(function (l) {\n      return l instanceof L.Marker;\n    }).filter(function (l) {\n      return !L.DomUtil.hasClass(l._icon, 'cursor-marker');\n    }).find(function (l) {\n      return l.getLatLng() === removedCoord;\n    }); // remove that marker\n\n\n    this._layerGroup.removeLayer(marker); // update layer with new coords\n\n\n    this._layer.setLatLngs(coords); // sync the hintline again\n\n\n    this._syncHintLine();\n  },\n  _createVertex: function _createVertex(e) {\n    // don't create a vertex if we have a selfIntersection and it is not allowed\n    if (!this.options.allowSelfIntersection) {\n      this._handleSelfIntersection(true, e.latlng);\n\n      if (this._doesSelfIntersect) {\n        return;\n      }\n    } // assign the coordinate of the click to the hintMarker, that's necessary for\n    // mobile where the marker can't follow a cursor\n\n\n    if (!this._hintMarker._snapped) {\n      this._hintMarker.setLatLng(e.latlng);\n    } // get coordinate for new vertex by hintMarker (cursor marker)\n\n\n    var latlng = this._hintMarker.getLatLng(); // check if the first and this vertex have the same latlng\n\n\n    if (latlng.equals(this._layer.getLatLngs()[0])) {\n      // yes? finish the polygon\n      this._finishShape(e); // \"why?\", you ask? Because this happens when we snap the last vertex to the first one\n      // and then click without hitting the last marker. Click happens on the map\n      // in 99% of cases it's because the user wants to finish the polygon. So...\n\n\n      return;\n    } // is this the first point?\n\n\n    var first = this._layer.getLatLngs().length === 0;\n\n    this._layer.addLatLng(latlng);\n\n    var newMarker = this._createMarker(latlng, first);\n\n    this._hintline.setLatLngs([latlng, latlng]);\n\n    this._layer.fire('pm:vertexadded', {\n      shape: this._shape,\n      workingLayer: this._layer,\n      marker: newMarker,\n      latlng: latlng\n    });\n  },\n  _finishShape: function _finishShape() {\n    // if self intersection is not allowed, do not finish the shape!\n    if (!this.options.allowSelfIntersection) {\n      this._handleSelfIntersection(false);\n\n      if (this._doesSelfIntersect) {\n        return;\n      }\n    } // get coordinates\n\n\n    var coords = this._layer.getLatLngs(); // if there is only one coords, don't finish the shape!\n\n\n    if (coords.length <= 1) {\n      return;\n    } // create the leaflet shape and add it to the map\n\n\n    var polylineLayer = L.polyline(coords, this.options.pathOptions).addTo(this._map); // disable drawing\n\n    this.disable(); // fire the pm:create event and pass shape and layer\n\n    this._map.fire('pm:create', {\n      shape: this._shape,\n      layer: polylineLayer\n    });\n\n    if (this.options.snappable) {\n      this._cleanupSnapping();\n    }\n  },\n  _createMarker: function _createMarker(latlng, first) {\n    // create the new marker\n    var marker = new L.Marker(latlng, {\n      draggable: false,\n      icon: L.divIcon({\n        className: 'marker-icon'\n      })\n    });\n    marker._pmTempLayer = true; // add it to the map\n\n    this._layerGroup.addLayer(marker); // a click on any marker finishes this shape\n\n\n    marker.on('click', this._finishShape, this); // handle tooltip text\n\n    if (first) {\n      this._hintMarker.setTooltipContent(this.options.textHintContinueDrawing || 'Click to continue drawing');\n    }\n\n    var second = this._layer.getLatLngs().length === 2;\n\n    if (second) {\n      this._hintMarker.setTooltipContent(this.options.textHintExistingMarkerToFinish || 'Click any existing marker to finish');\n    }\n\n    return marker;\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///28\n");

/***/ }),
/* 29 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__L_PM_Draw__ = __webpack_require__(0);\n\n__WEBPACK_IMPORTED_MODULE_0__L_PM_Draw__[\"a\" /* default */].Poly = __WEBPACK_IMPORTED_MODULE_0__L_PM_Draw__[\"a\" /* default */].Line.extend({\n  initialize: function initialize(map) {\n    this._map = map;\n    this._shape = 'Poly';\n    this.toolbarButtonName = 'drawPolygon';\n  },\n  _finishShape: function _finishShape(e) {\n    // if self intersection is not allowed, do not finish the shape!\n    if (!this.options.allowSelfIntersection) {\n      this._handleSelfIntersection(false);\n\n      if (this._doesSelfIntersect) {\n        return;\n      }\n    } // get coordinates\n\n\n    var coords = this._layer.getLatLngs(); // if there is only one coords, don't finish the shape!\n\n\n    if (coords.length <= 1) {\n      return;\n    } // create the leaflet shape and add it to the map\n\n\n    if (e && e.type === 'dblclick') {\n      // Leaflet creates an extra node with double click\n      coords.splice(coords.length - 1, 1);\n    }\n\n    var polygonLayer = L.polygon(coords, this.options.pathOptions).addTo(this._map); // disable drawing\n\n    this.disable(); // fire the pm:create event and pass shape and layer\n\n    this._map.fire('pm:create', {\n      shape: this._shape,\n      layer: polygonLayer\n    }); // clean up snapping states\n\n\n    this._cleanupSnapping(); // remove the first vertex from \"other snapping layers\"\n\n\n    this._otherSnapLayers.splice(this._tempSnapLayerIndex, 1);\n\n    delete this._tempSnapLayerIndex;\n  },\n  _createMarker: function _createMarker(latlng, first) {\n    // create the new marker\n    var marker = new L.Marker(latlng, {\n      draggable: false,\n      icon: L.divIcon({\n        className: 'marker-icon'\n      })\n    }); // mark this marker as temporary\n\n    marker._pmTempLayer = true; // add it to the map\n\n    this._layerGroup.addLayer(marker); // if the first marker gets clicked again, finish this shape\n\n\n    if (first) {\n      marker.on('click', this._finishShape, this); // add the first vertex to \"other snapping layers\" so the polygon is easier to finish\n\n      this._tempSnapLayerIndex = this._otherSnapLayers.push(marker) - 1;\n\n      if (this.options.snappable) {\n        this._cleanupSnapping();\n      }\n    } // handle tooltip text\n\n\n    if (first) {\n      this._hintMarker.setTooltipContent(this.options.textHintContinueDrawing || 'Click to continue drawing');\n    }\n\n    var third = this._layer.getLatLngs().length === 3;\n\n    if (third) {\n      this._hintMarker.setTooltipContent(this.options.textHintFirstMarkerToFinish || 'Click first marker to finish');\n    }\n\n    return marker;\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvRHJhdy9MLlBNLkRyYXcuUG9seS5qcz8zMDYyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBEcmF3IGZyb20gJy4vTC5QTS5EcmF3JztcbkRyYXcuUG9seSA9IERyYXcuTGluZS5leHRlbmQoe1xuICBpbml0aWFsaXplOiBmdW5jdGlvbiBpbml0aWFsaXplKG1hcCkge1xuICAgIHRoaXMuX21hcCA9IG1hcDtcbiAgICB0aGlzLl9zaGFwZSA9ICdQb2x5JztcbiAgICB0aGlzLnRvb2xiYXJCdXR0b25OYW1lID0gJ2RyYXdQb2x5Z29uJztcbiAgfSxcbiAgX2ZpbmlzaFNoYXBlOiBmdW5jdGlvbiBfZmluaXNoU2hhcGUoZSkge1xuICAgIC8vIGlmIHNlbGYgaW50ZXJzZWN0aW9uIGlzIG5vdCBhbGxvd2VkLCBkbyBub3QgZmluaXNoIHRoZSBzaGFwZSFcbiAgICBpZiAoIXRoaXMub3B0aW9ucy5hbGxvd1NlbGZJbnRlcnNlY3Rpb24pIHtcbiAgICAgIHRoaXMuX2hhbmRsZVNlbGZJbnRlcnNlY3Rpb24oZmFsc2UpO1xuXG4gICAgICBpZiAodGhpcy5fZG9lc1NlbGZJbnRlcnNlY3QpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgIH0gLy8gZ2V0IGNvb3JkaW5hdGVzXG5cblxuICAgIHZhciBjb29yZHMgPSB0aGlzLl9sYXllci5nZXRMYXRMbmdzKCk7IC8vIGlmIHRoZXJlIGlzIG9ubHkgb25lIGNvb3JkcywgZG9uJ3QgZmluaXNoIHRoZSBzaGFwZSFcblxuXG4gICAgaWYgKGNvb3Jkcy5sZW5ndGggPD0gMSkge1xuICAgICAgcmV0dXJuO1xuICAgIH0gLy8gY3JlYXRlIHRoZSBsZWFmbGV0IHNoYXBlIGFuZCBhZGQgaXQgdG8gdGhlIG1hcFxuXG5cbiAgICBpZiAoZSAmJiBlLnR5cGUgPT09ICdkYmxjbGljaycpIHtcbiAgICAgIC8vIExlYWZsZXQgY3JlYXRlcyBhbiBleHRyYSBub2RlIHdpdGggZG91YmxlIGNsaWNrXG4gICAgICBjb29yZHMuc3BsaWNlKGNvb3Jkcy5sZW5ndGggLSAxLCAxKTtcbiAgICB9XG5cbiAgICB2YXIgcG9seWdvbkxheWVyID0gTC5wb2x5Z29uKGNvb3JkcywgdGhpcy5vcHRpb25zLnBhdGhPcHRpb25zKS5hZGRUbyh0aGlzLl9tYXApOyAvLyBkaXNhYmxlIGRyYXdpbmdcblxuICAgIHRoaXMuZGlzYWJsZSgpOyAvLyBmaXJlIHRoZSBwbTpjcmVhdGUgZXZlbnQgYW5kIHBhc3Mgc2hhcGUgYW5kIGxheWVyXG5cbiAgICB0aGlzLl9tYXAuZmlyZSgncG06Y3JlYXRlJywge1xuICAgICAgc2hhcGU6IHRoaXMuX3NoYXBlLFxuICAgICAgbGF5ZXI6IHBvbHlnb25MYXllclxuICAgIH0pOyAvLyBjbGVhbiB1cCBzbmFwcGluZyBzdGF0ZXNcblxuXG4gICAgdGhpcy5fY2xlYW51cFNuYXBwaW5nKCk7IC8vIHJlbW92ZSB0aGUgZmlyc3QgdmVydGV4IGZyb20gXCJvdGhlciBzbmFwcGluZyBsYXllcnNcIlxuXG5cbiAgICB0aGlzLl9vdGhlclNuYXBMYXllcnMuc3BsaWNlKHRoaXMuX3RlbXBTbmFwTGF5ZXJJbmRleCwgMSk7XG5cbiAgICBkZWxldGUgdGhpcy5fdGVtcFNuYXBMYXllckluZGV4O1xuICB9LFxuICBfY3JlYXRlTWFya2VyOiBmdW5jdGlvbiBfY3JlYXRlTWFya2VyKGxhdGxuZywgZmlyc3QpIHtcbiAgICAvLyBjcmVhdGUgdGhlIG5ldyBtYXJrZXJcbiAgICB2YXIgbWFya2VyID0gbmV3IEwuTWFya2VyKGxhdGxuZywge1xuICAgICAgZHJhZ2dhYmxlOiBmYWxzZSxcbiAgICAgIGljb246IEwuZGl2SWNvbih7XG4gICAgICAgIGNsYXNzTmFtZTogJ21hcmtlci1pY29uJ1xuICAgICAgfSlcbiAgICB9KTsgLy8gbWFyayB0aGlzIG1hcmtlciBhcyB0ZW1wb3JhcnlcblxuICAgIG1hcmtlci5fcG1UZW1wTGF5ZXIgPSB0cnVlOyAvLyBhZGQgaXQgdG8gdGhlIG1hcFxuXG4gICAgdGhpcy5fbGF5ZXJHcm91cC5hZGRMYXllcihtYXJrZXIpOyAvLyBpZiB0aGUgZmlyc3QgbWFya2VyIGdldHMgY2xpY2tlZCBhZ2FpbiwgZmluaXNoIHRoaXMgc2hhcGVcblxuXG4gICAgaWYgKGZpcnN0KSB7XG4gICAgICBtYXJrZXIub24oJ2NsaWNrJywgdGhpcy5fZmluaXNoU2hhcGUsIHRoaXMpOyAvLyBhZGQgdGhlIGZpcnN0IHZlcnRleCB0byBcIm90aGVyIHNuYXBwaW5nIGxheWVyc1wiIHNvIHRoZSBwb2x5Z29uIGlzIGVhc2llciB0byBmaW5pc2hcblxuICAgICAgdGhpcy5fdGVtcFNuYXBMYXllckluZGV4ID0gdGhpcy5fb3RoZXJTbmFwTGF5ZXJzLnB1c2gobWFya2VyKSAtIDE7XG5cbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuc25hcHBhYmxlKSB7XG4gICAgICAgIHRoaXMuX2NsZWFudXBTbmFwcGluZygpO1xuICAgICAgfVxuICAgIH0gLy8gaGFuZGxlIHRvb2x0aXAgdGV4dFxuXG5cbiAgICBpZiAoZmlyc3QpIHtcbiAgICAgIHRoaXMuX2hpbnRNYXJrZXIuc2V0VG9vbHRpcENvbnRlbnQodGhpcy5vcHRpb25zLnRleHRIaW50Q29udGludWVEcmF3aW5nIHx8ICdDbGljayB0byBjb250aW51ZSBkcmF3aW5nJyk7XG4gICAgfVxuXG4gICAgdmFyIHRoaXJkID0gdGhpcy5fbGF5ZXIuZ2V0TGF0TG5ncygpLmxlbmd0aCA9PT0gMztcblxuICAgIGlmICh0aGlyZCkge1xuICAgICAgdGhpcy5faGludE1hcmtlci5zZXRUb29sdGlwQ29udGVudCh0aGlzLm9wdGlvbnMudGV4dEhpbnRGaXJzdE1hcmtlclRvRmluaXNoIHx8ICdDbGljayBmaXJzdCBtYXJrZXIgdG8gZmluaXNoJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1hcmtlcjtcbiAgfVxufSk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvRHJhdy9MLlBNLkRyYXcuUG9seS5qc1xuLy8gbW9kdWxlIGlkID0gMjlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///29\n");

/***/ }),
/* 30 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__L_PM_Draw__ = __webpack_require__(0);\n\n__WEBPACK_IMPORTED_MODULE_0__L_PM_Draw__[\"a\" /* default */].Rectangle = __WEBPACK_IMPORTED_MODULE_0__L_PM_Draw__[\"a\" /* default */].extend({\n  initialize: function initialize(map) {\n    this._map = map;\n    this._shape = 'Rectangle';\n    this.toolbarButtonName = 'drawRectangle';\n  },\n  enable: function enable(options) {\n    // TODO: Think about if these options could be passed globally for all\n    // instances of L.PM.Draw. So a dev could set drawing style one time as some kind of config\n    L.Util.setOptions(this, options);\n    console.log(this.options); // enable draw mode\n\n    this._enabled = true; // create a new layergroup\n\n    this._layerGroup = new L.LayerGroup();\n    this._layerGroup._pmTempLayer = true;\n\n    this._layerGroup.addTo(this._map); // the rectangle we want to draw\n\n\n    this._layer = L.rectangle([[0, 0], [0, 0]], this.options.pathOptions);\n    this._layer._pmTempLayer = true; // this is the marker at the origin of the rectangle\n    // this needs to be present, for tracking purposes, but we'll make it invisible if a user doesn't want to see it!\n\n    this._startMarker = L.marker([0, 0], {\n      icon: L.divIcon({\n        className: 'marker-icon rect-start-marker'\n      }),\n      draggable: true,\n      zIndexOffset: 100,\n      opacity: this.options.cursorMarker ? 1 : 0\n    });\n    this._startMarker._pmTempLayer = true;\n\n    this._layerGroup.addLayer(this._startMarker); // this is the hintmarker on the mouse cursor\n\n\n    this._hintMarker = L.marker([0, 0], {\n      icon: L.divIcon({\n        className: 'marker-icon cursor-marker'\n      })\n    });\n    this._hintMarker._pmTempLayer = true;\n\n    this._layerGroup.addLayer(this._hintMarker); // add tooltip to hintmarker\n\n\n    if (this.options.tooltips) {\n      this._hintMarker.bindTooltip(this.options.textHintFirstVertex || 'Click to place first vertex', {\n        permanent: true,\n        offset: L.point(0, 10),\n        direction: 'bottom',\n        opacity: 0.8\n      }).openTooltip();\n    } // show the hintmarker if the option is set\n\n\n    if (this.options.cursorMarker) {\n      L.DomUtil.addClass(this._hintMarker._icon, 'visible'); // Add two more matching style markers, if cursor marker is rendered\n\n      this._styleMarkers = [];\n\n      for (var i = 0; i < 2; i += 1) {\n        var styleMarker = L.marker([0, 0], {\n          icon: L.divIcon({\n            className: 'marker-icon rect-style-marker'\n          }),\n          draggable: true,\n          zIndexOffset: 100\n        });\n        styleMarker._pmTempLayer = true;\n\n        this._layerGroup.addLayer(styleMarker);\n\n        this._styleMarkers.push(styleMarker);\n      }\n    } // change map cursor\n\n\n    this._map._container.style.cursor = 'crosshair'; // create a polygon-point on click\n\n    this._map.on('click', this._placeStartingMarkers, this); // sync hint marker with mouse cursor\n\n\n    this._map.on('mousemove', this._syncHintMarker, this); // fire drawstart event\n\n\n    this._map.fire('pm:drawstart', {\n      shape: this._shape,\n      workingLayer: this._layer\n    }); // toggle the draw button of the Toolbar in case drawing mode got enabled without the button\n\n\n    this._map.pm.Toolbar.toggleButton(this.toolbarButtonName, true); // an array used in the snapping mixin.\n    // TODO: think about moving this somewhere else?\n\n\n    this._otherSnapLayers = [];\n  },\n  disable: function disable() {\n    // disable drawing mode\n    // cancel, if drawing mode isn't event enabled\n    if (!this._enabled) {\n      return;\n    }\n\n    this._enabled = false; // reset cursor\n\n    this._map._container.style.cursor = ''; // unbind listeners\n\n    this._map.off('click', this._finishShape, this);\n\n    this._map.off('click', this._placeStartingMarkers, this);\n\n    this._map.off('mousemove', this._syncHintMarker, this); // remove helping layers\n\n\n    this._map.removeLayer(this._layerGroup); // fire drawend event\n\n\n    this._map.fire('pm:drawend', {\n      shape: this._shape\n    }); // toggle the draw button of the Toolbar in case drawing mode got disabled without the button\n\n\n    this._map.pm.Toolbar.toggleButton(this.toolbarButtonName, false); // cleanup snapping\n\n\n    if (this.options.snappable) {\n      this._cleanupSnapping();\n    }\n  },\n  enabled: function enabled() {\n    return this._enabled;\n  },\n  toggle: function toggle(options) {\n    if (this.enabled()) {\n      this.disable();\n    } else {\n      this.enable(options);\n    }\n  },\n  _placeStartingMarkers: function _placeStartingMarkers(e) {\n    // assign the coordinate of the click to the hintMarker, that's necessary for\n    // mobile where the marker can't follow a cursor\n    if (!this._hintMarker._snapped) {\n      this._hintMarker.setLatLng(e.latlng);\n    } // get coordinate for new vertex by hintMarker (cursor marker)\n\n\n    var latlng = this._hintMarker.getLatLng(); // show and place start marker\n\n\n    L.DomUtil.addClass(this._startMarker._icon, 'visible');\n\n    this._startMarker.setLatLng(latlng); // if we have the other two visibilty markers, show and place them now\n\n\n    if (this.options.cursorMarker && this._styleMarkers) {\n      this._styleMarkers.forEach(function (styleMarker) {\n        L.DomUtil.addClass(styleMarker._icon, 'visible');\n        styleMarker.setLatLng(latlng);\n      });\n    }\n\n    this._map.off('click', this._placeStartingMarkers, this);\n\n    this._map.on('click', this._finishShape, this); // change tooltip text\n\n\n    this._hintMarker.setTooltipContent(this.options.textHintFinish || 'Click to finish');\n\n    this._setRectangleOrigin();\n  },\n  _setRectangleOrigin: function _setRectangleOrigin() {\n    var latlng = this._startMarker.getLatLng();\n\n    if (latlng) {\n      // show it first\n      this._layerGroup.addLayer(this._layer);\n\n      this._layer.setLatLngs([latlng, latlng]);\n\n      this._hintMarker.on('move', this._syncRectangleSize, this);\n    }\n  },\n  _syncHintMarker: function _syncHintMarker(e) {\n    // move the cursor marker\n    this._hintMarker.setLatLng(e.latlng); // if snapping is enabled, do it\n\n\n    if (this.options.snappable) {\n      var fakeDragEvent = e;\n      fakeDragEvent.target = this._hintMarker;\n\n      this._handleSnapping(fakeDragEvent);\n    }\n  },\n  _syncRectangleSize: function _syncRectangleSize() {\n    var _this = this;\n\n    // Create a box using corners A & B (A = Starting Position, B = Current Mouse Position)\n    var A = this._startMarker.getLatLng();\n\n    var B = this._hintMarker.getLatLng();\n\n    this._layer.setBounds([A, B]); // Add matching style markers, if cursor marker is shown\n\n\n    if (this.options.cursorMarker && this._styleMarkers) {\n      var corners = this._findCorners();\n\n      var unmarkedCorners = []; // Find two corners not currently occupied by starting marker and hint marker\n\n      corners.forEach(function (corner) {\n        if (!corner.equals(_this._startMarker.getLatLng()) && !corner.equals(_this._hintMarker.getLatLng())) {\n          unmarkedCorners.push(corner);\n        }\n      }); // Reposition style markers\n\n      unmarkedCorners.forEach(function (unmarkedCorner, index) {\n        _this._styleMarkers[index].setLatLng(unmarkedCorner);\n      });\n    }\n  },\n  _finishShape: function _finishShape(e) {\n    // create the final rectangle layer, based on opposite corners A & B\n    var A = this._startMarker.getLatLng();\n\n    var B = e.latlng;\n    var rectangleLayer = L.rectangle([A, B], this.options.pathOptions).addTo(this._map); // disable drawing\n\n    this.disable(); // fire the pm:create event and pass shape and layer\n\n    this._map.fire('pm:create', {\n      shape: this._shape,\n      layer: rectangleLayer\n    });\n  },\n  _findCorners: function _findCorners() {\n    var corners = this._layer.getBounds();\n\n    var northwest = corners.getNorthWest();\n    var northeast = corners.getNorthEast();\n    var southeast = corners.getSouthEast();\n    var southwest = corners.getSouthWest();\n    return [northwest, northeast, southeast, southwest];\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///30\n");

/***/ }),
/* 31 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__L_PM_Draw__ = __webpack_require__(0);\n\n__WEBPACK_IMPORTED_MODULE_0__L_PM_Draw__[\"a\" /* default */].Circle = __WEBPACK_IMPORTED_MODULE_0__L_PM_Draw__[\"a\" /* default */].extend({\n  initialize: function initialize(map) {\n    this._map = map;\n    this._shape = 'Circle';\n    this.toolbarButtonName = 'drawCircle';\n  },\n  enable: function enable(options) {\n    // TODO: Think about if these options could be passed globally for all\n    // instances of L.PM.Draw. So a dev could set drawing style one time as some kind of config\n    L.Util.setOptions(this, options);\n    this.options.radius = 0; // enable draw mode\n\n    this._enabled = true; // create a new layergroup\n\n    this._layerGroup = new L.LayerGroup();\n    this._layerGroup._pmTempLayer = true;\n\n    this._layerGroup.addTo(this._map); // this is the circle we want to draw\n\n\n    this._layer = L.circle([0, 0], this.options.templineStyle);\n    this._layer._pmTempLayer = true;\n\n    this._layerGroup.addLayer(this._layer); // this is the marker in the center of the circle\n\n\n    this._centerMarker = L.marker([0, 0], {\n      icon: L.divIcon({\n        className: 'marker-icon'\n      }),\n      draggable: false,\n      zIndexOffset: 100\n    });\n    this._centerMarker._pmTempLayer = true;\n\n    this._layerGroup.addLayer(this._centerMarker); // this is the hintmarker on the mouse cursor\n\n\n    this._hintMarker = L.marker([0, 0], {\n      icon: L.divIcon({\n        className: 'marker-icon cursor-marker'\n      })\n    });\n    this._hintMarker._pmTempLayer = true;\n\n    this._layerGroup.addLayer(this._hintMarker); // show the hintmarker if the option is set\n\n\n    if (this.options.cursorMarker) {\n      L.DomUtil.addClass(this._hintMarker._icon, 'visible');\n    } // add tooltip to hintmarker\n\n\n    if (this.options.tooltips) {\n      this._hintMarker.bindTooltip(this.options.textHintCircleCenter || 'Click to place circle center', {\n        permanent: true,\n        offset: L.point(0, 10),\n        direction: 'bottom',\n        opacity: 0.8\n      }).openTooltip();\n    } // this is the hintline from the hint marker to the center marker\n\n\n    this._hintline = L.polyline([], this.options.hintlineStyle);\n    this._hintline._pmTempLayer = true;\n\n    this._layerGroup.addLayer(this._hintline); // change map cursor\n\n\n    this._map._container.style.cursor = 'crosshair'; // create a polygon-point on click\n\n    this._map.on('click', this._placeCenterMarker, this); // sync hint marker with mouse cursor\n\n\n    this._map.on('mousemove', this._syncHintMarker, this); // fire drawstart event\n\n\n    this._map.fire('pm:drawstart', {\n      shape: this._shape,\n      workingLayer: this._layer\n    }); // toggle the draw button of the Toolbar in case drawing mode got enabled without the button\n\n\n    this._map.pm.Toolbar.toggleButton(this.toolbarButtonName, true); // an array used in the snapping mixin.\n    // TODO: think about moving this somewhere else?\n\n\n    this._otherSnapLayers = [];\n  },\n  disable: function disable() {\n    // disable drawing mode\n    // cancel, if drawing mode isn't event enabled\n    if (!this._enabled) {\n      return;\n    }\n\n    this._enabled = false; // reset cursor\n\n    this._map._container.style.cursor = ''; // unbind listeners\n\n    this._map.off('click', this._finishShape, this);\n\n    this._map.off('click', this._placeCenterMarker, this);\n\n    this._map.off('mousemove', this._syncHintMarker, this); // remove helping layers\n\n\n    this._map.removeLayer(this._layerGroup); // fire drawend event\n\n\n    this._map.fire('pm:drawend', {\n      shape: this._shape\n    }); // toggle the draw button of the Toolbar in case drawing mode got disabled without the button\n\n\n    this._map.pm.Toolbar.toggleButton(this.toolbarButtonName, false); // cleanup snapping\n\n\n    if (this.options.snappable) {\n      this._cleanupSnapping();\n    }\n  },\n  enabled: function enabled() {\n    return this._enabled;\n  },\n  toggle: function toggle(options) {\n    if (this.enabled()) {\n      this.disable();\n    } else {\n      this.enable(options);\n    }\n  },\n  _syncHintLine: function _syncHintLine() {\n    var latlng = this._centerMarker.getLatLng(); // set coords for hintline from marker to last vertex of drawin polyline\n\n\n    this._hintline.setLatLngs([latlng, this._hintMarker.getLatLng()]);\n  },\n  _syncCircleRadius: function _syncCircleRadius() {\n    var A = this._centerMarker.getLatLng();\n\n    var B = this._hintMarker.getLatLng();\n\n    var distance = A.distanceTo(B);\n\n    this._layer.setRadius(distance);\n  },\n  _syncHintMarker: function _syncHintMarker(e) {\n    // move the cursor marker\n    this._hintMarker.setLatLng(e.latlng); // if snapping is enabled, do it\n\n\n    if (this.options.snappable) {\n      var fakeDragEvent = e;\n      fakeDragEvent.target = this._hintMarker;\n\n      this._handleSnapping(fakeDragEvent);\n    }\n  },\n  _placeCenterMarker: function _placeCenterMarker(e) {\n    // assign the coordinate of the click to the hintMarker, that's necessary for\n    // mobile where the marker can't follow a cursor\n    if (!this._hintMarker._snapped) {\n      this._hintMarker.setLatLng(e.latlng);\n    } // get coordinate for new vertex by hintMarker (cursor marker)\n\n\n    var latlng = this._hintMarker.getLatLng();\n\n    this._centerMarker.setLatLng(latlng);\n\n    this._map.off('click', this._placeCenterMarker, this);\n\n    this._map.on('click', this._finishShape, this);\n\n    this._placeCircleCenter();\n  },\n  _placeCircleCenter: function _placeCircleCenter() {\n    var latlng = this._centerMarker.getLatLng();\n\n    if (latlng) {\n      this._layer.setLatLng(latlng); // sync the hintline with hint marker\n\n\n      this._hintMarker.on('move', this._syncHintLine, this);\n\n      this._hintMarker.on('move', this._syncCircleRadius, this);\n\n      this._hintMarker.setTooltipContent(this.options.textHintFinish || 'Click to finish circle');\n\n      this._layer.fire('pm:centerplaced', {\n        shape: this._shape,\n        workingLayer: this._layer,\n        latlng: latlng\n      });\n    }\n  },\n  _finishShape: function _finishShape(e) {\n    // calc the radius\n    var center = this._centerMarker.getLatLng();\n\n    var cursor = e.latlng;\n    var radius = center.distanceTo(cursor);\n    var options = Object.assign({}, this.options.pathOptions, {\n      radius: radius\n    }); // create the final circle layer\n\n    var circleLayer = L.circle(center, options).addTo(this._map); // disable drawing\n\n    this.disable(); // fire the pm:create event and pass shape and layer\n\n    this._map.fire('pm:create', {\n      shape: this._shape,\n      layer: circleLayer\n    });\n  },\n  _createMarker: function _createMarker(latlng) {\n    // create the new marker\n    var marker = new L.Marker(latlng, {\n      draggable: false,\n      icon: L.divIcon({\n        className: 'marker-icon'\n      })\n    });\n    marker._pmTempLayer = true; // add it to the map\n\n    this._layerGroup.addLayer(marker);\n\n    return marker;\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///31\n");

/***/ }),
/* 32 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_intersect__ = __webpack_require__(33);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_intersect___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__turf_intersect__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__turf_difference__ = __webpack_require__(34);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__L_PM_Draw__ = __webpack_require__(0);\n\n\n\n__WEBPACK_IMPORTED_MODULE_2__L_PM_Draw__[\"a\" /* default */].Cut = __WEBPACK_IMPORTED_MODULE_2__L_PM_Draw__[\"a\" /* default */].Poly.extend({\n  initialize: function initialize(map) {\n    this._map = map;\n    this._shape = 'Cut';\n    this.toolbarButtonName = 'cutPolygon';\n  },\n  _cut: function _cut(layer) {\n    var _this = this;\n\n    var all = this._map._layers; // find all layers that intersect with `layer`, the just drawn cutting layer\n\n    var layers = Object.keys(all) // convert object to array\n    .map(function (l) {\n      return all[l];\n    }) // only layers handled by leaflet.pm\n    .filter(function (l) {\n      return l.pm;\n    }) // only polygons\n    .filter(function (l) {\n      return l instanceof L.Polygon;\n    }) // exclude the drawn one\n    .filter(function (l) {\n      return l !== layer;\n    }) // only layers with intersections\n    .filter(function (l) {\n      try {\n        return !!__WEBPACK_IMPORTED_MODULE_0__turf_intersect___default()(layer.toGeoJSON(15), l.toGeoJSON(15));\n      } catch (e) {\n        /* eslint-disable-next-line no-console */\n        console.error('You cant cut polygons with self-intersections');\n        return false;\n      }\n    }); // loop through all layers that intersect with the drawn (cutting) layer\n\n    layers.forEach(function (l) {\n      // find layer difference\n      var diff = Object(__WEBPACK_IMPORTED_MODULE_1__turf_difference__[\"a\" /* default */])(l.toGeoJSON(15), layer.toGeoJSON(15)); // the resulting layer after the cut\n\n      var resultingLayer = L.geoJSON(diff, l.options).addTo(_this._map);\n      resultingLayer.addTo(_this._map); // give the new layer the original options\n\n      resultingLayer.pm.enable(_this.options);\n      resultingLayer.pm.disable(); // fire pm:cut on the cutted layer\n\n      l.fire('pm:cut', {\n        shape: _this._shape,\n        layer: resultingLayer,\n        originalLayer: l\n      }); // fire pm:cut on the map\n\n      _this._map.fire('pm:cut', {\n        shape: _this._shape,\n        layer: resultingLayer,\n        originalLayer: l\n      }); // add templayer prop so pm:remove isn't fired\n\n\n      l._pmTempLayer = true;\n      layer._pmTempLayer = true; // remove old layer and cutting layer\n\n      l.remove();\n      layer.remove();\n\n      if (resultingLayer.getLayers().length === 0) {\n        _this._map.pm.removeLayer({\n          target: resultingLayer\n        });\n      }\n    });\n  },\n  _finishShape: function _finishShape() {\n    // if self intersection is not allowed, do not finish the shape!\n    if (!this.options.allowSelfIntersection) {\n      this._handleSelfIntersection(false);\n\n      if (this._doesSelfIntersect) {\n        return;\n      }\n    }\n\n    var coords = this._layer.getLatLngs();\n\n    var polygonLayer = L.polygon(coords, this.options.pathOptions);\n\n    this._cut(polygonLayer); // disable drawing\n\n\n    this.disable(); // clean up snapping states\n\n    this._cleanupSnapping(); // remove the first vertex from \"other snapping layers\"\n\n\n    this._otherSnapLayers.splice(this._tempSnapLayerIndex, 1);\n\n    delete this._tempSnapLayerIndex;\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvRHJhdy9MLlBNLkRyYXcuQ3V0LmpzPzFiMzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGludGVyc2VjdCBmcm9tICdAdHVyZi9pbnRlcnNlY3QnO1xuaW1wb3J0IGRpZmZlcmVuY2UgZnJvbSAnQHR1cmYvZGlmZmVyZW5jZSc7XG5pbXBvcnQgRHJhdyBmcm9tICcuL0wuUE0uRHJhdyc7XG5EcmF3LkN1dCA9IERyYXcuUG9seS5leHRlbmQoe1xuICBpbml0aWFsaXplOiBmdW5jdGlvbiBpbml0aWFsaXplKG1hcCkge1xuICAgIHRoaXMuX21hcCA9IG1hcDtcbiAgICB0aGlzLl9zaGFwZSA9ICdDdXQnO1xuICAgIHRoaXMudG9vbGJhckJ1dHRvbk5hbWUgPSAnY3V0UG9seWdvbic7XG4gIH0sXG4gIF9jdXQ6IGZ1bmN0aW9uIF9jdXQobGF5ZXIpIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgdmFyIGFsbCA9IHRoaXMuX21hcC5fbGF5ZXJzOyAvLyBmaW5kIGFsbCBsYXllcnMgdGhhdCBpbnRlcnNlY3Qgd2l0aCBgbGF5ZXJgLCB0aGUganVzdCBkcmF3biBjdXR0aW5nIGxheWVyXG5cbiAgICB2YXIgbGF5ZXJzID0gT2JqZWN0LmtleXMoYWxsKSAvLyBjb252ZXJ0IG9iamVjdCB0byBhcnJheVxuICAgIC5tYXAoZnVuY3Rpb24gKGwpIHtcbiAgICAgIHJldHVybiBhbGxbbF07XG4gICAgfSkgLy8gb25seSBsYXllcnMgaGFuZGxlZCBieSBsZWFmbGV0LnBtXG4gICAgLmZpbHRlcihmdW5jdGlvbiAobCkge1xuICAgICAgcmV0dXJuIGwucG07XG4gICAgfSkgLy8gb25seSBwb2x5Z29uc1xuICAgIC5maWx0ZXIoZnVuY3Rpb24gKGwpIHtcbiAgICAgIHJldHVybiBsIGluc3RhbmNlb2YgTC5Qb2x5Z29uO1xuICAgIH0pIC8vIGV4Y2x1ZGUgdGhlIGRyYXduIG9uZVxuICAgIC5maWx0ZXIoZnVuY3Rpb24gKGwpIHtcbiAgICAgIHJldHVybiBsICE9PSBsYXllcjtcbiAgICB9KSAvLyBvbmx5IGxheWVycyB3aXRoIGludGVyc2VjdGlvbnNcbiAgICAuZmlsdGVyKGZ1bmN0aW9uIChsKSB7XG4gICAgICB0cnkge1xuICAgICAgICByZXR1cm4gISFpbnRlcnNlY3QobGF5ZXIudG9HZW9KU09OKDE1KSwgbC50b0dlb0pTT04oMTUpKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLyogZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGUgKi9cbiAgICAgICAgY29uc29sZS5lcnJvcignWW91IGNhbnQgY3V0IHBvbHlnb25zIHdpdGggc2VsZi1pbnRlcnNlY3Rpb25zJyk7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9KTsgLy8gbG9vcCB0aHJvdWdoIGFsbCBsYXllcnMgdGhhdCBpbnRlcnNlY3Qgd2l0aCB0aGUgZHJhd24gKGN1dHRpbmcpIGxheWVyXG5cbiAgICBsYXllcnMuZm9yRWFjaChmdW5jdGlvbiAobCkge1xuICAgICAgLy8gZmluZCBsYXllciBkaWZmZXJlbmNlXG4gICAgICB2YXIgZGlmZiA9IGRpZmZlcmVuY2UobC50b0dlb0pTT04oMTUpLCBsYXllci50b0dlb0pTT04oMTUpKTsgLy8gdGhlIHJlc3VsdGluZyBsYXllciBhZnRlciB0aGUgY3V0XG5cbiAgICAgIHZhciByZXN1bHRpbmdMYXllciA9IEwuZ2VvSlNPTihkaWZmLCBsLm9wdGlvbnMpLmFkZFRvKF90aGlzLl9tYXApO1xuICAgICAgcmVzdWx0aW5nTGF5ZXIuYWRkVG8oX3RoaXMuX21hcCk7IC8vIGdpdmUgdGhlIG5ldyBsYXllciB0aGUgb3JpZ2luYWwgb3B0aW9uc1xuXG4gICAgICByZXN1bHRpbmdMYXllci5wbS5lbmFibGUoX3RoaXMub3B0aW9ucyk7XG4gICAgICByZXN1bHRpbmdMYXllci5wbS5kaXNhYmxlKCk7IC8vIGZpcmUgcG06Y3V0IG9uIHRoZSBjdXR0ZWQgbGF5ZXJcblxuICAgICAgbC5maXJlKCdwbTpjdXQnLCB7XG4gICAgICAgIHNoYXBlOiBfdGhpcy5fc2hhcGUsXG4gICAgICAgIGxheWVyOiByZXN1bHRpbmdMYXllcixcbiAgICAgICAgb3JpZ2luYWxMYXllcjogbFxuICAgICAgfSk7IC8vIGZpcmUgcG06Y3V0IG9uIHRoZSBtYXBcblxuICAgICAgX3RoaXMuX21hcC5maXJlKCdwbTpjdXQnLCB7XG4gICAgICAgIHNoYXBlOiBfdGhpcy5fc2hhcGUsXG4gICAgICAgIGxheWVyOiByZXN1bHRpbmdMYXllcixcbiAgICAgICAgb3JpZ2luYWxMYXllcjogbFxuICAgICAgfSk7IC8vIGFkZCB0ZW1wbGF5ZXIgcHJvcCBzbyBwbTpyZW1vdmUgaXNuJ3QgZmlyZWRcblxuXG4gICAgICBsLl9wbVRlbXBMYXllciA9IHRydWU7XG4gICAgICBsYXllci5fcG1UZW1wTGF5ZXIgPSB0cnVlOyAvLyByZW1vdmUgb2xkIGxheWVyIGFuZCBjdXR0aW5nIGxheWVyXG5cbiAgICAgIGwucmVtb3ZlKCk7XG4gICAgICBsYXllci5yZW1vdmUoKTtcblxuICAgICAgaWYgKHJlc3VsdGluZ0xheWVyLmdldExheWVycygpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBfdGhpcy5fbWFwLnBtLnJlbW92ZUxheWVyKHtcbiAgICAgICAgICB0YXJnZXQ6IHJlc3VsdGluZ0xheWVyXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pO1xuICB9LFxuICBfZmluaXNoU2hhcGU6IGZ1bmN0aW9uIF9maW5pc2hTaGFwZSgpIHtcbiAgICAvLyBpZiBzZWxmIGludGVyc2VjdGlvbiBpcyBub3QgYWxsb3dlZCwgZG8gbm90IGZpbmlzaCB0aGUgc2hhcGUhXG4gICAgaWYgKCF0aGlzLm9wdGlvbnMuYWxsb3dTZWxmSW50ZXJzZWN0aW9uKSB7XG4gICAgICB0aGlzLl9oYW5kbGVTZWxmSW50ZXJzZWN0aW9uKGZhbHNlKTtcblxuICAgICAgaWYgKHRoaXMuX2RvZXNTZWxmSW50ZXJzZWN0KSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgY29vcmRzID0gdGhpcy5fbGF5ZXIuZ2V0TGF0TG5ncygpO1xuXG4gICAgdmFyIHBvbHlnb25MYXllciA9IEwucG9seWdvbihjb29yZHMsIHRoaXMub3B0aW9ucy5wYXRoT3B0aW9ucyk7XG5cbiAgICB0aGlzLl9jdXQocG9seWdvbkxheWVyKTsgLy8gZGlzYWJsZSBkcmF3aW5nXG5cblxuICAgIHRoaXMuZGlzYWJsZSgpOyAvLyBjbGVhbiB1cCBzbmFwcGluZyBzdGF0ZXNcblxuICAgIHRoaXMuX2NsZWFudXBTbmFwcGluZygpOyAvLyByZW1vdmUgdGhlIGZpcnN0IHZlcnRleCBmcm9tIFwib3RoZXIgc25hcHBpbmcgbGF5ZXJzXCJcblxuXG4gICAgdGhpcy5fb3RoZXJTbmFwTGF5ZXJzLnNwbGljZSh0aGlzLl90ZW1wU25hcExheWVySW5kZXgsIDEpO1xuXG4gICAgZGVsZXRlIHRoaXMuX3RlbXBTbmFwTGF5ZXJJbmRleDtcbiAgfVxufSk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvRHJhdy9MLlBNLkRyYXcuQ3V0LmpzXG4vLyBtb2R1bGUgaWQgPSAzMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///32\n");

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result[\"default\"] = mod;\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = __webpack_require__(2);\r\nvar invariant_1 = __webpack_require__(7);\r\nvar martinez = __importStar(__webpack_require__(6));\r\n/**\r\n * Takes two {@link Polygon|polygon} or {@link MultiPolygon|multi-polygon} geometries and\r\n * finds their polygonal intersection. If they don't intersect, returns null.\r\n *\r\n * @name intersect\r\n * @param {Feature<Polygon | MultiPolygon>} poly1 the first polygon or multipolygon\r\n * @param {Feature<Polygon | MultiPolygon>} poly2 the second polygon or multipolygon\r\n * @param {Object} [options={}] Optional Parameters\r\n * @param {Object} [options.properties={}] Translate GeoJSON Properties to Feature\r\n * @returns {Feature|null} returns a feature representing the area they share (either a {@link Polygon} or\r\n * {@link MultiPolygon}). If they do not share any area, returns `null`.\r\n * @example\r\n * var poly1 = turf.polygon([[\r\n *   [-122.801742, 45.48565],\r\n *   [-122.801742, 45.60491],\r\n *   [-122.584762, 45.60491],\r\n *   [-122.584762, 45.48565],\r\n *   [-122.801742, 45.48565]\r\n * ]]);\r\n *\r\n * var poly2 = turf.polygon([[\r\n *   [-122.520217, 45.535693],\r\n *   [-122.64038, 45.553967],\r\n *   [-122.720031, 45.526554],\r\n *   [-122.669906, 45.507309],\r\n *   [-122.723464, 45.446643],\r\n *   [-122.532577, 45.408574],\r\n *   [-122.487258, 45.477466],\r\n *   [-122.520217, 45.535693]\r\n * ]]);\r\n *\r\n * var intersection = turf.intersect(poly1, poly2);\r\n *\r\n * //addToMap\r\n * var addToMap = [poly1, poly2, intersection];\r\n */\r\nfunction intersect(poly1, poly2, options) {\r\n    if (options === void 0) { options = {}; }\r\n    var geom1 = invariant_1.getGeom(poly1);\r\n    var geom2 = invariant_1.getGeom(poly2);\r\n    if (geom1.type === \"Polygon\" && geom2.type === \"Polygon\") {\r\n        var intersection = martinez.intersection(geom1.coordinates, geom2.coordinates);\r\n        if (intersection === null || intersection.length === 0) {\r\n            return null;\r\n        }\r\n        if (intersection.length === 1) {\r\n            var start = intersection[0][0][0];\r\n            var end = intersection[0][0][intersection[0][0].length - 1];\r\n            if (start[0] === end[0] && start[1] === end[1]) {\r\n                return helpers_1.polygon(intersection[0], options.properties);\r\n            }\r\n            return null;\r\n        }\r\n        return helpers_1.multiPolygon(intersection, options.properties);\r\n    }\r\n    else if (geom1.type === \"MultiPolygon\") {\r\n        var resultCoords = [];\r\n        // iterate through the polygon and run intersect with each part, adding to the resultCoords.\r\n        for (var _i = 0, _a = geom1.coordinates; _i < _a.length; _i++) {\r\n            var coords = _a[_i];\r\n            var subGeom = invariant_1.getGeom(helpers_1.polygon(coords));\r\n            var subIntersection = intersect(subGeom, geom2);\r\n            if (subIntersection) {\r\n                var subIntGeom = invariant_1.getGeom(subIntersection);\r\n                if (subIntGeom.type === \"Polygon\") {\r\n                    resultCoords.push(subIntGeom.coordinates);\r\n                }\r\n                else if (subIntGeom.type === \"MultiPolygon\") {\r\n                    resultCoords = resultCoords.concat(subIntGeom.coordinates);\r\n                }\r\n                else {\r\n                    throw new Error(\"intersection is invalid\");\r\n                }\r\n            }\r\n        }\r\n        // Make a polygon with the result\r\n        if (resultCoords.length === 0) {\r\n            return null;\r\n        }\r\n        if (resultCoords.length === 1) {\r\n            return helpers_1.polygon(resultCoords[0], options.properties);\r\n        }\r\n        else {\r\n            return helpers_1.multiPolygon(resultCoords, options.properties);\r\n        }\r\n    }\r\n    else if (geom2.type === \"MultiPolygon\") {\r\n        // geom1 is a polygon and geom2 a multiPolygon,\r\n        // put the multiPolygon first and fallback to the previous case.\r\n        return intersect(geom2, geom1);\r\n    }\r\n    else {\r\n        // handle invalid geometry types\r\n        throw new Error(\"poly1 and poly2 must be either polygons or multiPolygons\");\r\n    }\r\n}\r\nexports.default = intersect;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHR1cmYvaW50ZXJzZWN0L2luZGV4LmpzP2RhYjgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xyXG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcclxuICAgIHZhciByZXN1bHQgPSB7fTtcclxuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChPYmplY3QuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSByZXN1bHRba10gPSBtb2Rba107XHJcbiAgICByZXN1bHRbXCJkZWZhdWx0XCJdID0gbW9kO1xyXG4gICAgcmV0dXJuIHJlc3VsdDtcclxufTtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG52YXIgaGVscGVyc18xID0gcmVxdWlyZShcIkB0dXJmL2hlbHBlcnNcIik7XHJcbnZhciBpbnZhcmlhbnRfMSA9IHJlcXVpcmUoXCJAdHVyZi9pbnZhcmlhbnRcIik7XHJcbnZhciBtYXJ0aW5leiA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwibWFydGluZXotcG9seWdvbi1jbGlwcGluZ1wiKSk7XHJcbi8qKlxyXG4gKiBUYWtlcyB0d28ge0BsaW5rIFBvbHlnb258cG9seWdvbn0gb3Ige0BsaW5rIE11bHRpUG9seWdvbnxtdWx0aS1wb2x5Z29ufSBnZW9tZXRyaWVzIGFuZFxyXG4gKiBmaW5kcyB0aGVpciBwb2x5Z29uYWwgaW50ZXJzZWN0aW9uLiBJZiB0aGV5IGRvbid0IGludGVyc2VjdCwgcmV0dXJucyBudWxsLlxyXG4gKlxyXG4gKiBAbmFtZSBpbnRlcnNlY3RcclxuICogQHBhcmFtIHtGZWF0dXJlPFBvbHlnb24gfCBNdWx0aVBvbHlnb24+fSBwb2x5MSB0aGUgZmlyc3QgcG9seWdvbiBvciBtdWx0aXBvbHlnb25cclxuICogQHBhcmFtIHtGZWF0dXJlPFBvbHlnb24gfCBNdWx0aVBvbHlnb24+fSBwb2x5MiB0aGUgc2Vjb25kIHBvbHlnb24gb3IgbXVsdGlwb2x5Z29uXHJcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucz17fV0gT3B0aW9uYWwgUGFyYW1ldGVyc1xyXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnMucHJvcGVydGllcz17fV0gVHJhbnNsYXRlIEdlb0pTT04gUHJvcGVydGllcyB0byBGZWF0dXJlXHJcbiAqIEByZXR1cm5zIHtGZWF0dXJlfG51bGx9IHJldHVybnMgYSBmZWF0dXJlIHJlcHJlc2VudGluZyB0aGUgYXJlYSB0aGV5IHNoYXJlIChlaXRoZXIgYSB7QGxpbmsgUG9seWdvbn0gb3JcclxuICoge0BsaW5rIE11bHRpUG9seWdvbn0pLiBJZiB0aGV5IGRvIG5vdCBzaGFyZSBhbnkgYXJlYSwgcmV0dXJucyBgbnVsbGAuXHJcbiAqIEBleGFtcGxlXHJcbiAqIHZhciBwb2x5MSA9IHR1cmYucG9seWdvbihbW1xyXG4gKiAgIFstMTIyLjgwMTc0MiwgNDUuNDg1NjVdLFxyXG4gKiAgIFstMTIyLjgwMTc0MiwgNDUuNjA0OTFdLFxyXG4gKiAgIFstMTIyLjU4NDc2MiwgNDUuNjA0OTFdLFxyXG4gKiAgIFstMTIyLjU4NDc2MiwgNDUuNDg1NjVdLFxyXG4gKiAgIFstMTIyLjgwMTc0MiwgNDUuNDg1NjVdXHJcbiAqIF1dKTtcclxuICpcclxuICogdmFyIHBvbHkyID0gdHVyZi5wb2x5Z29uKFtbXHJcbiAqICAgWy0xMjIuNTIwMjE3LCA0NS41MzU2OTNdLFxyXG4gKiAgIFstMTIyLjY0MDM4LCA0NS41NTM5NjddLFxyXG4gKiAgIFstMTIyLjcyMDAzMSwgNDUuNTI2NTU0XSxcclxuICogICBbLTEyMi42Njk5MDYsIDQ1LjUwNzMwOV0sXHJcbiAqICAgWy0xMjIuNzIzNDY0LCA0NS40NDY2NDNdLFxyXG4gKiAgIFstMTIyLjUzMjU3NywgNDUuNDA4NTc0XSxcclxuICogICBbLTEyMi40ODcyNTgsIDQ1LjQ3NzQ2Nl0sXHJcbiAqICAgWy0xMjIuNTIwMjE3LCA0NS41MzU2OTNdXHJcbiAqIF1dKTtcclxuICpcclxuICogdmFyIGludGVyc2VjdGlvbiA9IHR1cmYuaW50ZXJzZWN0KHBvbHkxLCBwb2x5Mik7XHJcbiAqXHJcbiAqIC8vYWRkVG9NYXBcclxuICogdmFyIGFkZFRvTWFwID0gW3BvbHkxLCBwb2x5MiwgaW50ZXJzZWN0aW9uXTtcclxuICovXHJcbmZ1bmN0aW9uIGludGVyc2VjdChwb2x5MSwgcG9seTIsIG9wdGlvbnMpIHtcclxuICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHsgb3B0aW9ucyA9IHt9OyB9XHJcbiAgICB2YXIgZ2VvbTEgPSBpbnZhcmlhbnRfMS5nZXRHZW9tKHBvbHkxKTtcclxuICAgIHZhciBnZW9tMiA9IGludmFyaWFudF8xLmdldEdlb20ocG9seTIpO1xyXG4gICAgaWYgKGdlb20xLnR5cGUgPT09IFwiUG9seWdvblwiICYmIGdlb20yLnR5cGUgPT09IFwiUG9seWdvblwiKSB7XHJcbiAgICAgICAgdmFyIGludGVyc2VjdGlvbiA9IG1hcnRpbmV6LmludGVyc2VjdGlvbihnZW9tMS5jb29yZGluYXRlcywgZ2VvbTIuY29vcmRpbmF0ZXMpO1xyXG4gICAgICAgIGlmIChpbnRlcnNlY3Rpb24gPT09IG51bGwgfHwgaW50ZXJzZWN0aW9uLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGludGVyc2VjdGlvbi5sZW5ndGggPT09IDEpIHtcclxuICAgICAgICAgICAgdmFyIHN0YXJ0ID0gaW50ZXJzZWN0aW9uWzBdWzBdWzBdO1xyXG4gICAgICAgICAgICB2YXIgZW5kID0gaW50ZXJzZWN0aW9uWzBdWzBdW2ludGVyc2VjdGlvblswXVswXS5sZW5ndGggLSAxXTtcclxuICAgICAgICAgICAgaWYgKHN0YXJ0WzBdID09PSBlbmRbMF0gJiYgc3RhcnRbMV0gPT09IGVuZFsxXSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGhlbHBlcnNfMS5wb2x5Z29uKGludGVyc2VjdGlvblswXSwgb3B0aW9ucy5wcm9wZXJ0aWVzKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGhlbHBlcnNfMS5tdWx0aVBvbHlnb24oaW50ZXJzZWN0aW9uLCBvcHRpb25zLnByb3BlcnRpZXMpO1xyXG4gICAgfVxyXG4gICAgZWxzZSBpZiAoZ2VvbTEudHlwZSA9PT0gXCJNdWx0aVBvbHlnb25cIikge1xyXG4gICAgICAgIHZhciByZXN1bHRDb29yZHMgPSBbXTtcclxuICAgICAgICAvLyBpdGVyYXRlIHRocm91Z2ggdGhlIHBvbHlnb24gYW5kIHJ1biBpbnRlcnNlY3Qgd2l0aCBlYWNoIHBhcnQsIGFkZGluZyB0byB0aGUgcmVzdWx0Q29vcmRzLlxyXG4gICAgICAgIGZvciAodmFyIF9pID0gMCwgX2EgPSBnZW9tMS5jb29yZGluYXRlczsgX2kgPCBfYS5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICAgICAgdmFyIGNvb3JkcyA9IF9hW19pXTtcclxuICAgICAgICAgICAgdmFyIHN1Ykdlb20gPSBpbnZhcmlhbnRfMS5nZXRHZW9tKGhlbHBlcnNfMS5wb2x5Z29uKGNvb3JkcykpO1xyXG4gICAgICAgICAgICB2YXIgc3ViSW50ZXJzZWN0aW9uID0gaW50ZXJzZWN0KHN1Ykdlb20sIGdlb20yKTtcclxuICAgICAgICAgICAgaWYgKHN1YkludGVyc2VjdGlvbikge1xyXG4gICAgICAgICAgICAgICAgdmFyIHN1YkludEdlb20gPSBpbnZhcmlhbnRfMS5nZXRHZW9tKHN1YkludGVyc2VjdGlvbik7XHJcbiAgICAgICAgICAgICAgICBpZiAoc3ViSW50R2VvbS50eXBlID09PSBcIlBvbHlnb25cIikge1xyXG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdENvb3Jkcy5wdXNoKHN1YkludEdlb20uY29vcmRpbmF0ZXMpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoc3ViSW50R2VvbS50eXBlID09PSBcIk11bHRpUG9seWdvblwiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0Q29vcmRzID0gcmVzdWx0Q29vcmRzLmNvbmNhdChzdWJJbnRHZW9tLmNvb3JkaW5hdGVzKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcImludGVyc2VjdGlvbiBpcyBpbnZhbGlkXCIpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIE1ha2UgYSBwb2x5Z29uIHdpdGggdGhlIHJlc3VsdFxyXG4gICAgICAgIGlmIChyZXN1bHRDb29yZHMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAocmVzdWx0Q29vcmRzLmxlbmd0aCA9PT0gMSkge1xyXG4gICAgICAgICAgICByZXR1cm4gaGVscGVyc18xLnBvbHlnb24ocmVzdWx0Q29vcmRzWzBdLCBvcHRpb25zLnByb3BlcnRpZXMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIGhlbHBlcnNfMS5tdWx0aVBvbHlnb24ocmVzdWx0Q29vcmRzLCBvcHRpb25zLnByb3BlcnRpZXMpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGVsc2UgaWYgKGdlb20yLnR5cGUgPT09IFwiTXVsdGlQb2x5Z29uXCIpIHtcclxuICAgICAgICAvLyBnZW9tMSBpcyBhIHBvbHlnb24gYW5kIGdlb20yIGEgbXVsdGlQb2x5Z29uLFxyXG4gICAgICAgIC8vIHB1dCB0aGUgbXVsdGlQb2x5Z29uIGZpcnN0IGFuZCBmYWxsYmFjayB0byB0aGUgcHJldmlvdXMgY2FzZS5cclxuICAgICAgICByZXR1cm4gaW50ZXJzZWN0KGdlb20yLCBnZW9tMSk7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICAvLyBoYW5kbGUgaW52YWxpZCBnZW9tZXRyeSB0eXBlc1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcInBvbHkxIGFuZCBwb2x5MiBtdXN0IGJlIGVpdGhlciBwb2x5Z29ucyBvciBtdWx0aVBvbHlnb25zXCIpO1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydHMuZGVmYXVsdCA9IGludGVyc2VjdDtcclxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvQHR1cmYvaW50ZXJzZWN0L2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAzM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///33\n");

/***/ }),
/* 34 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_martinez_polygon_clipping__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_martinez_polygon_clipping___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_martinez_polygon_clipping__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__turf_area__ = __webpack_require__(35);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__turf_area___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__turf_area__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__turf_helpers__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__turf_helpers___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__turf_helpers__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__turf_invariant__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__turf_invariant___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__turf_invariant__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__turf_meta__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__turf_meta___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__turf_meta__);\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Finds the difference between two {@link Polygon|polygons} by clipping the second polygon from the first.\r\n *\r\n * @name difference\r\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\r\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\r\n * @returns {Feature<Polygon|MultiPolygon>|null} a Polygon or MultiPolygon feature showing the area of `polygon1` excluding the area of `polygon2` (if empty returns `null`)\r\n * @example\r\n * var polygon1 = turf.polygon([[\r\n *   [128, -26],\r\n *   [141, -26],\r\n *   [141, -21],\r\n *   [128, -21],\r\n *   [128, -26]\r\n * ]], {\r\n *   \"fill\": \"#F00\",\r\n *   \"fill-opacity\": 0.1\r\n * });\r\n * var polygon2 = turf.polygon([[\r\n *   [126, -28],\r\n *   [140, -28],\r\n *   [140, -20],\r\n *   [126, -20],\r\n *   [126, -28]\r\n * ]], {\r\n *   \"fill\": \"#00F\",\r\n *   \"fill-opacity\": 0.1\r\n * });\r\n *\r\n * var difference = turf.difference(polygon1, polygon2);\r\n *\r\n * //addToMap\r\n * var addToMap = [polygon1, polygon2, difference];\r\n */\r\nfunction difference(polygon1, polygon2) {\r\n    var geom1 = Object(__WEBPACK_IMPORTED_MODULE_3__turf_invariant__[\"getGeom\"])(polygon1);\r\n    var geom2 = Object(__WEBPACK_IMPORTED_MODULE_3__turf_invariant__[\"getGeom\"])(polygon2);\r\n    var properties = polygon1.properties || {};\r\n\r\n    // Issue #721 - JSTS/Martinez can't handle empty polygons\r\n    geom1 = removeEmptyPolygon(geom1);\r\n    geom2 = removeEmptyPolygon(geom2);\r\n    if (!geom1) return null;\r\n    if (!geom2) return Object(__WEBPACK_IMPORTED_MODULE_2__turf_helpers__[\"feature\"])(geom1, properties);\r\n\r\n    var differenced = __WEBPACK_IMPORTED_MODULE_0_martinez_polygon_clipping__[\"diff\"](geom1.coordinates, geom2.coordinates);\r\n    if (differenced.length === 0) return null;\r\n    if (differenced.length === 1) return Object(__WEBPACK_IMPORTED_MODULE_2__turf_helpers__[\"polygon\"])(differenced[0], properties);\r\n    return Object(__WEBPACK_IMPORTED_MODULE_2__turf_helpers__[\"multiPolygon\"])(differenced, properties);\r\n}\r\n\r\n/**\r\n * Detect Empty Polygon\r\n *\r\n * @private\r\n * @param {Geometry<Polygon|MultiPolygon>} geom Geometry Object\r\n * @returns {Geometry<Polygon|MultiPolygon>|null} removed any polygons with no areas\r\n */\r\nfunction removeEmptyPolygon(geom) {\r\n    switch (geom.type) {\r\n    case 'Polygon':\r\n        if (__WEBPACK_IMPORTED_MODULE_1__turf_area___default()(geom) > 1) return geom;\r\n        return null;\r\n    case 'MultiPolygon':\r\n        var coordinates = [];\r\n        Object(__WEBPACK_IMPORTED_MODULE_4__turf_meta__[\"flattenEach\"])(geom, function (feature) {\r\n            if (__WEBPACK_IMPORTED_MODULE_1__turf_area___default()(feature) > 1) coordinates.push(feature.geometry.coordinates);\r\n        });\r\n        if (coordinates.length) return {type: 'MultiPolygon', coordinates: coordinates};\r\n    }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (difference);\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHR1cmYvZGlmZmVyZW5jZS9pbmRleC5tanM/MmRkOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBtYXJ0aW5leiBmcm9tICdtYXJ0aW5lei1wb2x5Z29uLWNsaXBwaW5nJztcclxuaW1wb3J0IGFyZWEgZnJvbSAnQHR1cmYvYXJlYSc7XHJcbmltcG9ydCB7IGZlYXR1cmUsIG11bHRpUG9seWdvbiwgcG9seWdvbiB9IGZyb20gJ0B0dXJmL2hlbHBlcnMnO1xyXG5pbXBvcnQgeyBnZXRHZW9tIH0gZnJvbSAnQHR1cmYvaW52YXJpYW50JztcclxuaW1wb3J0IHsgZmxhdHRlbkVhY2ggfSBmcm9tICdAdHVyZi9tZXRhJztcclxuXHJcbi8qKlxyXG4gKiBGaW5kcyB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHR3byB7QGxpbmsgUG9seWdvbnxwb2x5Z29uc30gYnkgY2xpcHBpbmcgdGhlIHNlY29uZCBwb2x5Z29uIGZyb20gdGhlIGZpcnN0LlxyXG4gKlxyXG4gKiBAbmFtZSBkaWZmZXJlbmNlXHJcbiAqIEBwYXJhbSB7RmVhdHVyZTxQb2x5Z29ufE11bHRpUG9seWdvbj59IHBvbHlnb24xIGlucHV0IFBvbHlnb24gZmVhdHVyZVxyXG4gKiBAcGFyYW0ge0ZlYXR1cmU8UG9seWdvbnxNdWx0aVBvbHlnb24+fSBwb2x5Z29uMiBQb2x5Z29uIGZlYXR1cmUgdG8gZGlmZmVyZW5jZSBmcm9tIHBvbHlnb24xXHJcbiAqIEByZXR1cm5zIHtGZWF0dXJlPFBvbHlnb258TXVsdGlQb2x5Z29uPnxudWxsfSBhIFBvbHlnb24gb3IgTXVsdGlQb2x5Z29uIGZlYXR1cmUgc2hvd2luZyB0aGUgYXJlYSBvZiBgcG9seWdvbjFgIGV4Y2x1ZGluZyB0aGUgYXJlYSBvZiBgcG9seWdvbjJgIChpZiBlbXB0eSByZXR1cm5zIGBudWxsYClcclxuICogQGV4YW1wbGVcclxuICogdmFyIHBvbHlnb24xID0gdHVyZi5wb2x5Z29uKFtbXHJcbiAqICAgWzEyOCwgLTI2XSxcclxuICogICBbMTQxLCAtMjZdLFxyXG4gKiAgIFsxNDEsIC0yMV0sXHJcbiAqICAgWzEyOCwgLTIxXSxcclxuICogICBbMTI4LCAtMjZdXHJcbiAqIF1dLCB7XHJcbiAqICAgXCJmaWxsXCI6IFwiI0YwMFwiLFxyXG4gKiAgIFwiZmlsbC1vcGFjaXR5XCI6IDAuMVxyXG4gKiB9KTtcclxuICogdmFyIHBvbHlnb24yID0gdHVyZi5wb2x5Z29uKFtbXHJcbiAqICAgWzEyNiwgLTI4XSxcclxuICogICBbMTQwLCAtMjhdLFxyXG4gKiAgIFsxNDAsIC0yMF0sXHJcbiAqICAgWzEyNiwgLTIwXSxcclxuICogICBbMTI2LCAtMjhdXHJcbiAqIF1dLCB7XHJcbiAqICAgXCJmaWxsXCI6IFwiIzAwRlwiLFxyXG4gKiAgIFwiZmlsbC1vcGFjaXR5XCI6IDAuMVxyXG4gKiB9KTtcclxuICpcclxuICogdmFyIGRpZmZlcmVuY2UgPSB0dXJmLmRpZmZlcmVuY2UocG9seWdvbjEsIHBvbHlnb24yKTtcclxuICpcclxuICogLy9hZGRUb01hcFxyXG4gKiB2YXIgYWRkVG9NYXAgPSBbcG9seWdvbjEsIHBvbHlnb24yLCBkaWZmZXJlbmNlXTtcclxuICovXHJcbmZ1bmN0aW9uIGRpZmZlcmVuY2UocG9seWdvbjEsIHBvbHlnb24yKSB7XHJcbiAgICB2YXIgZ2VvbTEgPSBnZXRHZW9tKHBvbHlnb24xKTtcclxuICAgIHZhciBnZW9tMiA9IGdldEdlb20ocG9seWdvbjIpO1xyXG4gICAgdmFyIHByb3BlcnRpZXMgPSBwb2x5Z29uMS5wcm9wZXJ0aWVzIHx8IHt9O1xyXG5cclxuICAgIC8vIElzc3VlICM3MjEgLSBKU1RTL01hcnRpbmV6IGNhbid0IGhhbmRsZSBlbXB0eSBwb2x5Z29uc1xyXG4gICAgZ2VvbTEgPSByZW1vdmVFbXB0eVBvbHlnb24oZ2VvbTEpO1xyXG4gICAgZ2VvbTIgPSByZW1vdmVFbXB0eVBvbHlnb24oZ2VvbTIpO1xyXG4gICAgaWYgKCFnZW9tMSkgcmV0dXJuIG51bGw7XHJcbiAgICBpZiAoIWdlb20yKSByZXR1cm4gZmVhdHVyZShnZW9tMSwgcHJvcGVydGllcyk7XHJcblxyXG4gICAgdmFyIGRpZmZlcmVuY2VkID0gbWFydGluZXouZGlmZihnZW9tMS5jb29yZGluYXRlcywgZ2VvbTIuY29vcmRpbmF0ZXMpO1xyXG4gICAgaWYgKGRpZmZlcmVuY2VkLmxlbmd0aCA9PT0gMCkgcmV0dXJuIG51bGw7XHJcbiAgICBpZiAoZGlmZmVyZW5jZWQubGVuZ3RoID09PSAxKSByZXR1cm4gcG9seWdvbihkaWZmZXJlbmNlZFswXSwgcHJvcGVydGllcyk7XHJcbiAgICByZXR1cm4gbXVsdGlQb2x5Z29uKGRpZmZlcmVuY2VkLCBwcm9wZXJ0aWVzKTtcclxufVxyXG5cclxuLyoqXHJcbiAqIERldGVjdCBFbXB0eSBQb2x5Z29uXHJcbiAqXHJcbiAqIEBwcml2YXRlXHJcbiAqIEBwYXJhbSB7R2VvbWV0cnk8UG9seWdvbnxNdWx0aVBvbHlnb24+fSBnZW9tIEdlb21ldHJ5IE9iamVjdFxyXG4gKiBAcmV0dXJucyB7R2VvbWV0cnk8UG9seWdvbnxNdWx0aVBvbHlnb24+fG51bGx9IHJlbW92ZWQgYW55IHBvbHlnb25zIHdpdGggbm8gYXJlYXNcclxuICovXHJcbmZ1bmN0aW9uIHJlbW92ZUVtcHR5UG9seWdvbihnZW9tKSB7XHJcbiAgICBzd2l0Y2ggKGdlb20udHlwZSkge1xyXG4gICAgY2FzZSAnUG9seWdvbic6XHJcbiAgICAgICAgaWYgKGFyZWEoZ2VvbSkgPiAxKSByZXR1cm4gZ2VvbTtcclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIGNhc2UgJ011bHRpUG9seWdvbic6XHJcbiAgICAgICAgdmFyIGNvb3JkaW5hdGVzID0gW107XHJcbiAgICAgICAgZmxhdHRlbkVhY2goZ2VvbSwgZnVuY3Rpb24gKGZlYXR1cmUpIHtcclxuICAgICAgICAgICAgaWYgKGFyZWEoZmVhdHVyZSkgPiAxKSBjb29yZGluYXRlcy5wdXNoKGZlYXR1cmUuZ2VvbWV0cnkuY29vcmRpbmF0ZXMpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGlmIChjb29yZGluYXRlcy5sZW5ndGgpIHJldHVybiB7dHlwZTogJ011bHRpUG9seWdvbicsIGNvb3JkaW5hdGVzOiBjb29yZGluYXRlc307XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGRpZmZlcmVuY2U7XHJcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL0B0dXJmL2RpZmZlcmVuY2UvaW5kZXgubWpzXG4vLyBtb2R1bGUgaWQgPSAzNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///34\n");

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar meta_1 = __webpack_require__(15);\n// Note: change RADIUS => earthRadius\nvar RADIUS = 6378137;\n/**\n * Takes one or more features and returns their area in square meters.\n *\n * @name area\n * @param {GeoJSON} geojson input GeoJSON feature(s)\n * @returns {number} area in square meters\n * @example\n * var polygon = turf.polygon([[[125, -15], [113, -22], [154, -27], [144, -15], [125, -15]]]);\n *\n * var area = turf.area(polygon);\n *\n * //addToMap\n * var addToMap = [polygon]\n * polygon.properties.area = area\n */\nfunction area(geojson) {\n    return meta_1.geomReduce(geojson, function (value, geom) {\n        return value + calculateArea(geom);\n    }, 0);\n}\nexports.default = area;\n/**\n * Calculate Area\n *\n * @private\n * @param {Geometry} geom GeoJSON Geometries\n * @returns {number} area\n */\nfunction calculateArea(geom) {\n    var total = 0;\n    var i;\n    switch (geom.type) {\n        case \"Polygon\":\n            return polygonArea(geom.coordinates);\n        case \"MultiPolygon\":\n            for (i = 0; i < geom.coordinates.length; i++) {\n                total += polygonArea(geom.coordinates[i]);\n            }\n            return total;\n        case \"Point\":\n        case \"MultiPoint\":\n        case \"LineString\":\n        case \"MultiLineString\":\n            return 0;\n    }\n    return 0;\n}\nfunction polygonArea(coords) {\n    var total = 0;\n    if (coords && coords.length > 0) {\n        total += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            total -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return total;\n}\n/**\n * @private\n * Calculate the approximate area of the polygon were it projected onto the earth.\n * Note that this area will be positive if ring is oriented clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for Polygons on a Sphere\",\n * JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007 http://trs-new.jpl.nasa.gov/dspace/handle/2014/40409\n *\n * @param {Array<Array<number>>} coords Ring Coordinates\n * @returns {number} The approximate signed geodesic area of the polygon in square meters.\n */\nfunction ringArea(coords) {\n    var p1;\n    var p2;\n    var p3;\n    var lowerIndex;\n    var middleIndex;\n    var upperIndex;\n    var i;\n    var total = 0;\n    var coordsLength = coords.length;\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) {\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength - 1;\n                upperIndex = 0;\n            }\n            else if (i === coordsLength - 1) {\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            }\n            else {\n                lowerIndex = i;\n                middleIndex = i + 1;\n                upperIndex = i + 2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            total += (rad(p3[0]) - rad(p1[0])) * Math.sin(rad(p2[1]));\n        }\n        total = total * RADIUS * RADIUS / 2;\n    }\n    return total;\n}\nfunction rad(num) {\n    return num * Math.PI / 180;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHR1cmYvYXJlYS9pbmRleC5qcz9jZmM4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIG1ldGFfMSA9IHJlcXVpcmUoXCJAdHVyZi9tZXRhXCIpO1xuLy8gTm90ZTogY2hhbmdlIFJBRElVUyA9PiBlYXJ0aFJhZGl1c1xudmFyIFJBRElVUyA9IDYzNzgxMzc7XG4vKipcbiAqIFRha2VzIG9uZSBvciBtb3JlIGZlYXR1cmVzIGFuZCByZXR1cm5zIHRoZWlyIGFyZWEgaW4gc3F1YXJlIG1ldGVycy5cbiAqXG4gKiBAbmFtZSBhcmVhXG4gKiBAcGFyYW0ge0dlb0pTT059IGdlb2pzb24gaW5wdXQgR2VvSlNPTiBmZWF0dXJlKHMpXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBhcmVhIGluIHNxdWFyZSBtZXRlcnNcbiAqIEBleGFtcGxlXG4gKiB2YXIgcG9seWdvbiA9IHR1cmYucG9seWdvbihbW1sxMjUsIC0xNV0sIFsxMTMsIC0yMl0sIFsxNTQsIC0yN10sIFsxNDQsIC0xNV0sIFsxMjUsIC0xNV1dXSk7XG4gKlxuICogdmFyIGFyZWEgPSB0dXJmLmFyZWEocG9seWdvbik7XG4gKlxuICogLy9hZGRUb01hcFxuICogdmFyIGFkZFRvTWFwID0gW3BvbHlnb25dXG4gKiBwb2x5Z29uLnByb3BlcnRpZXMuYXJlYSA9IGFyZWFcbiAqL1xuZnVuY3Rpb24gYXJlYShnZW9qc29uKSB7XG4gICAgcmV0dXJuIG1ldGFfMS5nZW9tUmVkdWNlKGdlb2pzb24sIGZ1bmN0aW9uICh2YWx1ZSwgZ2VvbSkge1xuICAgICAgICByZXR1cm4gdmFsdWUgKyBjYWxjdWxhdGVBcmVhKGdlb20pO1xuICAgIH0sIDApO1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gYXJlYTtcbi8qKlxuICogQ2FsY3VsYXRlIEFyZWFcbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtHZW9tZXRyeX0gZ2VvbSBHZW9KU09OIEdlb21ldHJpZXNcbiAqIEByZXR1cm5zIHtudW1iZXJ9IGFyZWFcbiAqL1xuZnVuY3Rpb24gY2FsY3VsYXRlQXJlYShnZW9tKSB7XG4gICAgdmFyIHRvdGFsID0gMDtcbiAgICB2YXIgaTtcbiAgICBzd2l0Y2ggKGdlb20udHlwZSkge1xuICAgICAgICBjYXNlIFwiUG9seWdvblwiOlxuICAgICAgICAgICAgcmV0dXJuIHBvbHlnb25BcmVhKGdlb20uY29vcmRpbmF0ZXMpO1xuICAgICAgICBjYXNlIFwiTXVsdGlQb2x5Z29uXCI6XG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgZ2VvbS5jb29yZGluYXRlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHRvdGFsICs9IHBvbHlnb25BcmVhKGdlb20uY29vcmRpbmF0ZXNbaV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRvdGFsO1xuICAgICAgICBjYXNlIFwiUG9pbnRcIjpcbiAgICAgICAgY2FzZSBcIk11bHRpUG9pbnRcIjpcbiAgICAgICAgY2FzZSBcIkxpbmVTdHJpbmdcIjpcbiAgICAgICAgY2FzZSBcIk11bHRpTGluZVN0cmluZ1wiOlxuICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgfVxuICAgIHJldHVybiAwO1xufVxuZnVuY3Rpb24gcG9seWdvbkFyZWEoY29vcmRzKSB7XG4gICAgdmFyIHRvdGFsID0gMDtcbiAgICBpZiAoY29vcmRzICYmIGNvb3Jkcy5sZW5ndGggPiAwKSB7XG4gICAgICAgIHRvdGFsICs9IE1hdGguYWJzKHJpbmdBcmVhKGNvb3Jkc1swXSkpO1xuICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8IGNvb3Jkcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdG90YWwgLT0gTWF0aC5hYnMocmluZ0FyZWEoY29vcmRzW2ldKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRvdGFsO1xufVxuLyoqXG4gKiBAcHJpdmF0ZVxuICogQ2FsY3VsYXRlIHRoZSBhcHByb3hpbWF0ZSBhcmVhIG9mIHRoZSBwb2x5Z29uIHdlcmUgaXQgcHJvamVjdGVkIG9udG8gdGhlIGVhcnRoLlxuICogTm90ZSB0aGF0IHRoaXMgYXJlYSB3aWxsIGJlIHBvc2l0aXZlIGlmIHJpbmcgaXMgb3JpZW50ZWQgY2xvY2t3aXNlLCBvdGhlcndpc2UgaXQgd2lsbCBiZSBuZWdhdGl2ZS5cbiAqXG4gKiBSZWZlcmVuY2U6XG4gKiBSb2JlcnQuIEcuIENoYW1iZXJsYWluIGFuZCBXaWxsaWFtIEguIER1cXVldHRlLCBcIlNvbWUgQWxnb3JpdGhtcyBmb3IgUG9seWdvbnMgb24gYSBTcGhlcmVcIixcbiAqIEpQTCBQdWJsaWNhdGlvbiAwNy0wMywgSmV0IFByb3B1bHNpb25cbiAqIExhYm9yYXRvcnksIFBhc2FkZW5hLCBDQSwgSnVuZSAyMDA3IGh0dHA6Ly90cnMtbmV3LmpwbC5uYXNhLmdvdi9kc3BhY2UvaGFuZGxlLzIwMTQvNDA0MDlcbiAqXG4gKiBAcGFyYW0ge0FycmF5PEFycmF5PG51bWJlcj4+fSBjb29yZHMgUmluZyBDb29yZGluYXRlc1xuICogQHJldHVybnMge251bWJlcn0gVGhlIGFwcHJveGltYXRlIHNpZ25lZCBnZW9kZXNpYyBhcmVhIG9mIHRoZSBwb2x5Z29uIGluIHNxdWFyZSBtZXRlcnMuXG4gKi9cbmZ1bmN0aW9uIHJpbmdBcmVhKGNvb3Jkcykge1xuICAgIHZhciBwMTtcbiAgICB2YXIgcDI7XG4gICAgdmFyIHAzO1xuICAgIHZhciBsb3dlckluZGV4O1xuICAgIHZhciBtaWRkbGVJbmRleDtcbiAgICB2YXIgdXBwZXJJbmRleDtcbiAgICB2YXIgaTtcbiAgICB2YXIgdG90YWwgPSAwO1xuICAgIHZhciBjb29yZHNMZW5ndGggPSBjb29yZHMubGVuZ3RoO1xuICAgIGlmIChjb29yZHNMZW5ndGggPiAyKSB7XG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBjb29yZHNMZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKGkgPT09IGNvb3Jkc0xlbmd0aCAtIDIpIHtcbiAgICAgICAgICAgICAgICBsb3dlckluZGV4ID0gY29vcmRzTGVuZ3RoIC0gMjtcbiAgICAgICAgICAgICAgICBtaWRkbGVJbmRleCA9IGNvb3Jkc0xlbmd0aCAtIDE7XG4gICAgICAgICAgICAgICAgdXBwZXJJbmRleCA9IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChpID09PSBjb29yZHNMZW5ndGggLSAxKSB7XG4gICAgICAgICAgICAgICAgbG93ZXJJbmRleCA9IGNvb3Jkc0xlbmd0aCAtIDE7XG4gICAgICAgICAgICAgICAgbWlkZGxlSW5kZXggPSAwO1xuICAgICAgICAgICAgICAgIHVwcGVySW5kZXggPSAxO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgbG93ZXJJbmRleCA9IGk7XG4gICAgICAgICAgICAgICAgbWlkZGxlSW5kZXggPSBpICsgMTtcbiAgICAgICAgICAgICAgICB1cHBlckluZGV4ID0gaSArIDI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwMSA9IGNvb3Jkc1tsb3dlckluZGV4XTtcbiAgICAgICAgICAgIHAyID0gY29vcmRzW21pZGRsZUluZGV4XTtcbiAgICAgICAgICAgIHAzID0gY29vcmRzW3VwcGVySW5kZXhdO1xuICAgICAgICAgICAgdG90YWwgKz0gKHJhZChwM1swXSkgLSByYWQocDFbMF0pKSAqIE1hdGguc2luKHJhZChwMlsxXSkpO1xuICAgICAgICB9XG4gICAgICAgIHRvdGFsID0gdG90YWwgKiBSQURJVVMgKiBSQURJVVMgLyAyO1xuICAgIH1cbiAgICByZXR1cm4gdG90YWw7XG59XG5mdW5jdGlvbiByYWQobnVtKSB7XG4gICAgcmV0dXJuIG51bSAqIE1hdGguUEkgLyAxODA7XG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9AdHVyZi9hcmVhL2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAzNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///35\n");

/***/ }),
/* 36 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("var DragMixin = {\n  enableLayerDrag: function enableLayerDrag() {\n    if (this._layer instanceof L.Marker) {\n      this._layer.dragging.enable();\n\n      return;\n    } // temporary coord variable for delta calculation\n\n\n    this._tempDragCoord = null; // add CSS class\n\n    var el = this._layer._path ? this._layer._path : this._layer._renderer._container;\n    L.DomUtil.addClass(el, 'leaflet-pm-draggable');\n    this._originalMapDragState = this._layer._map.dragging._enabled; // can we reliably save the map's draggable state?\n    // (if the mouse up event happens outside the container, then the map can become undraggable)\n\n    this._safeToCacheDragState = true; // add mousedown event to trigger drag\n\n    this._layer.on('mousedown', this._dragMixinOnMouseDown, this);\n  },\n  disableLayerDrag: function disableLayerDrag() {\n    if (this._layer instanceof L.Marker) {\n      this._layer.dragging.disable();\n\n      return;\n    } // remove CSS class\n\n\n    var el = this._layer._path ? this._layer._path : this._layer._renderer._container;\n    L.DomUtil.removeClass(el, 'leaflet-pm-draggable'); // no longer save the drag state\n\n    this._safeToCacheDragState = false; // disable mousedown event\n\n    this._layer.off('mousedown', this._dragMixinOnMouseDown, this);\n  },\n  _dragMixinOnMouseUp: function _dragMixinOnMouseUp() {\n    var _this = this;\n\n    var el = this._layer._path ? this._layer._path : this._layer._renderer._container; // re-enable map drag\n\n    if (this._originalMapDragState) {\n      this._layer._map.dragging.enable();\n    } // if mouseup event fired, it's safe to cache the map draggable state on the next mouse down\n\n\n    this._safeToCacheDragState = true; // clear up mousemove event\n\n    this._layer._map.off('mousemove', this._dragMixinOnMouseMove, this); // clear up mouseup event\n\n\n    this._layer.off('mouseup', this._dragMixinOnMouseUp, this); // if no drag happened, don't do anything\n\n\n    if (!this._dragging) {\n      return false;\n    } // timeout to prevent click event after drag :-/\n    // TODO: do it better as soon as leaflet has a way to do it better :-)\n\n\n    window.setTimeout(function () {\n      // set state\n      _this._dragging = false;\n      L.DomUtil.removeClass(el, 'leaflet-pm-dragging'); // fire pm:dragend event\n\n      _this._layer.fire('pm:dragend'); // fire edit\n\n\n      _this._fireEdit();\n    }, 10);\n    return true;\n  },\n  _dragMixinOnMouseMove: function _dragMixinOnMouseMove(e) {\n    var el = this._layer._path ? this._layer._path : this._layer._renderer._container;\n\n    if (!this._dragging) {\n      // set state\n      this._dragging = true;\n      L.DomUtil.addClass(el, 'leaflet-pm-dragging'); // bring it to front to prevent drag interception\n\n      this._layer.bringToFront(); // disbale map drag\n\n\n      if (this._originalMapDragState) {\n        this._layer._map.dragging.disable();\n      } // fire pm:dragstart event\n\n\n      this._layer.fire('pm:dragstart');\n    }\n\n    this._onLayerDrag(e);\n  },\n  _dragMixinOnMouseDown: function _dragMixinOnMouseDown(e) {\n    // cancel if mouse button is NOT the left button\n    if (e.originalEvent.button > 0) {\n      return;\n    } // save current map dragging state\n\n\n    if (this._safeToCacheDragState) {\n      this._originalMapDragState = this._layer._map.dragging._enabled; // don't cache the state again until another mouse up is registered\n\n      this._safeToCacheDragState = false;\n    } // save for delta calculation\n\n\n    this._tempDragCoord = e.latlng;\n\n    this._layer.on('mouseup', this._dragMixinOnMouseUp, this); // listen to mousemove on map (instead of polygon),\n    // otherwise fast mouse movements stop the drag\n\n\n    this._layer._map.on('mousemove', this._dragMixinOnMouseMove, this);\n  },\n  dragging: function dragging() {\n    return this._dragging;\n  },\n  _onLayerDrag: function _onLayerDrag(e) {\n    // latLng of mouse event\n    var latlng = e.latlng; // delta coords (how far was dragged)\n\n    var deltaLatLng = {\n      lat: latlng.lat - this._tempDragCoord.lat,\n      lng: latlng.lng - this._tempDragCoord.lng\n    }; // move the coordinates by the delta\n\n    var moveCoords = function moveCoords(coords) {\n      return (// alter the coordinates\n        coords.map(function (currentLatLng) {\n          if (Array.isArray(currentLatLng)) {\n            // do this recursively as coords might be nested\n            return moveCoords(currentLatLng);\n          } // move the coord and return it\n\n\n          return {\n            lat: currentLatLng.lat + deltaLatLng.lat,\n            lng: currentLatLng.lng + deltaLatLng.lng\n          };\n        })\n      );\n    };\n\n    var moveCoord = function moveCoord(coord) {\n      return {\n        lat: coord.lat + deltaLatLng.lat,\n        lng: coord.lng + deltaLatLng.lng\n      };\n    };\n\n    if (this._layer instanceof L.CircleMarker) {\n      // create the new coordinates array\n      var newCoords = moveCoord(this._layer.getLatLng()); // set new coordinates and redraw\n\n      this._layer.setLatLng(newCoords).redraw();\n    } else {\n      // create the new coordinates array\n      var _newCoords = moveCoords(this._layer.getLatLngs()); // set new coordinates and redraw\n\n\n      this._layer.setLatLngs(_newCoords).redraw();\n    } // save current latlng for next delta calculation\n\n\n    this._tempDragCoord = latlng; // fire pm:dragstart event\n\n    this._layer.fire('pm:drag');\n  }\n};\n/* harmony default export */ __webpack_exports__[\"a\"] = (DragMixin);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///36\n");

/***/ }),
/* 37 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__L_PM_Edit__ = __webpack_require__(1);\n // LayerGroup doesn't inherit from L.PM.Edit because it's just calling L.PM.Edit.Poly\n// (which inherits from L.PM.Edit) for each layer,\n// so it's not really a parent class\n\n__WEBPACK_IMPORTED_MODULE_0__L_PM_Edit__[\"a\" /* default */].LayerGroup = L.Class.extend({\n  initialize: function initialize(layerGroup) {\n    var _this = this;\n\n    this._layerGroup = layerGroup;\n    this._layers = this.findLayers(); // init all layers of the group\n\n    this._layers.forEach(function (layer) {\n      return _this._initLayer(layer);\n    }); // if a new layer is added to the group, reinitialize\n    // This only works for FeatureGroups, not LayerGroups\n    // https://github.com/Leaflet/Leaflet/issues/4861\n\n\n    this._layerGroup.on('layeradd', function (e) {\n      if (e.target._pmTempLayer) {\n        return;\n      }\n\n      _this._layers = _this.findLayers(); // init the newly added layer\n\n      if (e.layer.pm) {\n        _this._initLayer(e.layer);\n      } // if editing was already enabled for this group, enable it again\n      // so the new layers are enabled\n\n\n      if (e.target.pm.enabled()) {\n        _this.enable(_this.getOptions());\n      }\n    });\n  },\n  findLayers: function findLayers() {\n    // get all layers of the layer group\n    var layers = this._layerGroup.getLayers(); // filter out layers that are no layerGroup\n\n\n    layers = layers.filter(function (layer) {\n      return !(layer instanceof L.LayerGroup);\n    }); // filter out layers that don't have leaflet.pm\n\n    layers = layers.filter(function (layer) {\n      return !!layer.pm;\n    }); // filter out everything that's leaflet.pm specific temporary stuff\n\n    layers = layers.filter(function (layer) {\n      return !layer._pmTempLayer;\n    }); // return them\n\n    return layers;\n  },\n  _initLayer: function _initLayer(layer) {\n    var _this2 = this;\n\n    // available events\n    var availableEvents = ['pm:edit', 'pm:update', 'pm:remove', 'pm:dragstart', 'pm:drag', 'pm:dragend', 'pm:snap', 'pm:unsnap', 'pm:cut', 'pm:intersect', 'pm:raiseMarkers', 'pm:markerdragend', 'pm:markerdragstart', 'pm:vertexadded', 'pm:vertexremoved', 'pm:centerplaced']; // listen to the events of the layers in this group\n\n    availableEvents.forEach(function (event) {\n      layer.on(event, _this2._fireEvent, _this2);\n    }); // add reference for the group to each layer inside said group\n\n    layer.pm._layerGroup = this._layerGroup;\n  },\n  _fireEvent: function _fireEvent(e) {\n    this._layerGroup.fireEvent(e.type, e);\n  },\n  toggleEdit: function toggleEdit(options) {\n    this._options = options;\n\n    this._layers.forEach(function (layer) {\n      layer.pm.toggleEdit(options);\n    });\n  },\n  enable: function enable(options) {\n    this._options = options;\n\n    this._layers.forEach(function (layer) {\n      layer.pm.enable(options);\n    });\n  },\n  disable: function disable() {\n    this._layers.forEach(function (layer) {\n      layer.pm.disable();\n    });\n  },\n  enabled: function enabled() {\n    var enabled = this._layers.find(function (layer) {\n      return layer.pm.enabled();\n    });\n\n    return !!enabled;\n  },\n  dragging: function dragging() {\n    var dragging = this._layers.find(function (layer) {\n      return layer.pm.dragging();\n    });\n\n    return !!dragging;\n  },\n  getOptions: function getOptions() {\n    return this._options;\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvRWRpdC9MLlBNLkVkaXQuTGF5ZXJHcm91cC5qcz9hMWYzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFZGl0IGZyb20gJy4vTC5QTS5FZGl0JzsgLy8gTGF5ZXJHcm91cCBkb2Vzbid0IGluaGVyaXQgZnJvbSBMLlBNLkVkaXQgYmVjYXVzZSBpdCdzIGp1c3QgY2FsbGluZyBMLlBNLkVkaXQuUG9seVxuLy8gKHdoaWNoIGluaGVyaXRzIGZyb20gTC5QTS5FZGl0KSBmb3IgZWFjaCBsYXllcixcbi8vIHNvIGl0J3Mgbm90IHJlYWxseSBhIHBhcmVudCBjbGFzc1xuXG5FZGl0LkxheWVyR3JvdXAgPSBMLkNsYXNzLmV4dGVuZCh7XG4gIGluaXRpYWxpemU6IGZ1bmN0aW9uIGluaXRpYWxpemUobGF5ZXJHcm91cCkge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICB0aGlzLl9sYXllckdyb3VwID0gbGF5ZXJHcm91cDtcbiAgICB0aGlzLl9sYXllcnMgPSB0aGlzLmZpbmRMYXllcnMoKTsgLy8gaW5pdCBhbGwgbGF5ZXJzIG9mIHRoZSBncm91cFxuXG4gICAgdGhpcy5fbGF5ZXJzLmZvckVhY2goZnVuY3Rpb24gKGxheWVyKSB7XG4gICAgICByZXR1cm4gX3RoaXMuX2luaXRMYXllcihsYXllcik7XG4gICAgfSk7IC8vIGlmIGEgbmV3IGxheWVyIGlzIGFkZGVkIHRvIHRoZSBncm91cCwgcmVpbml0aWFsaXplXG4gICAgLy8gVGhpcyBvbmx5IHdvcmtzIGZvciBGZWF0dXJlR3JvdXBzLCBub3QgTGF5ZXJHcm91cHNcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vTGVhZmxldC9MZWFmbGV0L2lzc3Vlcy80ODYxXG5cblxuICAgIHRoaXMuX2xheWVyR3JvdXAub24oJ2xheWVyYWRkJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgIGlmIChlLnRhcmdldC5fcG1UZW1wTGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBfdGhpcy5fbGF5ZXJzID0gX3RoaXMuZmluZExheWVycygpOyAvLyBpbml0IHRoZSBuZXdseSBhZGRlZCBsYXllclxuXG4gICAgICBpZiAoZS5sYXllci5wbSkge1xuICAgICAgICBfdGhpcy5faW5pdExheWVyKGUubGF5ZXIpO1xuICAgICAgfSAvLyBpZiBlZGl0aW5nIHdhcyBhbHJlYWR5IGVuYWJsZWQgZm9yIHRoaXMgZ3JvdXAsIGVuYWJsZSBpdCBhZ2FpblxuICAgICAgLy8gc28gdGhlIG5ldyBsYXllcnMgYXJlIGVuYWJsZWRcblxuXG4gICAgICBpZiAoZS50YXJnZXQucG0uZW5hYmxlZCgpKSB7XG4gICAgICAgIF90aGlzLmVuYWJsZShfdGhpcy5nZXRPcHRpb25zKCkpO1xuICAgICAgfVxuICAgIH0pO1xuICB9LFxuICBmaW5kTGF5ZXJzOiBmdW5jdGlvbiBmaW5kTGF5ZXJzKCkge1xuICAgIC8vIGdldCBhbGwgbGF5ZXJzIG9mIHRoZSBsYXllciBncm91cFxuICAgIHZhciBsYXllcnMgPSB0aGlzLl9sYXllckdyb3VwLmdldExheWVycygpOyAvLyBmaWx0ZXIgb3V0IGxheWVycyB0aGF0IGFyZSBubyBsYXllckdyb3VwXG5cblxuICAgIGxheWVycyA9IGxheWVycy5maWx0ZXIoZnVuY3Rpb24gKGxheWVyKSB7XG4gICAgICByZXR1cm4gIShsYXllciBpbnN0YW5jZW9mIEwuTGF5ZXJHcm91cCk7XG4gICAgfSk7IC8vIGZpbHRlciBvdXQgbGF5ZXJzIHRoYXQgZG9uJ3QgaGF2ZSBsZWFmbGV0LnBtXG5cbiAgICBsYXllcnMgPSBsYXllcnMuZmlsdGVyKGZ1bmN0aW9uIChsYXllcikge1xuICAgICAgcmV0dXJuICEhbGF5ZXIucG07XG4gICAgfSk7IC8vIGZpbHRlciBvdXQgZXZlcnl0aGluZyB0aGF0J3MgbGVhZmxldC5wbSBzcGVjaWZpYyB0ZW1wb3Jhcnkgc3R1ZmZcblxuICAgIGxheWVycyA9IGxheWVycy5maWx0ZXIoZnVuY3Rpb24gKGxheWVyKSB7XG4gICAgICByZXR1cm4gIWxheWVyLl9wbVRlbXBMYXllcjtcbiAgICB9KTsgLy8gcmV0dXJuIHRoZW1cblxuICAgIHJldHVybiBsYXllcnM7XG4gIH0sXG4gIF9pbml0TGF5ZXI6IGZ1bmN0aW9uIF9pbml0TGF5ZXIobGF5ZXIpIHtcbiAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgIC8vIGF2YWlsYWJsZSBldmVudHNcbiAgICB2YXIgYXZhaWxhYmxlRXZlbnRzID0gWydwbTplZGl0JywgJ3BtOnVwZGF0ZScsICdwbTpyZW1vdmUnLCAncG06ZHJhZ3N0YXJ0JywgJ3BtOmRyYWcnLCAncG06ZHJhZ2VuZCcsICdwbTpzbmFwJywgJ3BtOnVuc25hcCcsICdwbTpjdXQnLCAncG06aW50ZXJzZWN0JywgJ3BtOnJhaXNlTWFya2VycycsICdwbTptYXJrZXJkcmFnZW5kJywgJ3BtOm1hcmtlcmRyYWdzdGFydCcsICdwbTp2ZXJ0ZXhhZGRlZCcsICdwbTp2ZXJ0ZXhyZW1vdmVkJywgJ3BtOmNlbnRlcnBsYWNlZCddOyAvLyBsaXN0ZW4gdG8gdGhlIGV2ZW50cyBvZiB0aGUgbGF5ZXJzIGluIHRoaXMgZ3JvdXBcblxuICAgIGF2YWlsYWJsZUV2ZW50cy5mb3JFYWNoKGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgbGF5ZXIub24oZXZlbnQsIF90aGlzMi5fZmlyZUV2ZW50LCBfdGhpczIpO1xuICAgIH0pOyAvLyBhZGQgcmVmZXJlbmNlIGZvciB0aGUgZ3JvdXAgdG8gZWFjaCBsYXllciBpbnNpZGUgc2FpZCBncm91cFxuXG4gICAgbGF5ZXIucG0uX2xheWVyR3JvdXAgPSB0aGlzLl9sYXllckdyb3VwO1xuICB9LFxuICBfZmlyZUV2ZW50OiBmdW5jdGlvbiBfZmlyZUV2ZW50KGUpIHtcbiAgICB0aGlzLl9sYXllckdyb3VwLmZpcmVFdmVudChlLnR5cGUsIGUpO1xuICB9LFxuICB0b2dnbGVFZGl0OiBmdW5jdGlvbiB0b2dnbGVFZGl0KG9wdGlvbnMpIHtcbiAgICB0aGlzLl9vcHRpb25zID0gb3B0aW9ucztcblxuICAgIHRoaXMuX2xheWVycy5mb3JFYWNoKGZ1bmN0aW9uIChsYXllcikge1xuICAgICAgbGF5ZXIucG0udG9nZ2xlRWRpdChvcHRpb25zKTtcbiAgICB9KTtcbiAgfSxcbiAgZW5hYmxlOiBmdW5jdGlvbiBlbmFibGUob3B0aW9ucykge1xuICAgIHRoaXMuX29wdGlvbnMgPSBvcHRpb25zO1xuXG4gICAgdGhpcy5fbGF5ZXJzLmZvckVhY2goZnVuY3Rpb24gKGxheWVyKSB7XG4gICAgICBsYXllci5wbS5lbmFibGUob3B0aW9ucyk7XG4gICAgfSk7XG4gIH0sXG4gIGRpc2FibGU6IGZ1bmN0aW9uIGRpc2FibGUoKSB7XG4gICAgdGhpcy5fbGF5ZXJzLmZvckVhY2goZnVuY3Rpb24gKGxheWVyKSB7XG4gICAgICBsYXllci5wbS5kaXNhYmxlKCk7XG4gICAgfSk7XG4gIH0sXG4gIGVuYWJsZWQ6IGZ1bmN0aW9uIGVuYWJsZWQoKSB7XG4gICAgdmFyIGVuYWJsZWQgPSB0aGlzLl9sYXllcnMuZmluZChmdW5jdGlvbiAobGF5ZXIpIHtcbiAgICAgIHJldHVybiBsYXllci5wbS5lbmFibGVkKCk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gISFlbmFibGVkO1xuICB9LFxuICBkcmFnZ2luZzogZnVuY3Rpb24gZHJhZ2dpbmcoKSB7XG4gICAgdmFyIGRyYWdnaW5nID0gdGhpcy5fbGF5ZXJzLmZpbmQoZnVuY3Rpb24gKGxheWVyKSB7XG4gICAgICByZXR1cm4gbGF5ZXIucG0uZHJhZ2dpbmcoKTtcbiAgICB9KTtcblxuICAgIHJldHVybiAhIWRyYWdnaW5nO1xuICB9LFxuICBnZXRPcHRpb25zOiBmdW5jdGlvbiBnZXRPcHRpb25zKCkge1xuICAgIHJldHVybiB0aGlzLl9vcHRpb25zO1xuICB9XG59KTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9qcy9FZGl0L0wuUE0uRWRpdC5MYXllckdyb3VwLmpzXG4vLyBtb2R1bGUgaWQgPSAzN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///37\n");

/***/ }),
/* 38 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__L_PM_Edit__ = __webpack_require__(1);\n\n__WEBPACK_IMPORTED_MODULE_0__L_PM_Edit__[\"a\" /* default */].Marker = __WEBPACK_IMPORTED_MODULE_0__L_PM_Edit__[\"a\" /* default */].extend({\n  initialize: function initialize(layer) {\n    // layer is a marker in this case :-)\n    this._layer = layer;\n    this._enabled = false; // register dragend event e.g. to fire pm:edit\n\n    this._layer.on('dragend', this._onDragEnd, this);\n  },\n  toggleEdit: function toggleEdit(options) {\n    if (!this.enabled()) {\n      this.enable(options);\n    } else {\n      this.disable();\n    }\n  },\n  enable: function enable() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      draggable: true,\n      snappable: true\n    };\n    L.Util.setOptions(this, options);\n    this._map = this._layer._map;\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this._enabled = true; // enable removal for the marker\n\n    if (!this.options.preventMarkerRemoval) {\n      this._layer.on('contextmenu', this._removeMarker, this);\n    } // enable dragging and removal for the marker\n\n\n    if (this.options.draggable) {\n      this._layer.dragging.enable();\n    } // enable snapping\n\n\n    if (this.options.snappable) {\n      this._initSnappableMarkers();\n    }\n  },\n  enabled: function enabled() {\n    return this._enabled;\n  },\n  disable: function disable() {\n    this._enabled = false; // disable dragging and removal for the marker\n\n    if (this._layer.dragging) {\n      this._layer.dragging.disable();\n    }\n\n    this._layer.off('contextmenu', this._removeMarker, this);\n\n    if (this._layerEdited) {\n      this._layer.fire('pm:update', {});\n    }\n\n    this._layerEdited = false;\n  },\n  _removeMarker: function _removeMarker(e) {\n    var marker = e.target;\n    marker.remove(); // TODO: find out why this is fired manually, shouldn't it be catched by L.PM.Map 'layerremove'?\n\n    marker.fire('pm:remove');\n  },\n  _onDragEnd: function _onDragEnd(e) {\n    var marker = e.target; // fire the pm:edit event and pass shape and marker\n\n    marker.fire('pm:edit');\n    this._layerEdited = true;\n  },\n  // overwrite initSnappableMarkers from Snapping.js Mixin\n  _initSnappableMarkers: function _initSnappableMarkers() {\n    var marker = this._layer;\n    this.options.snapDistance = this.options.snapDistance || 30;\n    marker.off('drag', this._handleSnapping, this);\n    marker.on('drag', this._handleSnapping, this);\n    marker.off('dragend', this._cleanupSnapping, this);\n    marker.on('dragend', this._cleanupSnapping, this);\n    marker.off('pm:dragstart', this._unsnap, this);\n    marker.on('pm:dragstart', this._unsnap, this);\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvRWRpdC9MLlBNLkVkaXQuTWFya2VyLmpzP2QwOTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEVkaXQgZnJvbSAnLi9MLlBNLkVkaXQnO1xuRWRpdC5NYXJrZXIgPSBFZGl0LmV4dGVuZCh7XG4gIGluaXRpYWxpemU6IGZ1bmN0aW9uIGluaXRpYWxpemUobGF5ZXIpIHtcbiAgICAvLyBsYXllciBpcyBhIG1hcmtlciBpbiB0aGlzIGNhc2UgOi0pXG4gICAgdGhpcy5fbGF5ZXIgPSBsYXllcjtcbiAgICB0aGlzLl9lbmFibGVkID0gZmFsc2U7IC8vIHJlZ2lzdGVyIGRyYWdlbmQgZXZlbnQgZS5nLiB0byBmaXJlIHBtOmVkaXRcblxuICAgIHRoaXMuX2xheWVyLm9uKCdkcmFnZW5kJywgdGhpcy5fb25EcmFnRW5kLCB0aGlzKTtcbiAgfSxcbiAgdG9nZ2xlRWRpdDogZnVuY3Rpb24gdG9nZ2xlRWRpdChvcHRpb25zKSB7XG4gICAgaWYgKCF0aGlzLmVuYWJsZWQoKSkge1xuICAgICAgdGhpcy5lbmFibGUob3B0aW9ucyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZGlzYWJsZSgpO1xuICAgIH1cbiAgfSxcbiAgZW5hYmxlOiBmdW5jdGlvbiBlbmFibGUoKSB7XG4gICAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHtcbiAgICAgIGRyYWdnYWJsZTogdHJ1ZSxcbiAgICAgIHNuYXBwYWJsZTogdHJ1ZVxuICAgIH07XG4gICAgTC5VdGlsLnNldE9wdGlvbnModGhpcywgb3B0aW9ucyk7XG4gICAgdGhpcy5fbWFwID0gdGhpcy5fbGF5ZXIuX21hcDtcblxuICAgIGlmICh0aGlzLmVuYWJsZWQoKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuX2VuYWJsZWQgPSB0cnVlOyAvLyBlbmFibGUgcmVtb3ZhbCBmb3IgdGhlIG1hcmtlclxuXG4gICAgaWYgKCF0aGlzLm9wdGlvbnMucHJldmVudE1hcmtlclJlbW92YWwpIHtcbiAgICAgIHRoaXMuX2xheWVyLm9uKCdjb250ZXh0bWVudScsIHRoaXMuX3JlbW92ZU1hcmtlciwgdGhpcyk7XG4gICAgfSAvLyBlbmFibGUgZHJhZ2dpbmcgYW5kIHJlbW92YWwgZm9yIHRoZSBtYXJrZXJcblxuXG4gICAgaWYgKHRoaXMub3B0aW9ucy5kcmFnZ2FibGUpIHtcbiAgICAgIHRoaXMuX2xheWVyLmRyYWdnaW5nLmVuYWJsZSgpO1xuICAgIH0gLy8gZW5hYmxlIHNuYXBwaW5nXG5cblxuICAgIGlmICh0aGlzLm9wdGlvbnMuc25hcHBhYmxlKSB7XG4gICAgICB0aGlzLl9pbml0U25hcHBhYmxlTWFya2VycygpO1xuICAgIH1cbiAgfSxcbiAgZW5hYmxlZDogZnVuY3Rpb24gZW5hYmxlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5fZW5hYmxlZDtcbiAgfSxcbiAgZGlzYWJsZTogZnVuY3Rpb24gZGlzYWJsZSgpIHtcbiAgICB0aGlzLl9lbmFibGVkID0gZmFsc2U7IC8vIGRpc2FibGUgZHJhZ2dpbmcgYW5kIHJlbW92YWwgZm9yIHRoZSBtYXJrZXJcblxuICAgIGlmICh0aGlzLl9sYXllci5kcmFnZ2luZykge1xuICAgICAgdGhpcy5fbGF5ZXIuZHJhZ2dpbmcuZGlzYWJsZSgpO1xuICAgIH1cblxuICAgIHRoaXMuX2xheWVyLm9mZignY29udGV4dG1lbnUnLCB0aGlzLl9yZW1vdmVNYXJrZXIsIHRoaXMpO1xuXG4gICAgaWYgKHRoaXMuX2xheWVyRWRpdGVkKSB7XG4gICAgICB0aGlzLl9sYXllci5maXJlKCdwbTp1cGRhdGUnLCB7fSk7XG4gICAgfVxuXG4gICAgdGhpcy5fbGF5ZXJFZGl0ZWQgPSBmYWxzZTtcbiAgfSxcbiAgX3JlbW92ZU1hcmtlcjogZnVuY3Rpb24gX3JlbW92ZU1hcmtlcihlKSB7XG4gICAgdmFyIG1hcmtlciA9IGUudGFyZ2V0O1xuICAgIG1hcmtlci5yZW1vdmUoKTsgLy8gVE9ETzogZmluZCBvdXQgd2h5IHRoaXMgaXMgZmlyZWQgbWFudWFsbHksIHNob3VsZG4ndCBpdCBiZSBjYXRjaGVkIGJ5IEwuUE0uTWFwICdsYXllcnJlbW92ZSc/XG5cbiAgICBtYXJrZXIuZmlyZSgncG06cmVtb3ZlJyk7XG4gIH0sXG4gIF9vbkRyYWdFbmQ6IGZ1bmN0aW9uIF9vbkRyYWdFbmQoZSkge1xuICAgIHZhciBtYXJrZXIgPSBlLnRhcmdldDsgLy8gZmlyZSB0aGUgcG06ZWRpdCBldmVudCBhbmQgcGFzcyBzaGFwZSBhbmQgbWFya2VyXG5cbiAgICBtYXJrZXIuZmlyZSgncG06ZWRpdCcpO1xuICAgIHRoaXMuX2xheWVyRWRpdGVkID0gdHJ1ZTtcbiAgfSxcbiAgLy8gb3ZlcndyaXRlIGluaXRTbmFwcGFibGVNYXJrZXJzIGZyb20gU25hcHBpbmcuanMgTWl4aW5cbiAgX2luaXRTbmFwcGFibGVNYXJrZXJzOiBmdW5jdGlvbiBfaW5pdFNuYXBwYWJsZU1hcmtlcnMoKSB7XG4gICAgdmFyIG1hcmtlciA9IHRoaXMuX2xheWVyO1xuICAgIHRoaXMub3B0aW9ucy5zbmFwRGlzdGFuY2UgPSB0aGlzLm9wdGlvbnMuc25hcERpc3RhbmNlIHx8IDMwO1xuICAgIG1hcmtlci5vZmYoJ2RyYWcnLCB0aGlzLl9oYW5kbGVTbmFwcGluZywgdGhpcyk7XG4gICAgbWFya2VyLm9uKCdkcmFnJywgdGhpcy5faGFuZGxlU25hcHBpbmcsIHRoaXMpO1xuICAgIG1hcmtlci5vZmYoJ2RyYWdlbmQnLCB0aGlzLl9jbGVhbnVwU25hcHBpbmcsIHRoaXMpO1xuICAgIG1hcmtlci5vbignZHJhZ2VuZCcsIHRoaXMuX2NsZWFudXBTbmFwcGluZywgdGhpcyk7XG4gICAgbWFya2VyLm9mZigncG06ZHJhZ3N0YXJ0JywgdGhpcy5fdW5zbmFwLCB0aGlzKTtcbiAgICBtYXJrZXIub24oJ3BtOmRyYWdzdGFydCcsIHRoaXMuX3Vuc25hcCwgdGhpcyk7XG4gIH1cbn0pO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL0VkaXQvTC5QTS5FZGl0Lk1hcmtlci5qc1xuLy8gbW9kdWxlIGlkID0gMzhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///38\n");

/***/ }),
/* 39 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_kinks__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__turf_kinks___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__turf_kinks__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_get__ = __webpack_require__(40);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_get___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lodash_get__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__L_PM_Edit__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__L_PM_Utils__ = __webpack_require__(13);\n\n\n\n // Shit's getting complicated in here with Multipolygon Support. So here's a quick note about it:\n// Multipolygons with holes means lots of nested, multidimensional arrays.\n// In order to find a value inside such an array you need a path to adress it directly.\n// Example: var arr = [[['a', 'b'], ['c']]];\n// The indexPath to 'b' is [0, 0, 1]. The indexPath to 'c' is [0, 1, 0].\n// So I can get 'b' with: arr[0][0][1].\n// Got it? Now you know what is meant when you read \"indexPath\" around here. Have fun 👍\n\n__WEBPACK_IMPORTED_MODULE_2__L_PM_Edit__[\"a\" /* default */].Line = __WEBPACK_IMPORTED_MODULE_2__L_PM_Edit__[\"a\" /* default */].extend({\n  initialize: function initialize(layer) {\n    this._layer = layer;\n    this._enabled = false;\n  },\n  toggleEdit: function toggleEdit(options) {\n    if (!this.enabled()) {\n      this.enable(options);\n    } else {\n      this.disable();\n    }\n  },\n  enable: function enable(options) {\n    L.Util.setOptions(this, options);\n    this._map = this._layer._map; // cancel when map isn't available, this happens when the polygon is removed before this fires\n\n    if (!this._map) {\n      return;\n    }\n\n    if (!this.enabled()) {\n      // if it was already enabled, disable first\n      // we don't block enabling again because new options might be passed\n      this.disable();\n    } // change state\n\n\n    this._enabled = true; // init markers\n\n    this._initMarkers(); // if polygon gets removed from map, disable edit mode\n\n\n    this._layer.on('remove', this._onLayerRemove, this);\n\n    if (!this.options.allowSelfIntersection) {\n      this._layer.on('pm:vertexremoved', this._handleSelfIntersectionOnVertexRemoval, this);\n    }\n\n    if (!this.options.allowSelfIntersection) {\n      if (!this.cachedColor) {\n        this.cachedColor = this._layer.options.color;\n      }\n\n      this.isRed = false;\n\n      this._handleLayerStyle();\n    }\n  },\n  _onLayerRemove: function _onLayerRemove(e) {\n    this.disable(e.target);\n  },\n  enabled: function enabled() {\n    return this._enabled;\n  },\n  disable: function disable() {\n    var poly = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._layer;\n\n    // if it's not enabled, it doesn't need to be disabled\n    if (!this.enabled()) {\n      return false;\n    } // prevent disabling if polygon is being dragged\n\n\n    if (poly.pm._dragging) {\n      return false;\n    }\n\n    poly.pm._enabled = false;\n\n    poly.pm._markerGroup.clearLayers(); // clean up draggable\n\n\n    poly.off('mousedown');\n    poly.off('mouseup'); // remove onRemove listener\n\n    this._layer.off('remove', this._onLayerRemove, this);\n\n    if (!this.options.allowSelfIntersection) {\n      this._layer.off('pm:vertexremoved', this._handleSelfIntersectionOnVertexRemoval);\n    } // remove draggable class\n\n\n    var el = poly._path ? poly._path : this._layer._renderer._container;\n    L.DomUtil.removeClass(el, 'leaflet-pm-draggable'); // remove invalid class if layer has self intersection\n\n    if (this.hasSelfIntersection()) {\n      L.DomUtil.removeClass(el, 'leaflet-pm-invalid');\n    }\n\n    if (this._layerEdited) {\n      this._layer.fire('pm:update', {});\n    }\n\n    this._layerEdited = false;\n    return true;\n  },\n  hasSelfIntersection: function hasSelfIntersection() {\n    // check for self intersection of the layer and return true/false\n    var selfIntersection = __WEBPACK_IMPORTED_MODULE_0__turf_kinks___default()(this._layer.toGeoJSON(15));\n    return selfIntersection.features.length > 0;\n  },\n  _handleSelfIntersectionOnVertexRemoval: function _handleSelfIntersectionOnVertexRemoval() {\n    // check for selfintersection again (mainly to reset the style)\n    this._handleLayerStyle(true);\n\n    if (this.hasSelfIntersection()) {\n      // reset coordinates\n      this._layer.setLatLngs(this._coordsBeforeEdit);\n\n      this._coordsBeforeEdit = null; // re-enable markers for the new coords\n\n      this._initMarkers();\n    }\n  },\n  _handleLayerStyle: function _handleLayerStyle(flash) {\n    var _this = this;\n\n    var layer = this._layer;\n\n    if (this.hasSelfIntersection()) {\n      if (this.isRed) {\n        return;\n      } // if it does self-intersect, mark or flash it red\n\n\n      if (flash) {\n        layer.setStyle({\n          color: 'red'\n        });\n        this.isRed = true;\n        window.setTimeout(function () {\n          layer.setStyle({\n            color: _this.cachedColor\n          });\n          _this.isRed = false;\n        }, 200);\n      } else {\n        layer.setStyle({\n          color: 'red'\n        });\n        this.isRed = true;\n      } // fire intersect event\n\n\n      this._layer.fire('pm:intersect', {\n        intersection: __WEBPACK_IMPORTED_MODULE_0__turf_kinks___default()(this._layer.toGeoJSON(15))\n      });\n    } else {\n      // if not, reset the style to the default color\n      layer.setStyle({\n        color: this.cachedColor\n      });\n      this.isRed = false;\n    }\n  },\n  _initMarkers: function _initMarkers() {\n    var _this2 = this;\n\n    var map = this._map;\n\n    var coords = this._layer.getLatLngs(); // cleanup old ones first\n\n\n    if (this._markerGroup) {\n      this._markerGroup.clearLayers();\n    } // add markerGroup to map, markerGroup includes regular and middle markers\n\n\n    this._markerGroup = new L.LayerGroup();\n    this._markerGroup._pmTempLayer = true;\n    map.addLayer(this._markerGroup); // handle coord-rings (outer, inner, etc)\n\n    var handleRing = function handleRing(coordsArr) {\n      // if there is another coords ring, go a level deep and do this again\n      if (Array.isArray(coordsArr[0])) {\n        return coordsArr.map(handleRing, _this2);\n      } // the marker array, it includes only the markers of vertexes (no middle markers)\n\n\n      var ringArr = coordsArr.map(_this2._createMarker, _this2); // create small markers in the middle of the regular markers\n\n      coordsArr.map(function (v, k) {\n        // find the next index fist\n        var nextIndex = _this2.isPolygon() ? (k + 1) % coordsArr.length : k + 1; // create the marker\n\n        return _this2._createMiddleMarker(ringArr[k], ringArr[nextIndex]);\n      });\n      return ringArr;\n    }; // create markers\n\n\n    this._markers = handleRing(coords);\n\n    if (this.options.snappable) {\n      this._initSnappableMarkers();\n    }\n  },\n  // creates initial markers for coordinates\n  _createMarker: function _createMarker(latlng) {\n    var marker = new L.Marker(latlng, {\n      draggable: true,\n      icon: L.divIcon({\n        className: 'marker-icon'\n      })\n    });\n    marker._pmTempLayer = true;\n    marker.on('dragstart', this._onMarkerDragStart, this);\n    marker.on('move', this._onMarkerDrag, this);\n    marker.on('dragend', this._onMarkerDragEnd, this);\n\n    if (!this.options.preventMarkerRemoval) {\n      marker.on('contextmenu', this._removeMarker, this);\n    }\n\n    this._markerGroup.addLayer(marker);\n\n    return marker;\n  },\n  // creates the middle markes between coordinates\n  _createMiddleMarker: function _createMiddleMarker(leftM, rightM) {\n    var _this3 = this;\n\n    // cancel if there are no two markers\n    if (!leftM || !rightM) {\n      return false;\n    }\n\n    var latlng = __WEBPACK_IMPORTED_MODULE_3__L_PM_Utils__[\"a\" /* default */].calcMiddleLatLng(this._map, leftM.getLatLng(), rightM.getLatLng());\n\n    var middleMarker = this._createMarker(latlng);\n\n    var middleIcon = L.divIcon({\n      className: 'marker-icon marker-icon-middle'\n    });\n    middleMarker.setIcon(middleIcon); // save reference to this middle markers on the neighboor regular markers\n\n    leftM._middleMarkerNext = middleMarker;\n    rightM._middleMarkerPrev = middleMarker;\n    middleMarker.on('click', function () {\n      // TODO: move the next two lines inside _addMarker() as soon as\n      // https://github.com/Leaflet/Leaflet/issues/4484\n      // is fixed\n      var icon = L.divIcon({\n        className: 'marker-icon'\n      });\n      middleMarker.setIcon(icon);\n\n      _this3._addMarker(middleMarker, leftM, rightM);\n    });\n    middleMarker.on('movestart', function () {\n      // TODO: This is a workaround. Remove the moveend listener and\n      // callback as soon as this is fixed:\n      // https://github.com/Leaflet/Leaflet/issues/4484\n      middleMarker.on('moveend', function () {\n        var icon = L.divIcon({\n          className: 'marker-icon'\n        });\n        middleMarker.setIcon(icon);\n        middleMarker.off('moveend');\n      });\n\n      _this3._addMarker(middleMarker, leftM, rightM);\n    });\n    return middleMarker;\n  },\n  // adds a new marker from a middlemarker\n  _addMarker: function _addMarker(newM, leftM, rightM) {\n    // first, make this middlemarker a regular marker\n    newM.off('movestart');\n    newM.off('click'); // now, create the polygon coordinate point for that marker\n    // and push into marker array\n    // and associate polygon coordinate with marker coordinate\n\n    var latlng = newM.getLatLng();\n    var coords = this._layer._latlngs; // the index path to the marker inside the multidimensional marker array\n\n    var _this$findDeepMarkerI = this.findDeepMarkerIndex(this._markers, leftM),\n        indexPath = _this$findDeepMarkerI.indexPath,\n        index = _this$findDeepMarkerI.index,\n        parentPath = _this$findDeepMarkerI.parentPath; // define the coordsRing that is edited\n\n\n    var coordsRing = indexPath.length > 1 ? __WEBPACK_IMPORTED_MODULE_1_lodash_get___default()(coords, parentPath) : coords; // define the markers array that is edited\n\n    var markerArr = indexPath.length > 1 ? __WEBPACK_IMPORTED_MODULE_1_lodash_get___default()(this._markers, parentPath) : this._markers; // add coordinate to coordinate array\n\n    coordsRing.splice(index + 1, 0, latlng); // add marker to marker array\n\n    markerArr.splice(index + 1, 0, newM); // set new latlngs to update polygon\n\n    this._layer.setLatLngs(coords); // create the new middlemarkers\n\n\n    this._createMiddleMarker(leftM, newM);\n\n    this._createMiddleMarker(newM, rightM); // fire edit event\n\n\n    this._fireEdit();\n\n    this._layer.fire('pm:vertexadded', {\n      layer: this._layer,\n      marker: newM,\n      indexPath: this.findDeepMarkerIndex(this._markers, newM).indexPath,\n      latlng: latlng // TODO: maybe add latlng as well?\n\n    });\n\n    if (this.options.snappable) {\n      this._initSnappableMarkers();\n    }\n  },\n  _removeMarker: function _removeMarker(e) {\n    // if self intersection isn't allowed, save the coords upon dragstart\n    // in case we need to reset the layer\n    if (!this.options.allowSelfIntersection) {\n      var c = this._layer.getLatLngs();\n\n      this._coordsBeforeEdit = JSON.parse(JSON.stringify(c));\n    } // the marker that should be removed\n\n\n    var marker = e.target; // coords of the layer\n\n    var coords = this._layer.getLatLngs(); // the index path to the marker inside the multidimensional marker array\n\n\n    var _this$findDeepMarkerI2 = this.findDeepMarkerIndex(this._markers, marker),\n        indexPath = _this$findDeepMarkerI2.indexPath,\n        index = _this$findDeepMarkerI2.index,\n        parentPath = _this$findDeepMarkerI2.parentPath; // only continue if this is NOT a middle marker (those can't be deleted)\n\n\n    if (!indexPath) {\n      return;\n    } // define the coordsRing that is edited\n\n\n    var coordsRing = indexPath.length > 1 ? __WEBPACK_IMPORTED_MODULE_1_lodash_get___default()(coords, parentPath) : coords; // define the markers array that is edited\n\n    var markerArr = indexPath.length > 1 ? __WEBPACK_IMPORTED_MODULE_1_lodash_get___default()(this._markers, parentPath) : this._markers; // remove coordinate\n\n    coordsRing.splice(index, 1); // set new latlngs to the polygon\n\n    this._layer.setLatLngs(coords); // if the ring of the poly has no coordinates left, remove the last coord too\n\n\n    if (coordsRing.length <= 1) {\n      coordsRing.splice(0, coordsRing.length); // set new coords\n\n      this._layer.setLatLngs(coords); // re-enable editing so unnecessary markers are removed\n      // TODO: kind of an ugly workaround maybe do it better?\n\n\n      this.disable();\n      this.enable(this.options);\n    } // TODO: we may should remove all empty coord-rings here as well.\n    // if no coords are left, remove the layer\n\n\n    if (this.isEmptyDeep(coords)) {\n      this._layer.remove();\n    } // now handle the middle markers\n    // remove the marker and the middlemarkers next to it from the map\n\n\n    if (marker._middleMarkerPrev) {\n      this._markerGroup.removeLayer(marker._middleMarkerPrev);\n    }\n\n    if (marker._middleMarkerNext) {\n      this._markerGroup.removeLayer(marker._middleMarkerNext);\n    } // remove the marker from the map\n\n\n    this._markerGroup.removeLayer(marker);\n\n    var rightMarkerIndex;\n    var leftMarkerIndex;\n\n    if (this.isPolygon()) {\n      // find neighbor marker-indexes\n      rightMarkerIndex = (index + 1) % markerArr.length;\n      leftMarkerIndex = (index + (markerArr.length - 1)) % markerArr.length;\n    } else {\n      // find neighbor marker-indexes\n      leftMarkerIndex = index - 1 < 0 ? undefined : index - 1;\n      rightMarkerIndex = index + 1 >= markerArr.length ? undefined : index + 1;\n    } // don't create middlemarkers if there is only one marker left\n\n\n    if (rightMarkerIndex !== leftMarkerIndex) {\n      var leftM = markerArr[leftMarkerIndex];\n      var rightM = markerArr[rightMarkerIndex];\n\n      this._createMiddleMarker(leftM, rightM);\n    } // remove the marker from the markers array\n\n\n    markerArr.splice(index, 1); // fire edit event\n\n    this._fireEdit(); // fire vertex removal event\n\n\n    this._layer.fire('pm:vertexremoved', {\n      layer: this._layer,\n      marker: marker,\n      indexPath: indexPath // TODO: maybe add latlng as well?\n\n    });\n  },\n  isEmptyDeep: function isEmptyDeep(l) {\n    // thanks for the function, Felix Heck\n    var flatten = function flatten(list) {\n      return list.filter(function (x) {\n        return ![null, '', undefined].includes(x);\n      }).reduce(function (a, b) {\n        return a.concat(Array.isArray(b) ? flatten(b) : b);\n      }, []);\n    };\n\n    return !flatten(l).length;\n  },\n  findDeepMarkerIndex: function findDeepMarkerIndex(arr, marker) {\n    // thanks for the function, Felix Heck\n    var result;\n\n    var run = function run(path) {\n      return function (v, i) {\n        var iRes = path.concat(i);\n\n        if (v._leaflet_id === marker._leaflet_id) {\n          result = iRes;\n          return true;\n        }\n\n        return Array.isArray(v) && v.some(run(iRes));\n      };\n    };\n\n    arr.some(run([]));\n    var returnVal = {};\n\n    if (result) {\n      returnVal = {\n        indexPath: result,\n        index: result[result.length - 1],\n        parentPath: result.slice(0, result.length - 1)\n      };\n    }\n\n    return returnVal;\n  },\n  updatePolygonCoordsFromMarkerDrag: function updatePolygonCoordsFromMarkerDrag(marker) {\n    // update polygon coords\n    var coords = this._layer.getLatLngs(); // get marker latlng\n\n\n    var latlng = marker.getLatLng(); // get indexPath of Marker\n\n    var _this$findDeepMarkerI3 = this.findDeepMarkerIndex(this._markers, marker),\n        indexPath = _this$findDeepMarkerI3.indexPath,\n        index = _this$findDeepMarkerI3.index,\n        parentPath = _this$findDeepMarkerI3.parentPath; // update coord\n\n\n    var parent = indexPath.length > 1 ? __WEBPACK_IMPORTED_MODULE_1_lodash_get___default()(coords, parentPath) : coords;\n    parent.splice(index, 1, latlng); // set new coords on layer\n\n    this._layer.setLatLngs(coords).redraw();\n  },\n  _onMarkerDrag: function _onMarkerDrag(e) {\n    // dragged marker\n    var marker = e.target;\n\n    var _this$findDeepMarkerI4 = this.findDeepMarkerIndex(this._markers, marker),\n        indexPath = _this$findDeepMarkerI4.indexPath,\n        index = _this$findDeepMarkerI4.index,\n        parentPath = _this$findDeepMarkerI4.parentPath; // only continue if this is NOT a middle marker\n\n\n    if (!indexPath) {\n      return;\n    }\n\n    this.updatePolygonCoordsFromMarkerDrag(marker); // the dragged markers neighbors\n\n    var markerArr = indexPath.length > 1 ? __WEBPACK_IMPORTED_MODULE_1_lodash_get___default()(this._markers, parentPath) : this._markers; // find the indizes of next and previous markers\n\n    var nextMarkerIndex = (index + 1) % markerArr.length;\n    var prevMarkerIndex = (index + (markerArr.length - 1)) % markerArr.length; // update middle markers on the left and right\n    // be aware that \"next\" and \"prev\" might be interchanged, depending on the geojson array\n\n    var markerLatLng = marker.getLatLng(); // get latlng of prev and next marker\n\n    var prevMarkerLatLng = markerArr[prevMarkerIndex].getLatLng();\n    var nextMarkerLatLng = markerArr[nextMarkerIndex].getLatLng();\n\n    if (marker._middleMarkerNext) {\n      var middleMarkerNextLatLng = __WEBPACK_IMPORTED_MODULE_3__L_PM_Utils__[\"a\" /* default */].calcMiddleLatLng(this._map, markerLatLng, nextMarkerLatLng);\n\n      marker._middleMarkerNext.setLatLng(middleMarkerNextLatLng);\n    }\n\n    if (marker._middleMarkerPrev) {\n      var middleMarkerPrevLatLng = __WEBPACK_IMPORTED_MODULE_3__L_PM_Utils__[\"a\" /* default */].calcMiddleLatLng(this._map, markerLatLng, prevMarkerLatLng);\n\n      marker._middleMarkerPrev.setLatLng(middleMarkerPrevLatLng);\n    } // if self intersection is not allowed, handle it\n\n\n    if (!this.options.allowSelfIntersection) {\n      this._handleLayerStyle();\n    }\n  },\n  _onMarkerDragEnd: function _onMarkerDragEnd(e) {\n    var marker = e.target;\n\n    var _this$findDeepMarkerI5 = this.findDeepMarkerIndex(this._markers, marker),\n        indexPath = _this$findDeepMarkerI5.indexPath; // if self intersection is not allowed but this edit caused a self intersection,\n    // reset and cancel; do not fire events\n\n\n    if (!this.options.allowSelfIntersection && this.hasSelfIntersection()) {\n      // reset coordinates\n      this._layer.setLatLngs(this._coordsBeforeEdit);\n\n      this._coordsBeforeEdit = null; // re-enable markers for the new coords\n\n      this._initMarkers(); // check for selfintersection again (mainly to reset the style)\n\n\n      this._handleLayerStyle();\n\n      return;\n    }\n\n    this._layer.fire('pm:markerdragend', {\n      markerEvent: e,\n      indexPath: indexPath\n    }); // fire edit event\n\n\n    this._fireEdit();\n  },\n  _onMarkerDragStart: function _onMarkerDragStart(e) {\n    var marker = e.target;\n\n    var _this$findDeepMarkerI6 = this.findDeepMarkerIndex(this._markers, marker),\n        indexPath = _this$findDeepMarkerI6.indexPath;\n\n    this._layer.fire('pm:markerdragstart', {\n      markerEvent: e,\n      indexPath: indexPath\n    }); // if self intersection isn't allowed, save the coords upon dragstart\n    // in case we need to reset the layer\n\n\n    if (!this.options.allowSelfIntersection) {\n      this._coordsBeforeEdit = this._layer.getLatLngs();\n    }\n  },\n  _fireEdit: function _fireEdit() {\n    // fire edit event\n    this._layerEdited = true;\n\n    this._layer.fire('pm:edit');\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///39\n");

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

eval("var baseGet = __webpack_require__(41);\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL2dldC5qcz80M2I4Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBiYXNlR2V0ID0gcmVxdWlyZSgnLi9fYmFzZUdldCcpO1xuXG4vKipcbiAqIEdldHMgdGhlIHZhbHVlIGF0IGBwYXRoYCBvZiBgb2JqZWN0YC4gSWYgdGhlIHJlc29sdmVkIHZhbHVlIGlzXG4gKiBgdW5kZWZpbmVkYCwgdGhlIGBkZWZhdWx0VmFsdWVgIGlzIHJldHVybmVkIGluIGl0cyBwbGFjZS5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDMuNy4wXG4gKiBAY2F0ZWdvcnkgT2JqZWN0XG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcGFyYW0ge0FycmF5fHN0cmluZ30gcGF0aCBUaGUgcGF0aCBvZiB0aGUgcHJvcGVydHkgdG8gZ2V0LlxuICogQHBhcmFtIHsqfSBbZGVmYXVsdFZhbHVlXSBUaGUgdmFsdWUgcmV0dXJuZWQgZm9yIGB1bmRlZmluZWRgIHJlc29sdmVkIHZhbHVlcy5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSByZXNvbHZlZCB2YWx1ZS5cbiAqIEBleGFtcGxlXG4gKlxuICogdmFyIG9iamVjdCA9IHsgJ2EnOiBbeyAnYic6IHsgJ2MnOiAzIH0gfV0gfTtcbiAqXG4gKiBfLmdldChvYmplY3QsICdhWzBdLmIuYycpO1xuICogLy8gPT4gM1xuICpcbiAqIF8uZ2V0KG9iamVjdCwgWydhJywgJzAnLCAnYicsICdjJ10pO1xuICogLy8gPT4gM1xuICpcbiAqIF8uZ2V0KG9iamVjdCwgJ2EuYi5jJywgJ2RlZmF1bHQnKTtcbiAqIC8vID0+ICdkZWZhdWx0J1xuICovXG5mdW5jdGlvbiBnZXQob2JqZWN0LCBwYXRoLCBkZWZhdWx0VmFsdWUpIHtcbiAgdmFyIHJlc3VsdCA9IG9iamVjdCA9PSBudWxsID8gdW5kZWZpbmVkIDogYmFzZUdldChvYmplY3QsIHBhdGgpO1xuICByZXR1cm4gcmVzdWx0ID09PSB1bmRlZmluZWQgPyBkZWZhdWx0VmFsdWUgOiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL2dldC5qc1xuLy8gbW9kdWxlIGlkID0gNDBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///40\n");

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

eval("var castPath = __webpack_require__(42),\n    toKey = __webpack_require__(82);\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlR2V0LmpzP2I4MjgiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGNhc3RQYXRoID0gcmVxdWlyZSgnLi9fY2FzdFBhdGgnKSxcbiAgICB0b0tleSA9IHJlcXVpcmUoJy4vX3RvS2V5Jyk7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uZ2V0YCB3aXRob3V0IHN1cHBvcnQgZm9yIGRlZmF1bHQgdmFsdWVzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcGFyYW0ge0FycmF5fHN0cmluZ30gcGF0aCBUaGUgcGF0aCBvZiB0aGUgcHJvcGVydHkgdG8gZ2V0LlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIHJlc29sdmVkIHZhbHVlLlxuICovXG5mdW5jdGlvbiBiYXNlR2V0KG9iamVjdCwgcGF0aCkge1xuICBwYXRoID0gY2FzdFBhdGgocGF0aCwgb2JqZWN0KTtcblxuICB2YXIgaW5kZXggPSAwLFxuICAgICAgbGVuZ3RoID0gcGF0aC5sZW5ndGg7XG5cbiAgd2hpbGUgKG9iamVjdCAhPSBudWxsICYmIGluZGV4IDwgbGVuZ3RoKSB7XG4gICAgb2JqZWN0ID0gb2JqZWN0W3RvS2V5KHBhdGhbaW5kZXgrK10pXTtcbiAgfVxuICByZXR1cm4gKGluZGV4ICYmIGluZGV4ID09IGxlbmd0aCkgPyBvYmplY3QgOiB1bmRlZmluZWQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZUdldDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fYmFzZUdldC5qc1xuLy8gbW9kdWxlIGlkID0gNDFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///41\n");

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

eval("var isArray = __webpack_require__(8),\n    isKey = __webpack_require__(43),\n    stringToPath = __webpack_require__(49),\n    toString = __webpack_require__(79);\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jYXN0UGF0aC5qcz82Yzg4Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBpc0FycmF5ID0gcmVxdWlyZSgnLi9pc0FycmF5JyksXG4gICAgaXNLZXkgPSByZXF1aXJlKCcuL19pc0tleScpLFxuICAgIHN0cmluZ1RvUGF0aCA9IHJlcXVpcmUoJy4vX3N0cmluZ1RvUGF0aCcpLFxuICAgIHRvU3RyaW5nID0gcmVxdWlyZSgnLi90b1N0cmluZycpO1xuXG4vKipcbiAqIENhc3RzIGB2YWx1ZWAgdG8gYSBwYXRoIGFycmF5IGlmIGl0J3Mgbm90IG9uZS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gaW5zcGVjdC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbb2JqZWN0XSBUaGUgb2JqZWN0IHRvIHF1ZXJ5IGtleXMgb24uXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGNhc3QgcHJvcGVydHkgcGF0aCBhcnJheS5cbiAqL1xuZnVuY3Rpb24gY2FzdFBhdGgodmFsdWUsIG9iamVjdCkge1xuICBpZiAoaXNBcnJheSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cbiAgcmV0dXJuIGlzS2V5KHZhbHVlLCBvYmplY3QpID8gW3ZhbHVlXSA6IHN0cmluZ1RvUGF0aCh0b1N0cmluZyh2YWx1ZSkpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNhc3RQYXRoO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jYXN0UGF0aC5qc1xuLy8gbW9kdWxlIGlkID0gNDJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///42\n");

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

eval("var isArray = __webpack_require__(8),\n    isSymbol = __webpack_require__(9);\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19pc0tleS5qcz84NDgzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBpc0FycmF5ID0gcmVxdWlyZSgnLi9pc0FycmF5JyksXG4gICAgaXNTeW1ib2wgPSByZXF1aXJlKCcuL2lzU3ltYm9sJyk7XG5cbi8qKiBVc2VkIHRvIG1hdGNoIHByb3BlcnR5IG5hbWVzIHdpdGhpbiBwcm9wZXJ0eSBwYXRocy4gKi9cbnZhciByZUlzRGVlcFByb3AgPSAvXFwufFxcWyg/OlteW1xcXV0qfChbXCInXSkoPzooPyFcXDEpW15cXFxcXXxcXFxcLikqP1xcMSlcXF0vLFxuICAgIHJlSXNQbGFpblByb3AgPSAvXlxcdyokLztcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhIHByb3BlcnR5IG5hbWUgYW5kIG5vdCBhIHByb3BlcnR5IHBhdGguXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHBhcmFtIHtPYmplY3R9IFtvYmplY3RdIFRoZSBvYmplY3QgdG8gcXVlcnkga2V5cyBvbi5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgcHJvcGVydHkgbmFtZSwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBpc0tleSh2YWx1ZSwgb2JqZWN0KSB7XG4gIGlmIChpc0FycmF5KHZhbHVlKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICB2YXIgdHlwZSA9IHR5cGVvZiB2YWx1ZTtcbiAgaWYgKHR5cGUgPT0gJ251bWJlcicgfHwgdHlwZSA9PSAnc3ltYm9sJyB8fCB0eXBlID09ICdib29sZWFuJyB8fFxuICAgICAgdmFsdWUgPT0gbnVsbCB8fCBpc1N5bWJvbCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICByZXR1cm4gcmVJc1BsYWluUHJvcC50ZXN0KHZhbHVlKSB8fCAhcmVJc0RlZXBQcm9wLnRlc3QodmFsdWUpIHx8XG4gICAgKG9iamVjdCAhPSBudWxsICYmIHZhbHVlIGluIE9iamVjdChvYmplY3QpKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc0tleTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faXNLZXkuanNcbi8vIG1vZHVsZSBpZCA9IDQzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///43\n");

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(45)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19mcmVlR2xvYmFsLmpzPzZlNTYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBnbG9iYWxgIGZyb20gTm9kZS5qcy4gKi9cbnZhciBmcmVlR2xvYmFsID0gdHlwZW9mIGdsb2JhbCA9PSAnb2JqZWN0JyAmJiBnbG9iYWwgJiYgZ2xvYmFsLk9iamVjdCA9PT0gT2JqZWN0ICYmIGdsb2JhbDtcblxubW9kdWxlLmV4cG9ydHMgPSBmcmVlR2xvYmFsO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19mcmVlR2xvYmFsLmpzXG4vLyBtb2R1bGUgaWQgPSA0NFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///44\n");

/***/ }),
/* 45 */
/***/ (function(module, exports) {

eval("var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzPzM2OTgiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGc7XHJcblxyXG4vLyBUaGlzIHdvcmtzIGluIG5vbi1zdHJpY3QgbW9kZVxyXG5nID0gKGZ1bmN0aW9uKCkge1xyXG5cdHJldHVybiB0aGlzO1xyXG59KSgpO1xyXG5cclxudHJ5IHtcclxuXHQvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcclxuXHRnID0gZyB8fCBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCkgfHwgKDEsZXZhbCkoXCJ0aGlzXCIpO1xyXG59IGNhdGNoKGUpIHtcclxuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxyXG5cdGlmKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIpXHJcblx0XHRnID0gd2luZG93O1xyXG59XHJcblxyXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXHJcbi8vIFdlIHJldHVybiB1bmRlZmluZWQsIGluc3RlYWQgb2Ygbm90aGluZyBoZXJlLCBzbyBpdCdzXHJcbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZztcclxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzXG4vLyBtb2R1bGUgaWQgPSA0NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///45\n");

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

eval("var Symbol = __webpack_require__(10);\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXRSYXdUYWcuanM/YjhiOCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgU3ltYm9sID0gcmVxdWlyZSgnLi9fU3ltYm9sJyk7XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL1xudmFyIGhhc093blByb3BlcnR5ID0gb2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHk7XG5cbi8qKlxuICogVXNlZCB0byByZXNvbHZlIHRoZVxuICogW2B0b1N0cmluZ1RhZ2BdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLW9iamVjdC5wcm90b3R5cGUudG9zdHJpbmcpXG4gKiBvZiB2YWx1ZXMuXG4gKi9cbnZhciBuYXRpdmVPYmplY3RUb1N0cmluZyA9IG9iamVjdFByb3RvLnRvU3RyaW5nO1xuXG4vKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi9cbnZhciBzeW1Ub1N0cmluZ1RhZyA9IFN5bWJvbCA/IFN5bWJvbC50b1N0cmluZ1RhZyA6IHVuZGVmaW5lZDtcblxuLyoqXG4gKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYGJhc2VHZXRUYWdgIHdoaWNoIGlnbm9yZXMgYFN5bWJvbC50b1N0cmluZ1RhZ2AgdmFsdWVzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBxdWVyeS5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIHJhdyBgdG9TdHJpbmdUYWdgLlxuICovXG5mdW5jdGlvbiBnZXRSYXdUYWcodmFsdWUpIHtcbiAgdmFyIGlzT3duID0gaGFzT3duUHJvcGVydHkuY2FsbCh2YWx1ZSwgc3ltVG9TdHJpbmdUYWcpLFxuICAgICAgdGFnID0gdmFsdWVbc3ltVG9TdHJpbmdUYWddO1xuXG4gIHRyeSB7XG4gICAgdmFsdWVbc3ltVG9TdHJpbmdUYWddID0gdW5kZWZpbmVkO1xuICAgIHZhciB1bm1hc2tlZCA9IHRydWU7XG4gIH0gY2F0Y2ggKGUpIHt9XG5cbiAgdmFyIHJlc3VsdCA9IG5hdGl2ZU9iamVjdFRvU3RyaW5nLmNhbGwodmFsdWUpO1xuICBpZiAodW5tYXNrZWQpIHtcbiAgICBpZiAoaXNPd24pIHtcbiAgICAgIHZhbHVlW3N5bVRvU3RyaW5nVGFnXSA9IHRhZztcbiAgICB9IGVsc2Uge1xuICAgICAgZGVsZXRlIHZhbHVlW3N5bVRvU3RyaW5nVGFnXTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXRSYXdUYWc7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2dldFJhd1RhZy5qc1xuLy8gbW9kdWxlIGlkID0gNDZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///46\n");

/***/ }),
/* 47 */
/***/ (function(module, exports) {

eval("/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19vYmplY3RUb1N0cmluZy5qcz9mYmFlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKlxuICogVXNlZCB0byByZXNvbHZlIHRoZVxuICogW2B0b1N0cmluZ1RhZ2BdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLW9iamVjdC5wcm90b3R5cGUudG9zdHJpbmcpXG4gKiBvZiB2YWx1ZXMuXG4gKi9cbnZhciBuYXRpdmVPYmplY3RUb1N0cmluZyA9IG9iamVjdFByb3RvLnRvU3RyaW5nO1xuXG4vKipcbiAqIENvbnZlcnRzIGB2YWx1ZWAgdG8gYSBzdHJpbmcgdXNpbmcgYE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmdgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjb252ZXJ0LlxuICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgY29udmVydGVkIHN0cmluZy5cbiAqL1xuZnVuY3Rpb24gb2JqZWN0VG9TdHJpbmcodmFsdWUpIHtcbiAgcmV0dXJuIG5hdGl2ZU9iamVjdFRvU3RyaW5nLmNhbGwodmFsdWUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG9iamVjdFRvU3RyaW5nO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19vYmplY3RUb1N0cmluZy5qc1xuLy8gbW9kdWxlIGlkID0gNDdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///47\n");

/***/ }),
/* 48 */
/***/ (function(module, exports) {

eval("/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzT2JqZWN0TGlrZS5qcz81MjcxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgb2JqZWN0LWxpa2UuIEEgdmFsdWUgaXMgb2JqZWN0LWxpa2UgaWYgaXQncyBub3QgYG51bGxgXG4gKiBhbmQgaGFzIGEgYHR5cGVvZmAgcmVzdWx0IG9mIFwib2JqZWN0XCIuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgb2JqZWN0LWxpa2UsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc09iamVjdExpa2Uoe30pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3RMaWtlKFsxLCAyLCAzXSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdExpa2UoXy5ub29wKTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5pc09iamVjdExpa2UobnVsbCk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc09iamVjdExpa2UodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlICE9IG51bGwgJiYgdHlwZW9mIHZhbHVlID09ICdvYmplY3QnO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzT2JqZWN0TGlrZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9pc09iamVjdExpa2UuanNcbi8vIG1vZHVsZSBpZCA9IDQ4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///48\n");

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

eval("var memoizeCapped = __webpack_require__(50);\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19zdHJpbmdUb1BhdGguanM/NTI3MiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbWVtb2l6ZUNhcHBlZCA9IHJlcXVpcmUoJy4vX21lbW9pemVDYXBwZWQnKTtcblxuLyoqIFVzZWQgdG8gbWF0Y2ggcHJvcGVydHkgbmFtZXMgd2l0aGluIHByb3BlcnR5IHBhdGhzLiAqL1xudmFyIHJlUHJvcE5hbWUgPSAvW14uW1xcXV0rfFxcWyg/OigtP1xcZCsoPzpcXC5cXGQrKT8pfChbXCInXSkoKD86KD8hXFwyKVteXFxcXF18XFxcXC4pKj8pXFwyKVxcXXwoPz0oPzpcXC58XFxbXFxdKSg/OlxcLnxcXFtcXF18JCkpL2c7XG5cbi8qKiBVc2VkIHRvIG1hdGNoIGJhY2tzbGFzaGVzIGluIHByb3BlcnR5IHBhdGhzLiAqL1xudmFyIHJlRXNjYXBlQ2hhciA9IC9cXFxcKFxcXFwpPy9nO1xuXG4vKipcbiAqIENvbnZlcnRzIGBzdHJpbmdgIHRvIGEgcHJvcGVydHkgcGF0aCBhcnJheS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtzdHJpbmd9IHN0cmluZyBUaGUgc3RyaW5nIHRvIGNvbnZlcnQuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIHByb3BlcnR5IHBhdGggYXJyYXkuXG4gKi9cbnZhciBzdHJpbmdUb1BhdGggPSBtZW1vaXplQ2FwcGVkKGZ1bmN0aW9uKHN0cmluZykge1xuICB2YXIgcmVzdWx0ID0gW107XG4gIGlmIChzdHJpbmcuY2hhckNvZGVBdCgwKSA9PT0gNDYgLyogLiAqLykge1xuICAgIHJlc3VsdC5wdXNoKCcnKTtcbiAgfVxuICBzdHJpbmcucmVwbGFjZShyZVByb3BOYW1lLCBmdW5jdGlvbihtYXRjaCwgbnVtYmVyLCBxdW90ZSwgc3ViU3RyaW5nKSB7XG4gICAgcmVzdWx0LnB1c2gocXVvdGUgPyBzdWJTdHJpbmcucmVwbGFjZShyZUVzY2FwZUNoYXIsICckMScpIDogKG51bWJlciB8fCBtYXRjaCkpO1xuICB9KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHN0cmluZ1RvUGF0aDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fc3RyaW5nVG9QYXRoLmpzXG4vLyBtb2R1bGUgaWQgPSA0OVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///49\n");

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

eval("var memoize = __webpack_require__(51);\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19tZW1vaXplQ2FwcGVkLmpzPzdjY2EiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIG1lbW9pemUgPSByZXF1aXJlKCcuL21lbW9pemUnKTtcblxuLyoqIFVzZWQgYXMgdGhlIG1heGltdW0gbWVtb2l6ZSBjYWNoZSBzaXplLiAqL1xudmFyIE1BWF9NRU1PSVpFX1NJWkUgPSA1MDA7XG5cbi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBfLm1lbW9pemVgIHdoaWNoIGNsZWFycyB0aGUgbWVtb2l6ZWQgZnVuY3Rpb24nc1xuICogY2FjaGUgd2hlbiBpdCBleGNlZWRzIGBNQVhfTUVNT0laRV9TSVpFYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gaGF2ZSBpdHMgb3V0cHV0IG1lbW9pemVkLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgbWVtb2l6ZWQgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIG1lbW9pemVDYXBwZWQoZnVuYykge1xuICB2YXIgcmVzdWx0ID0gbWVtb2l6ZShmdW5jLCBmdW5jdGlvbihrZXkpIHtcbiAgICBpZiAoY2FjaGUuc2l6ZSA9PT0gTUFYX01FTU9JWkVfU0laRSkge1xuICAgICAgY2FjaGUuY2xlYXIoKTtcbiAgICB9XG4gICAgcmV0dXJuIGtleTtcbiAgfSk7XG5cbiAgdmFyIGNhY2hlID0gcmVzdWx0LmNhY2hlO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG1lbW9pemVDYXBwZWQ7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21lbW9pemVDYXBwZWQuanNcbi8vIG1vZHVsZSBpZCA9IDUwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///50\n");

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

eval("var MapCache = __webpack_require__(52);\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL21lbW9pemUuanM/Y2M2NiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgTWFwQ2FjaGUgPSByZXF1aXJlKCcuL19NYXBDYWNoZScpO1xuXG4vKiogRXJyb3IgbWVzc2FnZSBjb25zdGFudHMuICovXG52YXIgRlVOQ19FUlJPUl9URVhUID0gJ0V4cGVjdGVkIGEgZnVuY3Rpb24nO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBmdW5jdGlvbiB0aGF0IG1lbW9pemVzIHRoZSByZXN1bHQgb2YgYGZ1bmNgLiBJZiBgcmVzb2x2ZXJgIGlzXG4gKiBwcm92aWRlZCwgaXQgZGV0ZXJtaW5lcyB0aGUgY2FjaGUga2V5IGZvciBzdG9yaW5nIHRoZSByZXN1bHQgYmFzZWQgb24gdGhlXG4gKiBhcmd1bWVudHMgcHJvdmlkZWQgdG8gdGhlIG1lbW9pemVkIGZ1bmN0aW9uLiBCeSBkZWZhdWx0LCB0aGUgZmlyc3QgYXJndW1lbnRcbiAqIHByb3ZpZGVkIHRvIHRoZSBtZW1vaXplZCBmdW5jdGlvbiBpcyB1c2VkIGFzIHRoZSBtYXAgY2FjaGUga2V5LiBUaGUgYGZ1bmNgXG4gKiBpcyBpbnZva2VkIHdpdGggdGhlIGB0aGlzYCBiaW5kaW5nIG9mIHRoZSBtZW1vaXplZCBmdW5jdGlvbi5cbiAqXG4gKiAqKk5vdGU6KiogVGhlIGNhY2hlIGlzIGV4cG9zZWQgYXMgdGhlIGBjYWNoZWAgcHJvcGVydHkgb24gdGhlIG1lbW9pemVkXG4gKiBmdW5jdGlvbi4gSXRzIGNyZWF0aW9uIG1heSBiZSBjdXN0b21pemVkIGJ5IHJlcGxhY2luZyB0aGUgYF8ubWVtb2l6ZS5DYWNoZWBcbiAqIGNvbnN0cnVjdG9yIHdpdGggb25lIHdob3NlIGluc3RhbmNlcyBpbXBsZW1lbnQgdGhlXG4gKiBbYE1hcGBdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLXByb3BlcnRpZXMtb2YtdGhlLW1hcC1wcm90b3R5cGUtb2JqZWN0KVxuICogbWV0aG9kIGludGVyZmFjZSBvZiBgY2xlYXJgLCBgZGVsZXRlYCwgYGdldGAsIGBoYXNgLCBhbmQgYHNldGAuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjEuMFxuICogQGNhdGVnb3J5IEZ1bmN0aW9uXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBoYXZlIGl0cyBvdXRwdXQgbWVtb2l6ZWQuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbcmVzb2x2ZXJdIFRoZSBmdW5jdGlvbiB0byByZXNvbHZlIHRoZSBjYWNoZSBrZXkuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBtZW1vaXplZCBmdW5jdGlvbi5cbiAqIEBleGFtcGxlXG4gKlxuICogdmFyIG9iamVjdCA9IHsgJ2EnOiAxLCAnYic6IDIgfTtcbiAqIHZhciBvdGhlciA9IHsgJ2MnOiAzLCAnZCc6IDQgfTtcbiAqXG4gKiB2YXIgdmFsdWVzID0gXy5tZW1vaXplKF8udmFsdWVzKTtcbiAqIHZhbHVlcyhvYmplY3QpO1xuICogLy8gPT4gWzEsIDJdXG4gKlxuICogdmFsdWVzKG90aGVyKTtcbiAqIC8vID0+IFszLCA0XVxuICpcbiAqIG9iamVjdC5hID0gMjtcbiAqIHZhbHVlcyhvYmplY3QpO1xuICogLy8gPT4gWzEsIDJdXG4gKlxuICogLy8gTW9kaWZ5IHRoZSByZXN1bHQgY2FjaGUuXG4gKiB2YWx1ZXMuY2FjaGUuc2V0KG9iamVjdCwgWydhJywgJ2InXSk7XG4gKiB2YWx1ZXMob2JqZWN0KTtcbiAqIC8vID0+IFsnYScsICdiJ11cbiAqXG4gKiAvLyBSZXBsYWNlIGBfLm1lbW9pemUuQ2FjaGVgLlxuICogXy5tZW1vaXplLkNhY2hlID0gV2Vha01hcDtcbiAqL1xuZnVuY3Rpb24gbWVtb2l6ZShmdW5jLCByZXNvbHZlcikge1xuICBpZiAodHlwZW9mIGZ1bmMgIT0gJ2Z1bmN0aW9uJyB8fCAocmVzb2x2ZXIgIT0gbnVsbCAmJiB0eXBlb2YgcmVzb2x2ZXIgIT0gJ2Z1bmN0aW9uJykpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKEZVTkNfRVJST1JfVEVYVCk7XG4gIH1cbiAgdmFyIG1lbW9pemVkID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGFyZ3MgPSBhcmd1bWVudHMsXG4gICAgICAgIGtleSA9IHJlc29sdmVyID8gcmVzb2x2ZXIuYXBwbHkodGhpcywgYXJncykgOiBhcmdzWzBdLFxuICAgICAgICBjYWNoZSA9IG1lbW9pemVkLmNhY2hlO1xuXG4gICAgaWYgKGNhY2hlLmhhcyhrZXkpKSB7XG4gICAgICByZXR1cm4gY2FjaGUuZ2V0KGtleSk7XG4gICAgfVxuICAgIHZhciByZXN1bHQgPSBmdW5jLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgIG1lbW9pemVkLmNhY2hlID0gY2FjaGUuc2V0KGtleSwgcmVzdWx0KSB8fCBjYWNoZTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xuICBtZW1vaXplZC5jYWNoZSA9IG5ldyAobWVtb2l6ZS5DYWNoZSB8fCBNYXBDYWNoZSk7XG4gIHJldHVybiBtZW1vaXplZDtcbn1cblxuLy8gRXhwb3NlIGBNYXBDYWNoZWAuXG5tZW1vaXplLkNhY2hlID0gTWFwQ2FjaGU7XG5cbm1vZHVsZS5leHBvcnRzID0gbWVtb2l6ZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9tZW1vaXplLmpzXG4vLyBtb2R1bGUgaWQgPSA1MVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///51\n");

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

eval("var mapCacheClear = __webpack_require__(53),\n    mapCacheDelete = __webpack_require__(74),\n    mapCacheGet = __webpack_require__(76),\n    mapCacheHas = __webpack_require__(77),\n    mapCacheSet = __webpack_require__(78);\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19NYXBDYWNoZS5qcz82MWUwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBtYXBDYWNoZUNsZWFyID0gcmVxdWlyZSgnLi9fbWFwQ2FjaGVDbGVhcicpLFxuICAgIG1hcENhY2hlRGVsZXRlID0gcmVxdWlyZSgnLi9fbWFwQ2FjaGVEZWxldGUnKSxcbiAgICBtYXBDYWNoZUdldCA9IHJlcXVpcmUoJy4vX21hcENhY2hlR2V0JyksXG4gICAgbWFwQ2FjaGVIYXMgPSByZXF1aXJlKCcuL19tYXBDYWNoZUhhcycpLFxuICAgIG1hcENhY2hlU2V0ID0gcmVxdWlyZSgnLi9fbWFwQ2FjaGVTZXQnKTtcblxuLyoqXG4gKiBDcmVhdGVzIGEgbWFwIGNhY2hlIG9iamVjdCB0byBzdG9yZSBrZXktdmFsdWUgcGFpcnMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBjb25zdHJ1Y3RvclxuICogQHBhcmFtIHtBcnJheX0gW2VudHJpZXNdIFRoZSBrZXktdmFsdWUgcGFpcnMgdG8gY2FjaGUuXG4gKi9cbmZ1bmN0aW9uIE1hcENhY2hlKGVudHJpZXMpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSBlbnRyaWVzID09IG51bGwgPyAwIDogZW50cmllcy5sZW5ndGg7XG5cbiAgdGhpcy5jbGVhcigpO1xuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIHZhciBlbnRyeSA9IGVudHJpZXNbaW5kZXhdO1xuICAgIHRoaXMuc2V0KGVudHJ5WzBdLCBlbnRyeVsxXSk7XG4gIH1cbn1cblxuLy8gQWRkIG1ldGhvZHMgdG8gYE1hcENhY2hlYC5cbk1hcENhY2hlLnByb3RvdHlwZS5jbGVhciA9IG1hcENhY2hlQ2xlYXI7XG5NYXBDYWNoZS5wcm90b3R5cGVbJ2RlbGV0ZSddID0gbWFwQ2FjaGVEZWxldGU7XG5NYXBDYWNoZS5wcm90b3R5cGUuZ2V0ID0gbWFwQ2FjaGVHZXQ7XG5NYXBDYWNoZS5wcm90b3R5cGUuaGFzID0gbWFwQ2FjaGVIYXM7XG5NYXBDYWNoZS5wcm90b3R5cGUuc2V0ID0gbWFwQ2FjaGVTZXQ7XG5cbm1vZHVsZS5leHBvcnRzID0gTWFwQ2FjaGU7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX01hcENhY2hlLmpzXG4vLyBtb2R1bGUgaWQgPSA1MlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///52\n");

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

eval("var Hash = __webpack_require__(54),\n    ListCache = __webpack_require__(66),\n    Map = __webpack_require__(73);\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19tYXBDYWNoZUNsZWFyLmpzPzA5NmUiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEhhc2ggPSByZXF1aXJlKCcuL19IYXNoJyksXG4gICAgTGlzdENhY2hlID0gcmVxdWlyZSgnLi9fTGlzdENhY2hlJyksXG4gICAgTWFwID0gcmVxdWlyZSgnLi9fTWFwJyk7XG5cbi8qKlxuICogUmVtb3ZlcyBhbGwga2V5LXZhbHVlIGVudHJpZXMgZnJvbSB0aGUgbWFwLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBjbGVhclxuICogQG1lbWJlck9mIE1hcENhY2hlXG4gKi9cbmZ1bmN0aW9uIG1hcENhY2hlQ2xlYXIoKSB7XG4gIHRoaXMuc2l6ZSA9IDA7XG4gIHRoaXMuX19kYXRhX18gPSB7XG4gICAgJ2hhc2gnOiBuZXcgSGFzaCxcbiAgICAnbWFwJzogbmV3IChNYXAgfHwgTGlzdENhY2hlKSxcbiAgICAnc3RyaW5nJzogbmV3IEhhc2hcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBtYXBDYWNoZUNsZWFyO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19tYXBDYWNoZUNsZWFyLmpzXG4vLyBtb2R1bGUgaWQgPSA1M1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///53\n");

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

eval("var hashClear = __webpack_require__(55),\n    hashDelete = __webpack_require__(62),\n    hashGet = __webpack_require__(63),\n    hashHas = __webpack_require__(64),\n    hashSet = __webpack_require__(65);\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19IYXNoLmpzPzRmZjYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGhhc2hDbGVhciA9IHJlcXVpcmUoJy4vX2hhc2hDbGVhcicpLFxuICAgIGhhc2hEZWxldGUgPSByZXF1aXJlKCcuL19oYXNoRGVsZXRlJyksXG4gICAgaGFzaEdldCA9IHJlcXVpcmUoJy4vX2hhc2hHZXQnKSxcbiAgICBoYXNoSGFzID0gcmVxdWlyZSgnLi9faGFzaEhhcycpLFxuICAgIGhhc2hTZXQgPSByZXF1aXJlKCcuL19oYXNoU2V0Jyk7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGhhc2ggb2JqZWN0LlxuICpcbiAqIEBwcml2YXRlXG4gKiBAY29uc3RydWN0b3JcbiAqIEBwYXJhbSB7QXJyYXl9IFtlbnRyaWVzXSBUaGUga2V5LXZhbHVlIHBhaXJzIHRvIGNhY2hlLlxuICovXG5mdW5jdGlvbiBIYXNoKGVudHJpZXMpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSBlbnRyaWVzID09IG51bGwgPyAwIDogZW50cmllcy5sZW5ndGg7XG5cbiAgdGhpcy5jbGVhcigpO1xuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIHZhciBlbnRyeSA9IGVudHJpZXNbaW5kZXhdO1xuICAgIHRoaXMuc2V0KGVudHJ5WzBdLCBlbnRyeVsxXSk7XG4gIH1cbn1cblxuLy8gQWRkIG1ldGhvZHMgdG8gYEhhc2hgLlxuSGFzaC5wcm90b3R5cGUuY2xlYXIgPSBoYXNoQ2xlYXI7XG5IYXNoLnByb3RvdHlwZVsnZGVsZXRlJ10gPSBoYXNoRGVsZXRlO1xuSGFzaC5wcm90b3R5cGUuZ2V0ID0gaGFzaEdldDtcbkhhc2gucHJvdG90eXBlLmhhcyA9IGhhc2hIYXM7XG5IYXNoLnByb3RvdHlwZS5zZXQgPSBoYXNoU2V0O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEhhc2g7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX0hhc2guanNcbi8vIG1vZHVsZSBpZCA9IDU0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///54\n");

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

eval("var nativeCreate = __webpack_require__(3);\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19oYXNoQ2xlYXIuanM/Zjc4YiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbmF0aXZlQ3JlYXRlID0gcmVxdWlyZSgnLi9fbmF0aXZlQ3JlYXRlJyk7XG5cbi8qKlxuICogUmVtb3ZlcyBhbGwga2V5LXZhbHVlIGVudHJpZXMgZnJvbSB0aGUgaGFzaC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgY2xlYXJcbiAqIEBtZW1iZXJPZiBIYXNoXG4gKi9cbmZ1bmN0aW9uIGhhc2hDbGVhcigpIHtcbiAgdGhpcy5fX2RhdGFfXyA9IG5hdGl2ZUNyZWF0ZSA/IG5hdGl2ZUNyZWF0ZShudWxsKSA6IHt9O1xuICB0aGlzLnNpemUgPSAwO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhhc2hDbGVhcjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faGFzaENsZWFyLmpzXG4vLyBtb2R1bGUgaWQgPSA1NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///55\n");

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

eval("var isFunction = __webpack_require__(57),\n    isMasked = __webpack_require__(58),\n    isObject = __webpack_require__(18),\n    toSource = __webpack_require__(60);\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlSXNOYXRpdmUuanM/MjEzYyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaXNGdW5jdGlvbiA9IHJlcXVpcmUoJy4vaXNGdW5jdGlvbicpLFxuICAgIGlzTWFza2VkID0gcmVxdWlyZSgnLi9faXNNYXNrZWQnKSxcbiAgICBpc09iamVjdCA9IHJlcXVpcmUoJy4vaXNPYmplY3QnKSxcbiAgICB0b1NvdXJjZSA9IHJlcXVpcmUoJy4vX3RvU291cmNlJyk7XG5cbi8qKlxuICogVXNlZCB0byBtYXRjaCBgUmVnRXhwYFxuICogW3N5bnRheCBjaGFyYWN0ZXJzXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1wYXR0ZXJucykuXG4gKi9cbnZhciByZVJlZ0V4cENoYXIgPSAvW1xcXFxeJC4qKz8oKVtcXF17fXxdL2c7XG5cbi8qKiBVc2VkIHRvIGRldGVjdCBob3N0IGNvbnN0cnVjdG9ycyAoU2FmYXJpKS4gKi9cbnZhciByZUlzSG9zdEN0b3IgPSAvXlxcW29iamVjdCAuKz9Db25zdHJ1Y3RvclxcXSQvO1xuXG4vKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgZnVuY1Byb3RvID0gRnVuY3Rpb24ucHJvdG90eXBlLFxuICAgIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqIFVzZWQgdG8gcmVzb2x2ZSB0aGUgZGVjb21waWxlZCBzb3VyY2Ugb2YgZnVuY3Rpb25zLiAqL1xudmFyIGZ1bmNUb1N0cmluZyA9IGZ1bmNQcm90by50b1N0cmluZztcblxuLyoqIFVzZWQgdG8gY2hlY2sgb2JqZWN0cyBmb3Igb3duIHByb3BlcnRpZXMuICovXG52YXIgaGFzT3duUHJvcGVydHkgPSBvYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IGlmIGEgbWV0aG9kIGlzIG5hdGl2ZS4gKi9cbnZhciByZUlzTmF0aXZlID0gUmVnRXhwKCdeJyArXG4gIGZ1bmNUb1N0cmluZy5jYWxsKGhhc093blByb3BlcnR5KS5yZXBsYWNlKHJlUmVnRXhwQ2hhciwgJ1xcXFwkJicpXG4gIC5yZXBsYWNlKC9oYXNPd25Qcm9wZXJ0eXwoZnVuY3Rpb24pLio/KD89XFxcXFxcKCl8IGZvciAuKz8oPz1cXFxcXFxdKS9nLCAnJDEuKj8nKSArICckJ1xuKTtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5pc05hdGl2ZWAgd2l0aG91dCBiYWQgc2hpbSBjaGVja3MuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSBuYXRpdmUgZnVuY3Rpb24sXG4gKiAgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBiYXNlSXNOYXRpdmUodmFsdWUpIHtcbiAgaWYgKCFpc09iamVjdCh2YWx1ZSkgfHwgaXNNYXNrZWQodmFsdWUpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHZhciBwYXR0ZXJuID0gaXNGdW5jdGlvbih2YWx1ZSkgPyByZUlzTmF0aXZlIDogcmVJc0hvc3RDdG9yO1xuICByZXR1cm4gcGF0dGVybi50ZXN0KHRvU291cmNlKHZhbHVlKSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZUlzTmF0aXZlO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlSXNOYXRpdmUuanNcbi8vIG1vZHVsZSBpZCA9IDU2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///56\n");

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

eval("var baseGetTag = __webpack_require__(16),\n    isObject = __webpack_require__(18);\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzRnVuY3Rpb24uanM/ODA2YSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYmFzZUdldFRhZyA9IHJlcXVpcmUoJy4vX2Jhc2VHZXRUYWcnKSxcbiAgICBpc09iamVjdCA9IHJlcXVpcmUoJy4vaXNPYmplY3QnKTtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIGFzeW5jVGFnID0gJ1tvYmplY3QgQXN5bmNGdW5jdGlvbl0nLFxuICAgIGZ1bmNUYWcgPSAnW29iamVjdCBGdW5jdGlvbl0nLFxuICAgIGdlblRhZyA9ICdbb2JqZWN0IEdlbmVyYXRvckZ1bmN0aW9uXScsXG4gICAgcHJveHlUYWcgPSAnW29iamVjdCBQcm94eV0nO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGNsYXNzaWZpZWQgYXMgYSBgRnVuY3Rpb25gIG9iamVjdC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDAuMS4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIGZ1bmN0aW9uLCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNGdW5jdGlvbihfKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzRnVuY3Rpb24oL2FiYy8pO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNGdW5jdGlvbih2YWx1ZSkge1xuICBpZiAoIWlzT2JqZWN0KHZhbHVlKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICAvLyBUaGUgdXNlIG9mIGBPYmplY3QjdG9TdHJpbmdgIGF2b2lkcyBpc3N1ZXMgd2l0aCB0aGUgYHR5cGVvZmAgb3BlcmF0b3JcbiAgLy8gaW4gU2FmYXJpIDkgd2hpY2ggcmV0dXJucyAnb2JqZWN0JyBmb3IgdHlwZWQgYXJyYXlzIGFuZCBvdGhlciBjb25zdHJ1Y3RvcnMuXG4gIHZhciB0YWcgPSBiYXNlR2V0VGFnKHZhbHVlKTtcbiAgcmV0dXJuIHRhZyA9PSBmdW5jVGFnIHx8IHRhZyA9PSBnZW5UYWcgfHwgdGFnID09IGFzeW5jVGFnIHx8IHRhZyA9PSBwcm94eVRhZztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc0Z1bmN0aW9uO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL2lzRnVuY3Rpb24uanNcbi8vIG1vZHVsZSBpZCA9IDU3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///57\n");

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

eval("var coreJsData = __webpack_require__(59);\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19pc01hc2tlZC5qcz83ODVhIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBjb3JlSnNEYXRhID0gcmVxdWlyZSgnLi9fY29yZUpzRGF0YScpO1xuXG4vKiogVXNlZCB0byBkZXRlY3QgbWV0aG9kcyBtYXNxdWVyYWRpbmcgYXMgbmF0aXZlLiAqL1xudmFyIG1hc2tTcmNLZXkgPSAoZnVuY3Rpb24oKSB7XG4gIHZhciB1aWQgPSAvW14uXSskLy5leGVjKGNvcmVKc0RhdGEgJiYgY29yZUpzRGF0YS5rZXlzICYmIGNvcmVKc0RhdGEua2V5cy5JRV9QUk9UTyB8fCAnJyk7XG4gIHJldHVybiB1aWQgPyAoJ1N5bWJvbChzcmMpXzEuJyArIHVpZCkgOiAnJztcbn0oKSk7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGBmdW5jYCBoYXMgaXRzIHNvdXJjZSBtYXNrZWQuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGBmdW5jYCBpcyBtYXNrZWQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gaXNNYXNrZWQoZnVuYykge1xuICByZXR1cm4gISFtYXNrU3JjS2V5ICYmIChtYXNrU3JjS2V5IGluIGZ1bmMpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzTWFza2VkO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19pc01hc2tlZC5qc1xuLy8gbW9kdWxlIGlkID0gNThcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///58\n");

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

eval("var root = __webpack_require__(11);\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19jb3JlSnNEYXRhLmpzP2ZhMDgiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHJvb3QgPSByZXF1aXJlKCcuL19yb290Jyk7XG5cbi8qKiBVc2VkIHRvIGRldGVjdCBvdmVycmVhY2hpbmcgY29yZS1qcyBzaGltcy4gKi9cbnZhciBjb3JlSnNEYXRhID0gcm9vdFsnX19jb3JlLWpzX3NoYXJlZF9fJ107XG5cbm1vZHVsZS5leHBvcnRzID0gY29yZUpzRGF0YTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fY29yZUpzRGF0YS5qc1xuLy8gbW9kdWxlIGlkID0gNTlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///59\n");

/***/ }),
/* 60 */
/***/ (function(module, exports) {

eval("/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL190b1NvdXJjZS5qcz8wMjJmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBmdW5jUHJvdG8gPSBGdW5jdGlvbi5wcm90b3R5cGU7XG5cbi8qKiBVc2VkIHRvIHJlc29sdmUgdGhlIGRlY29tcGlsZWQgc291cmNlIG9mIGZ1bmN0aW9ucy4gKi9cbnZhciBmdW5jVG9TdHJpbmcgPSBmdW5jUHJvdG8udG9TdHJpbmc7XG5cbi8qKlxuICogQ29udmVydHMgYGZ1bmNgIHRvIGl0cyBzb3VyY2UgY29kZS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gY29udmVydC5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIHNvdXJjZSBjb2RlLlxuICovXG5mdW5jdGlvbiB0b1NvdXJjZShmdW5jKSB7XG4gIGlmIChmdW5jICE9IG51bGwpIHtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIGZ1bmNUb1N0cmluZy5jYWxsKGZ1bmMpO1xuICAgIH0gY2F0Y2ggKGUpIHt9XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiAoZnVuYyArICcnKTtcbiAgICB9IGNhdGNoIChlKSB7fVxuICB9XG4gIHJldHVybiAnJztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB0b1NvdXJjZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fdG9Tb3VyY2UuanNcbi8vIG1vZHVsZSBpZCA9IDYwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///60\n");

/***/ }),
/* 61 */
/***/ (function(module, exports) {

eval("/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXRWYWx1ZS5qcz85OTMwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2V0cyB0aGUgdmFsdWUgYXQgYGtleWAgb2YgYG9iamVjdGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb2JqZWN0XSBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSBwcm9wZXJ0eSB0byBnZXQuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgcHJvcGVydHkgdmFsdWUuXG4gKi9cbmZ1bmN0aW9uIGdldFZhbHVlKG9iamVjdCwga2V5KSB7XG4gIHJldHVybiBvYmplY3QgPT0gbnVsbCA/IHVuZGVmaW5lZCA6IG9iamVjdFtrZXldO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldFZhbHVlO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19nZXRWYWx1ZS5qc1xuLy8gbW9kdWxlIGlkID0gNjFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///61\n");

/***/ }),
/* 62 */
/***/ (function(module, exports) {

eval("/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19oYXNoRGVsZXRlLmpzP2I5ZWYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZW1vdmVzIGBrZXlgIGFuZCBpdHMgdmFsdWUgZnJvbSB0aGUgaGFzaC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgZGVsZXRlXG4gKiBAbWVtYmVyT2YgSGFzaFxuICogQHBhcmFtIHtPYmplY3R9IGhhc2ggVGhlIGhhc2ggdG8gbW9kaWZ5LlxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byByZW1vdmUuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIGVudHJ5IHdhcyByZW1vdmVkLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGhhc2hEZWxldGUoa2V5KSB7XG4gIHZhciByZXN1bHQgPSB0aGlzLmhhcyhrZXkpICYmIGRlbGV0ZSB0aGlzLl9fZGF0YV9fW2tleV07XG4gIHRoaXMuc2l6ZSAtPSByZXN1bHQgPyAxIDogMDtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBoYXNoRGVsZXRlO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19oYXNoRGVsZXRlLmpzXG4vLyBtb2R1bGUgaWQgPSA2MlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///62\n");

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

eval("var nativeCreate = __webpack_require__(3);\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19oYXNoR2V0LmpzPzc5NTIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIG5hdGl2ZUNyZWF0ZSA9IHJlcXVpcmUoJy4vX25hdGl2ZUNyZWF0ZScpO1xuXG4vKiogVXNlZCB0byBzdGFuZC1pbiBmb3IgYHVuZGVmaW5lZGAgaGFzaCB2YWx1ZXMuICovXG52YXIgSEFTSF9VTkRFRklORUQgPSAnX19sb2Rhc2hfaGFzaF91bmRlZmluZWRfXyc7XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL1xudmFyIGhhc093blByb3BlcnR5ID0gb2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHk7XG5cbi8qKlxuICogR2V0cyB0aGUgaGFzaCB2YWx1ZSBmb3IgYGtleWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGdldFxuICogQG1lbWJlck9mIEhhc2hcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gZ2V0LlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGVudHJ5IHZhbHVlLlxuICovXG5mdW5jdGlvbiBoYXNoR2V0KGtleSkge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX187XG4gIGlmIChuYXRpdmVDcmVhdGUpIHtcbiAgICB2YXIgcmVzdWx0ID0gZGF0YVtrZXldO1xuICAgIHJldHVybiByZXN1bHQgPT09IEhBU0hfVU5ERUZJTkVEID8gdW5kZWZpbmVkIDogcmVzdWx0O1xuICB9XG4gIHJldHVybiBoYXNPd25Qcm9wZXJ0eS5jYWxsKGRhdGEsIGtleSkgPyBkYXRhW2tleV0gOiB1bmRlZmluZWQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaGFzaEdldDtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faGFzaEdldC5qc1xuLy8gbW9kdWxlIGlkID0gNjNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///63\n");

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

eval("var nativeCreate = __webpack_require__(3);\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19oYXNoSGFzLmpzPzQ0NmEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIG5hdGl2ZUNyZWF0ZSA9IHJlcXVpcmUoJy4vX25hdGl2ZUNyZWF0ZScpO1xuXG4vKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi9cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IG9iamVjdFByb3RvLmhhc093blByb3BlcnR5O1xuXG4vKipcbiAqIENoZWNrcyBpZiBhIGhhc2ggdmFsdWUgZm9yIGBrZXlgIGV4aXN0cy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgaGFzXG4gKiBAbWVtYmVyT2YgSGFzaFxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSBlbnRyeSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBhbiBlbnRyeSBmb3IgYGtleWAgZXhpc3RzLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGhhc2hIYXMoa2V5KSB7XG4gIHZhciBkYXRhID0gdGhpcy5fX2RhdGFfXztcbiAgcmV0dXJuIG5hdGl2ZUNyZWF0ZSA/IChkYXRhW2tleV0gIT09IHVuZGVmaW5lZCkgOiBoYXNPd25Qcm9wZXJ0eS5jYWxsKGRhdGEsIGtleSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaGFzaEhhcztcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9faGFzaEhhcy5qc1xuLy8gbW9kdWxlIGlkID0gNjRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///64\n");

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

eval("var nativeCreate = __webpack_require__(3);\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19oYXNoU2V0LmpzPzY3NmEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIG5hdGl2ZUNyZWF0ZSA9IHJlcXVpcmUoJy4vX25hdGl2ZUNyZWF0ZScpO1xuXG4vKiogVXNlZCB0byBzdGFuZC1pbiBmb3IgYHVuZGVmaW5lZGAgaGFzaCB2YWx1ZXMuICovXG52YXIgSEFTSF9VTkRFRklORUQgPSAnX19sb2Rhc2hfaGFzaF91bmRlZmluZWRfXyc7XG5cbi8qKlxuICogU2V0cyB0aGUgaGFzaCBga2V5YCB0byBgdmFsdWVgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBzZXRcbiAqIEBtZW1iZXJPZiBIYXNoXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHNldC5cbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHNldC5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGhhc2ggaW5zdGFuY2UuXG4gKi9cbmZ1bmN0aW9uIGhhc2hTZXQoa2V5LCB2YWx1ZSkge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX187XG4gIHRoaXMuc2l6ZSArPSB0aGlzLmhhcyhrZXkpID8gMCA6IDE7XG4gIGRhdGFba2V5XSA9IChuYXRpdmVDcmVhdGUgJiYgdmFsdWUgPT09IHVuZGVmaW5lZCkgPyBIQVNIX1VOREVGSU5FRCA6IHZhbHVlO1xuICByZXR1cm4gdGhpcztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBoYXNoU2V0O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19oYXNoU2V0LmpzXG4vLyBtb2R1bGUgaWQgPSA2NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///65\n");

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

eval("var listCacheClear = __webpack_require__(67),\n    listCacheDelete = __webpack_require__(68),\n    listCacheGet = __webpack_require__(70),\n    listCacheHas = __webpack_require__(71),\n    listCacheSet = __webpack_require__(72);\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19MaXN0Q2FjaGUuanM/NzZlMCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbGlzdENhY2hlQ2xlYXIgPSByZXF1aXJlKCcuL19saXN0Q2FjaGVDbGVhcicpLFxuICAgIGxpc3RDYWNoZURlbGV0ZSA9IHJlcXVpcmUoJy4vX2xpc3RDYWNoZURlbGV0ZScpLFxuICAgIGxpc3RDYWNoZUdldCA9IHJlcXVpcmUoJy4vX2xpc3RDYWNoZUdldCcpLFxuICAgIGxpc3RDYWNoZUhhcyA9IHJlcXVpcmUoJy4vX2xpc3RDYWNoZUhhcycpLFxuICAgIGxpc3RDYWNoZVNldCA9IHJlcXVpcmUoJy4vX2xpc3RDYWNoZVNldCcpO1xuXG4vKipcbiAqIENyZWF0ZXMgYW4gbGlzdCBjYWNoZSBvYmplY3QuXG4gKlxuICogQHByaXZhdGVcbiAqIEBjb25zdHJ1Y3RvclxuICogQHBhcmFtIHtBcnJheX0gW2VudHJpZXNdIFRoZSBrZXktdmFsdWUgcGFpcnMgdG8gY2FjaGUuXG4gKi9cbmZ1bmN0aW9uIExpc3RDYWNoZShlbnRyaWVzKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgbGVuZ3RoID0gZW50cmllcyA9PSBudWxsID8gMCA6IGVudHJpZXMubGVuZ3RoO1xuXG4gIHRoaXMuY2xlYXIoKTtcbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICB2YXIgZW50cnkgPSBlbnRyaWVzW2luZGV4XTtcbiAgICB0aGlzLnNldChlbnRyeVswXSwgZW50cnlbMV0pO1xuICB9XG59XG5cbi8vIEFkZCBtZXRob2RzIHRvIGBMaXN0Q2FjaGVgLlxuTGlzdENhY2hlLnByb3RvdHlwZS5jbGVhciA9IGxpc3RDYWNoZUNsZWFyO1xuTGlzdENhY2hlLnByb3RvdHlwZVsnZGVsZXRlJ10gPSBsaXN0Q2FjaGVEZWxldGU7XG5MaXN0Q2FjaGUucHJvdG90eXBlLmdldCA9IGxpc3RDYWNoZUdldDtcbkxpc3RDYWNoZS5wcm90b3R5cGUuaGFzID0gbGlzdENhY2hlSGFzO1xuTGlzdENhY2hlLnByb3RvdHlwZS5zZXQgPSBsaXN0Q2FjaGVTZXQ7XG5cbm1vZHVsZS5leHBvcnRzID0gTGlzdENhY2hlO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19MaXN0Q2FjaGUuanNcbi8vIG1vZHVsZSBpZCA9IDY2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///66\n");

/***/ }),
/* 67 */
/***/ (function(module, exports) {

eval("/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19saXN0Q2FjaGVDbGVhci5qcz81YjEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmVtb3ZlcyBhbGwga2V5LXZhbHVlIGVudHJpZXMgZnJvbSB0aGUgbGlzdCBjYWNoZS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgY2xlYXJcbiAqIEBtZW1iZXJPZiBMaXN0Q2FjaGVcbiAqL1xuZnVuY3Rpb24gbGlzdENhY2hlQ2xlYXIoKSB7XG4gIHRoaXMuX19kYXRhX18gPSBbXTtcbiAgdGhpcy5zaXplID0gMDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBsaXN0Q2FjaGVDbGVhcjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbGlzdENhY2hlQ2xlYXIuanNcbi8vIG1vZHVsZSBpZCA9IDY3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///67\n");

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

eval("var assocIndexOf = __webpack_require__(4);\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19saXN0Q2FjaGVEZWxldGUuanM/NzQ1YSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXNzb2NJbmRleE9mID0gcmVxdWlyZSgnLi9fYXNzb2NJbmRleE9mJyk7XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBhcnJheVByb3RvID0gQXJyYXkucHJvdG90eXBlO1xuXG4vKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi9cbnZhciBzcGxpY2UgPSBhcnJheVByb3RvLnNwbGljZTtcblxuLyoqXG4gKiBSZW1vdmVzIGBrZXlgIGFuZCBpdHMgdmFsdWUgZnJvbSB0aGUgbGlzdCBjYWNoZS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgZGVsZXRlXG4gKiBAbWVtYmVyT2YgTGlzdENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHJlbW92ZS5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgZW50cnkgd2FzIHJlbW92ZWQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gbGlzdENhY2hlRGVsZXRlKGtleSkge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX18sXG4gICAgICBpbmRleCA9IGFzc29jSW5kZXhPZihkYXRhLCBrZXkpO1xuXG4gIGlmIChpbmRleCA8IDApIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgdmFyIGxhc3RJbmRleCA9IGRhdGEubGVuZ3RoIC0gMTtcbiAgaWYgKGluZGV4ID09IGxhc3RJbmRleCkge1xuICAgIGRhdGEucG9wKCk7XG4gIH0gZWxzZSB7XG4gICAgc3BsaWNlLmNhbGwoZGF0YSwgaW5kZXgsIDEpO1xuICB9XG4gIC0tdGhpcy5zaXplO1xuICByZXR1cm4gdHJ1ZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBsaXN0Q2FjaGVEZWxldGU7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2xpc3RDYWNoZURlbGV0ZS5qc1xuLy8gbW9kdWxlIGlkID0gNjhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///68\n");

/***/ }),
/* 69 */
/***/ (function(module, exports) {

eval("/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL2VxLmpzP2RiNjAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBQZXJmb3JtcyBhXG4gKiBbYFNhbWVWYWx1ZVplcm9gXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1zYW1ldmFsdWV6ZXJvKVxuICogY29tcGFyaXNvbiBiZXR3ZWVuIHR3byB2YWx1ZXMgdG8gZGV0ZXJtaW5lIGlmIHRoZXkgYXJlIGVxdWl2YWxlbnQuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNvbXBhcmUuXG4gKiBAcGFyYW0geyp9IG90aGVyIFRoZSBvdGhlciB2YWx1ZSB0byBjb21wYXJlLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSB2YWx1ZXMgYXJlIGVxdWl2YWxlbnQsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogdmFyIG9iamVjdCA9IHsgJ2EnOiAxIH07XG4gKiB2YXIgb3RoZXIgPSB7ICdhJzogMSB9O1xuICpcbiAqIF8uZXEob2JqZWN0LCBvYmplY3QpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uZXEob2JqZWN0LCBvdGhlcik7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uZXEoJ2EnLCAnYScpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uZXEoJ2EnLCBPYmplY3QoJ2EnKSk7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uZXEoTmFOLCBOYU4pO1xuICogLy8gPT4gdHJ1ZVxuICovXG5mdW5jdGlvbiBlcSh2YWx1ZSwgb3RoZXIpIHtcbiAgcmV0dXJuIHZhbHVlID09PSBvdGhlciB8fCAodmFsdWUgIT09IHZhbHVlICYmIG90aGVyICE9PSBvdGhlcik7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZXE7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvZXEuanNcbi8vIG1vZHVsZSBpZCA9IDY5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///69\n");

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

eval("var assocIndexOf = __webpack_require__(4);\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19saXN0Q2FjaGVHZXQuanM/MjQxYiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXNzb2NJbmRleE9mID0gcmVxdWlyZSgnLi9fYXNzb2NJbmRleE9mJyk7XG5cbi8qKlxuICogR2V0cyB0aGUgbGlzdCBjYWNoZSB2YWx1ZSBmb3IgYGtleWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGdldFxuICogQG1lbWJlck9mIExpc3RDYWNoZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBnZXQuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgZW50cnkgdmFsdWUuXG4gKi9cbmZ1bmN0aW9uIGxpc3RDYWNoZUdldChrZXkpIHtcbiAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fLFxuICAgICAgaW5kZXggPSBhc3NvY0luZGV4T2YoZGF0YSwga2V5KTtcblxuICByZXR1cm4gaW5kZXggPCAwID8gdW5kZWZpbmVkIDogZGF0YVtpbmRleF1bMV07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbGlzdENhY2hlR2V0O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19saXN0Q2FjaGVHZXQuanNcbi8vIG1vZHVsZSBpZCA9IDcwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///70\n");

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

eval("var assocIndexOf = __webpack_require__(4);\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19saXN0Q2FjaGVIYXMuanM/ZDg3YiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXNzb2NJbmRleE9mID0gcmVxdWlyZSgnLi9fYXNzb2NJbmRleE9mJyk7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGEgbGlzdCBjYWNoZSB2YWx1ZSBmb3IgYGtleWAgZXhpc3RzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBoYXNcbiAqIEBtZW1iZXJPZiBMaXN0Q2FjaGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgZW50cnkgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYW4gZW50cnkgZm9yIGBrZXlgIGV4aXN0cywgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBsaXN0Q2FjaGVIYXMoa2V5KSB7XG4gIHJldHVybiBhc3NvY0luZGV4T2YodGhpcy5fX2RhdGFfXywga2V5KSA+IC0xO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGxpc3RDYWNoZUhhcztcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbGlzdENhY2hlSGFzLmpzXG4vLyBtb2R1bGUgaWQgPSA3MVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///71\n");

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

eval("var assocIndexOf = __webpack_require__(4);\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19saXN0Q2FjaGVTZXQuanM/NzVlNSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXNzb2NJbmRleE9mID0gcmVxdWlyZSgnLi9fYXNzb2NJbmRleE9mJyk7XG5cbi8qKlxuICogU2V0cyB0aGUgbGlzdCBjYWNoZSBga2V5YCB0byBgdmFsdWVgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBzZXRcbiAqIEBtZW1iZXJPZiBMaXN0Q2FjaGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gc2V0LlxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gc2V0LlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgbGlzdCBjYWNoZSBpbnN0YW5jZS5cbiAqL1xuZnVuY3Rpb24gbGlzdENhY2hlU2V0KGtleSwgdmFsdWUpIHtcbiAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fLFxuICAgICAgaW5kZXggPSBhc3NvY0luZGV4T2YoZGF0YSwga2V5KTtcblxuICBpZiAoaW5kZXggPCAwKSB7XG4gICAgKyt0aGlzLnNpemU7XG4gICAgZGF0YS5wdXNoKFtrZXksIHZhbHVlXSk7XG4gIH0gZWxzZSB7XG4gICAgZGF0YVtpbmRleF1bMV0gPSB2YWx1ZTtcbiAgfVxuICByZXR1cm4gdGhpcztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBsaXN0Q2FjaGVTZXQ7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2xpc3RDYWNoZVNldC5qc1xuLy8gbW9kdWxlIGlkID0gNzJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///72\n");

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

eval("var getNative = __webpack_require__(17),\n    root = __webpack_require__(11);\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19NYXAuanM/M2NlNiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2V0TmF0aXZlID0gcmVxdWlyZSgnLi9fZ2V0TmF0aXZlJyksXG4gICAgcm9vdCA9IHJlcXVpcmUoJy4vX3Jvb3QnKTtcblxuLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgdGhhdCBhcmUgdmVyaWZpZWQgdG8gYmUgbmF0aXZlLiAqL1xudmFyIE1hcCA9IGdldE5hdGl2ZShyb290LCAnTWFwJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gTWFwO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19NYXAuanNcbi8vIG1vZHVsZSBpZCA9IDczXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///73\n");

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

eval("var getMapData = __webpack_require__(5);\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19tYXBDYWNoZURlbGV0ZS5qcz8wM2Q5Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBnZXRNYXBEYXRhID0gcmVxdWlyZSgnLi9fZ2V0TWFwRGF0YScpO1xuXG4vKipcbiAqIFJlbW92ZXMgYGtleWAgYW5kIGl0cyB2YWx1ZSBmcm9tIHRoZSBtYXAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGRlbGV0ZVxuICogQG1lbWJlck9mIE1hcENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHJlbW92ZS5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgZW50cnkgd2FzIHJlbW92ZWQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gbWFwQ2FjaGVEZWxldGUoa2V5KSB7XG4gIHZhciByZXN1bHQgPSBnZXRNYXBEYXRhKHRoaXMsIGtleSlbJ2RlbGV0ZSddKGtleSk7XG4gIHRoaXMuc2l6ZSAtPSByZXN1bHQgPyAxIDogMDtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBtYXBDYWNoZURlbGV0ZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2xvZGFzaC9fbWFwQ2FjaGVEZWxldGUuanNcbi8vIG1vZHVsZSBpZCA9IDc0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///74\n");

/***/ }),
/* 75 */
/***/ (function(module, exports) {

eval("/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19pc0tleWFibGUuanM/ZmM4ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIHN1aXRhYmxlIGZvciB1c2UgYXMgdW5pcXVlIG9iamVjdCBrZXkuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgc3VpdGFibGUsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gaXNLZXlhYmxlKHZhbHVlKSB7XG4gIHZhciB0eXBlID0gdHlwZW9mIHZhbHVlO1xuICByZXR1cm4gKHR5cGUgPT0gJ3N0cmluZycgfHwgdHlwZSA9PSAnbnVtYmVyJyB8fCB0eXBlID09ICdzeW1ib2wnIHx8IHR5cGUgPT0gJ2Jvb2xlYW4nKVxuICAgID8gKHZhbHVlICE9PSAnX19wcm90b19fJylcbiAgICA6ICh2YWx1ZSA9PT0gbnVsbCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNLZXlhYmxlO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19pc0tleWFibGUuanNcbi8vIG1vZHVsZSBpZCA9IDc1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///75\n");

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

eval("var getMapData = __webpack_require__(5);\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19tYXBDYWNoZUdldC5qcz9iZmMwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBnZXRNYXBEYXRhID0gcmVxdWlyZSgnLi9fZ2V0TWFwRGF0YScpO1xuXG4vKipcbiAqIEdldHMgdGhlIG1hcCB2YWx1ZSBmb3IgYGtleWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGdldFxuICogQG1lbWJlck9mIE1hcENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIGdldC5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBlbnRyeSB2YWx1ZS5cbiAqL1xuZnVuY3Rpb24gbWFwQ2FjaGVHZXQoa2V5KSB7XG4gIHJldHVybiBnZXRNYXBEYXRhKHRoaXMsIGtleSkuZ2V0KGtleSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbWFwQ2FjaGVHZXQ7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcENhY2hlR2V0LmpzXG4vLyBtb2R1bGUgaWQgPSA3NlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///76\n");

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

eval("var getMapData = __webpack_require__(5);\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19tYXBDYWNoZUhhcy5qcz82YTA4Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBnZXRNYXBEYXRhID0gcmVxdWlyZSgnLi9fZ2V0TWFwRGF0YScpO1xuXG4vKipcbiAqIENoZWNrcyBpZiBhIG1hcCB2YWx1ZSBmb3IgYGtleWAgZXhpc3RzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBoYXNcbiAqIEBtZW1iZXJPZiBNYXBDYWNoZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSBlbnRyeSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBhbiBlbnRyeSBmb3IgYGtleWAgZXhpc3RzLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIG1hcENhY2hlSGFzKGtleSkge1xuICByZXR1cm4gZ2V0TWFwRGF0YSh0aGlzLCBrZXkpLmhhcyhrZXkpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG1hcENhY2hlSGFzO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvbG9kYXNoL19tYXBDYWNoZUhhcy5qc1xuLy8gbW9kdWxlIGlkID0gNzdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///77\n");

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

eval("var getMapData = __webpack_require__(5);\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19tYXBDYWNoZVNldC5qcz8wZWZkIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBnZXRNYXBEYXRhID0gcmVxdWlyZSgnLi9fZ2V0TWFwRGF0YScpO1xuXG4vKipcbiAqIFNldHMgdGhlIG1hcCBga2V5YCB0byBgdmFsdWVgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBzZXRcbiAqIEBtZW1iZXJPZiBNYXBDYWNoZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBzZXQuXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBzZXQuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBtYXAgY2FjaGUgaW5zdGFuY2UuXG4gKi9cbmZ1bmN0aW9uIG1hcENhY2hlU2V0KGtleSwgdmFsdWUpIHtcbiAgdmFyIGRhdGEgPSBnZXRNYXBEYXRhKHRoaXMsIGtleSksXG4gICAgICBzaXplID0gZGF0YS5zaXplO1xuXG4gIGRhdGEuc2V0KGtleSwgdmFsdWUpO1xuICB0aGlzLnNpemUgKz0gZGF0YS5zaXplID09IHNpemUgPyAwIDogMTtcbiAgcmV0dXJuIHRoaXM7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbWFwQ2FjaGVTZXQ7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX21hcENhY2hlU2V0LmpzXG4vLyBtb2R1bGUgaWQgPSA3OFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///78\n");

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

eval("var baseToString = __webpack_require__(80);\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL3RvU3RyaW5nLmpzPzY1M2QiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGJhc2VUb1N0cmluZyA9IHJlcXVpcmUoJy4vX2Jhc2VUb1N0cmluZycpO1xuXG4vKipcbiAqIENvbnZlcnRzIGB2YWx1ZWAgdG8gYSBzdHJpbmcuIEFuIGVtcHR5IHN0cmluZyBpcyByZXR1cm5lZCBmb3IgYG51bGxgXG4gKiBhbmQgYHVuZGVmaW5lZGAgdmFsdWVzLiBUaGUgc2lnbiBvZiBgLTBgIGlzIHByZXNlcnZlZC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY29udmVydC5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIGNvbnZlcnRlZCBzdHJpbmcuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8udG9TdHJpbmcobnVsbCk7XG4gKiAvLyA9PiAnJ1xuICpcbiAqIF8udG9TdHJpbmcoLTApO1xuICogLy8gPT4gJy0wJ1xuICpcbiAqIF8udG9TdHJpbmcoWzEsIDIsIDNdKTtcbiAqIC8vID0+ICcxLDIsMydcbiAqL1xuZnVuY3Rpb24gdG9TdHJpbmcodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlID09IG51bGwgPyAnJyA6IGJhc2VUb1N0cmluZyh2YWx1ZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gdG9TdHJpbmc7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvdG9TdHJpbmcuanNcbi8vIG1vZHVsZSBpZCA9IDc5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///79\n");

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

eval("var Symbol = __webpack_require__(10),\n    arrayMap = __webpack_require__(81),\n    isArray = __webpack_require__(8),\n    isSymbol = __webpack_require__(9);\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19iYXNlVG9TdHJpbmcuanM/YTM2OSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgU3ltYm9sID0gcmVxdWlyZSgnLi9fU3ltYm9sJyksXG4gICAgYXJyYXlNYXAgPSByZXF1aXJlKCcuL19hcnJheU1hcCcpLFxuICAgIGlzQXJyYXkgPSByZXF1aXJlKCcuL2lzQXJyYXknKSxcbiAgICBpc1N5bWJvbCA9IHJlcXVpcmUoJy4vaXNTeW1ib2wnKTtcblxuLyoqIFVzZWQgYXMgcmVmZXJlbmNlcyBmb3IgdmFyaW91cyBgTnVtYmVyYCBjb25zdGFudHMuICovXG52YXIgSU5GSU5JVFkgPSAxIC8gMDtcblxuLyoqIFVzZWQgdG8gY29udmVydCBzeW1ib2xzIHRvIHByaW1pdGl2ZXMgYW5kIHN0cmluZ3MuICovXG52YXIgc3ltYm9sUHJvdG8gPSBTeW1ib2wgPyBTeW1ib2wucHJvdG90eXBlIDogdW5kZWZpbmVkLFxuICAgIHN5bWJvbFRvU3RyaW5nID0gc3ltYm9sUHJvdG8gPyBzeW1ib2xQcm90by50b1N0cmluZyA6IHVuZGVmaW5lZDtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy50b1N0cmluZ2Agd2hpY2ggZG9lc24ndCBjb252ZXJ0IG51bGxpc2hcbiAqIHZhbHVlcyB0byBlbXB0eSBzdHJpbmdzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBwcm9jZXNzLlxuICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgc3RyaW5nLlxuICovXG5mdW5jdGlvbiBiYXNlVG9TdHJpbmcodmFsdWUpIHtcbiAgLy8gRXhpdCBlYXJseSBmb3Igc3RyaW5ncyB0byBhdm9pZCBhIHBlcmZvcm1hbmNlIGhpdCBpbiBzb21lIGVudmlyb25tZW50cy5cbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuICBpZiAoaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAvLyBSZWN1cnNpdmVseSBjb252ZXJ0IHZhbHVlcyAoc3VzY2VwdGlibGUgdG8gY2FsbCBzdGFjayBsaW1pdHMpLlxuICAgIHJldHVybiBhcnJheU1hcCh2YWx1ZSwgYmFzZVRvU3RyaW5nKSArICcnO1xuICB9XG4gIGlmIChpc1N5bWJvbCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gc3ltYm9sVG9TdHJpbmcgPyBzeW1ib2xUb1N0cmluZy5jYWxsKHZhbHVlKSA6ICcnO1xuICB9XG4gIHZhciByZXN1bHQgPSAodmFsdWUgKyAnJyk7XG4gIHJldHVybiAocmVzdWx0ID09ICcwJyAmJiAoMSAvIHZhbHVlKSA9PSAtSU5GSU5JVFkpID8gJy0wJyA6IHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlVG9TdHJpbmc7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2Jhc2VUb1N0cmluZy5qc1xuLy8gbW9kdWxlIGlkID0gODBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///80\n");

/***/ }),
/* 81 */
/***/ (function(module, exports) {

eval("/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL19hcnJheU1hcC5qcz8xZjE3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBfLm1hcGAgZm9yIGFycmF5cyB3aXRob3V0IHN1cHBvcnQgZm9yIGl0ZXJhdGVlXG4gKiBzaG9ydGhhbmRzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fSBbYXJyYXldIFRoZSBhcnJheSB0byBpdGVyYXRlIG92ZXIuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBuZXcgbWFwcGVkIGFycmF5LlxuICovXG5mdW5jdGlvbiBhcnJheU1hcChhcnJheSwgaXRlcmF0ZWUpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSBhcnJheSA9PSBudWxsID8gMCA6IGFycmF5Lmxlbmd0aCxcbiAgICAgIHJlc3VsdCA9IEFycmF5KGxlbmd0aCk7XG5cbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICByZXN1bHRbaW5kZXhdID0gaXRlcmF0ZWUoYXJyYXlbaW5kZXhdLCBpbmRleCwgYXJyYXkpO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYXJyYXlNYXA7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX2FycmF5TWFwLmpzXG4vLyBtb2R1bGUgaWQgPSA4MVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///81\n");

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

eval("var isSymbol = __webpack_require__(9);\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoL190b0tleS5qcz81MWI4Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBpc1N5bWJvbCA9IHJlcXVpcmUoJy4vaXNTeW1ib2wnKTtcblxuLyoqIFVzZWQgYXMgcmVmZXJlbmNlcyBmb3IgdmFyaW91cyBgTnVtYmVyYCBjb25zdGFudHMuICovXG52YXIgSU5GSU5JVFkgPSAxIC8gMDtcblxuLyoqXG4gKiBDb252ZXJ0cyBgdmFsdWVgIHRvIGEgc3RyaW5nIGtleSBpZiBpdCdzIG5vdCBhIHN0cmluZyBvciBzeW1ib2wuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGluc3BlY3QuXG4gKiBAcmV0dXJucyB7c3RyaW5nfHN5bWJvbH0gUmV0dXJucyB0aGUga2V5LlxuICovXG5mdW5jdGlvbiB0b0tleSh2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09ICdzdHJpbmcnIHx8IGlzU3ltYm9sKHZhbHVlKSkge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuICB2YXIgcmVzdWx0ID0gKHZhbHVlICsgJycpO1xuICByZXR1cm4gKHJlc3VsdCA9PSAnMCcgJiYgKDEgLyB2YWx1ZSkgPT0gLUlORklOSVRZKSA/ICctMCcgOiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gdG9LZXk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9sb2Rhc2gvX3RvS2V5LmpzXG4vLyBtb2R1bGUgaWQgPSA4MlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///82\n");

/***/ }),
/* 83 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__L_PM_Edit__ = __webpack_require__(1);\n\n__WEBPACK_IMPORTED_MODULE_0__L_PM_Edit__[\"a\" /* default */].Poly = __WEBPACK_IMPORTED_MODULE_0__L_PM_Edit__[\"a\" /* default */].Line.extend({// this is a bit weird but... Polygons are completely supported by L.PM.Edit.Line now 😲.\n  // I'll keep this class in case there is something Polygon-specific that we'd need in the future.\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvRWRpdC9MLlBNLkVkaXQuUG9seS5qcz9mMGUxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFZGl0IGZyb20gJy4vTC5QTS5FZGl0JztcbkVkaXQuUG9seSA9IEVkaXQuTGluZS5leHRlbmQoey8vIHRoaXMgaXMgYSBiaXQgd2VpcmQgYnV0Li4uIFBvbHlnb25zIGFyZSBjb21wbGV0ZWx5IHN1cHBvcnRlZCBieSBMLlBNLkVkaXQuTGluZSBub3cg8J+Ysi5cbiAgLy8gSSdsbCBrZWVwIHRoaXMgY2xhc3MgaW4gY2FzZSB0aGVyZSBpcyBzb21ldGhpbmcgUG9seWdvbi1zcGVjaWZpYyB0aGF0IHdlJ2QgbmVlZCBpbiB0aGUgZnV0dXJlLlxufSk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvRWRpdC9MLlBNLkVkaXQuUG9seS5qc1xuLy8gbW9kdWxlIGlkID0gODNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///83\n");

/***/ }),
/* 84 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__L_PM_Edit__ = __webpack_require__(1);\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n// Corner detection based on Leaflet Draw's Edit.Rectangle.js Class:\n// https://github.com/Leaflet/Leaflet.draw/blob/master/src/edit/handler/Edit.Rectangle.js\n\n__WEBPACK_IMPORTED_MODULE_0__L_PM_Edit__[\"a\" /* default */].Rectangle = __WEBPACK_IMPORTED_MODULE_0__L_PM_Edit__[\"a\" /* default */].Poly.extend({\n  // initializes Rectangle Markers\n  _initMarkers: function _initMarkers() {\n    var map = this._map;\n\n    var corners = this._findCorners(); // cleanup old ones first\n\n\n    if (this._markerGroup) {\n      this._markerGroup.clearLayers();\n    } // add markerGroup to map, markerGroup includes regular and middle markers\n\n\n    this._markerGroup = new L.LayerGroup();\n    this._markerGroup._pmTempLayer = true;\n    map.addLayer(this._markerGroup); // create markers for four corners of rectangle\n\n    this._markers = []; // nest set of corner markers in a 2D array so that we can Cut this Rectangle, if needed\n\n    this._markers[0] = corners.map(this._createMarker, this); // convenience alias, for better readability\n\n    var _this$_markers = _slicedToArray(this._markers, 1);\n\n    this._cornerMarkers = _this$_markers[0];\n\n    if (this.options.snappable) {\n      this._initSnappableMarkers();\n    }\n  },\n  // creates initial markers for coordinates\n  _createMarker: function _createMarker(latlng, index) {\n    var marker = new L.Marker(latlng, {\n      draggable: true,\n      icon: L.divIcon({\n        className: 'marker-icon'\n      })\n    });\n    marker._origLatLng = latlng;\n    marker._index = index;\n    marker._pmTempLayer = true;\n    marker.on('dragstart', this._onMarkerDragStart, this);\n    marker.on('drag', this._onMarkerDrag, this);\n    marker.on('dragend', this._onMarkerDragEnd, this);\n    marker.on('pm:snap', this._adjustRectangleForMarkerSnap, this);\n\n    if (!this.options.preventMarkerRemoval) {\n      marker.on('contextmenu', this._removeMarker, this);\n    }\n\n    this._markerGroup.addLayer(marker);\n\n    return marker;\n  },\n  // Empty callback for 'contextmenu' binding set in L.PM.Edit.Line.js's _createMarker method (AKA, right-click on marker event)\n  // (A Rectangle is designed to always remain a \"true\" rectangle -- if you want it editable, use Polygon Tool instead!!!)\n  _removeMarker: function _removeMarker() {\n    // The method, it does nothing!!!\n    return null;\n  },\n  _onMarkerDragStart: function _onMarkerDragStart(e) {\n    // dragged marker\n    var draggedMarker = e.target; // Store/update a reference to marker in opposite corner\n\n    var corners = this._findCorners();\n\n    draggedMarker._oppositeCornerLatLng = corners[(draggedMarker._index + 2) % 4]; // Automatically unsnap all markers on drag start (they'll snap back if close enough to another snappable object)\n    // (Without this, it's occasionally possible for a marker to get stuck as 'snapped,' which prevents Rectangle resizing)\n\n    draggedMarker._snapped = false;\n\n    this._layer.fire('pm:markerdragstart', {\n      markerEvent: e\n    });\n  },\n  _onMarkerDrag: function _onMarkerDrag(e) {\n    // dragged marker\n    var draggedMarker = e.target; // only continue if this is NOT a middle marker (should NEVER be one, but this is just a safety check)\n\n    if (draggedMarker._index === undefined) {\n      return;\n    } // If marker is currently snapped to an object, then ignore all drag events (as this resets rectangle shape)\n\n\n    if (!draggedMarker._snapped) {\n      this._adjustRectangleForMarkerMove(draggedMarker);\n    }\n  },\n  _onMarkerDragEnd: function _onMarkerDragEnd(e) {\n    var corners = this._findCorners(); // Reposition ALL markers (so that indices are correctly correlated with corner order (NW, NE, SE, SW))\n\n\n    this._adjustAllMarkers(corners); // Clean-up data attributes\n\n\n    this._cornerMarkers.forEach(function (m) {\n      delete m._oppositeCornerLatLng;\n    }); // Update bounding box\n\n\n    this._layer.setLatLngs(corners); // Redraw the shape a final time\n\n\n    this._layer.redraw();\n\n    this._layer.fire('pm:markerdragend', {\n      markerEvent: e\n    }); // fire edit event\n\n\n    this._fireEdit();\n  },\n  // adjusts the rectangle's size and bounds whenever a marker is moved\n  // params: movedMarker -- the Marker object\n  _adjustRectangleForMarkerMove: function _adjustRectangleForMarkerMove(movedMarker) {\n    // update moved marker coordinates\n    L.extend(movedMarker._origLatLng, movedMarker._latlng); // update rectangle boundaries, based on moved marker's new LatLng and cached opposite corner's LatLng\n\n    var movedLatLng = movedMarker.getLatLng();\n\n    this._layer.setBounds(L.latLngBounds(movedLatLng, movedMarker._oppositeCornerLatLng)); // Reposition the markers at each corner\n\n\n    this._adjustAdjacentMarkers(movedMarker); // Redraw the shape (to update altered rectangle)\n\n\n    this._layer.redraw();\n  },\n  // adjusts the rectangle's size and bounds whenever a marker snaps to another polygon\n  // params: e -- the snap event\n  _adjustRectangleForMarkerSnap: function _adjustRectangleForMarkerSnap(e) {\n    if (!this.options.snappable) {\n      return;\n    }\n\n    var snappedMarker = e.target;\n\n    this._adjustRectangleForMarkerMove(snappedMarker);\n  },\n  // adjusts the position of all Markers\n  // params: markerLatLngs -- an array of exactly LatLng objects\n  _adjustAllMarkers: function _adjustAllMarkers(markerLatLngs) {\n    if (!markerLatLngs.length || markerLatLngs.length !== 4) {\n      /* eslint-disable-next-line no-console */\n      console.error('_adjustAllMarkers() requires an array of EXACTLY 4 LatLng coordinates');\n      return;\n    }\n\n    this._cornerMarkers.forEach(function (marker, index) {\n      marker.setLatLng(markerLatLngs[index]);\n    });\n  },\n  // adjusts the position of the two Markers adjacent to the Marker specified\n  // params: anchorMarker -- the Marker object used to determine adjacent Markers\n  _adjustAdjacentMarkers: function _adjustAdjacentMarkers(anchorMarker) {\n    if (!anchorMarker || !anchorMarker.getLatLng || !anchorMarker._oppositeCornerLatLng) {\n      /* eslint-disable-next-line no-console */\n      console.error('_adjustAdjacentMarkers() requires a valid Marker object');\n      return;\n    }\n\n    var anchorLatLng = anchorMarker.getLatLng();\n    var oppositeLatLng = anchorMarker._oppositeCornerLatLng; // Find two corners not currently occupied by dragged marker and its opposite corner\n\n    var unmarkedCorners = [];\n\n    var corners = this._findCorners();\n\n    corners.forEach(function (corner) {\n      if (!corner.equals(anchorLatLng) && !corner.equals(oppositeLatLng)) {\n        unmarkedCorners.push(corner);\n      }\n    }); // reposition markers for those corners\n\n    var unmarkedCornerIndex = 0;\n\n    if (unmarkedCorners.length === 2) {\n      this._cornerMarkers.forEach(function (marker) {\n        var markerLatLng = marker.getLatLng();\n\n        if (!markerLatLng.equals(anchorLatLng) && !markerLatLng.equals(oppositeLatLng)) {\n          marker.setLatLng(unmarkedCorners[unmarkedCornerIndex]);\n          unmarkedCornerIndex += 1;\n        }\n      });\n    }\n  },\n  // finds the 4 corners of the current bounding box\n  // returns array of 4 LatLng objects in this order: Northwest corner, Northeast corner, Southeast corner, Southwest corner\n  _findCorners: function _findCorners() {\n    var corners = this._layer.getBounds();\n\n    var northwest = corners.getNorthWest();\n    var northeast = corners.getNorthEast();\n    var southeast = corners.getSouthEast();\n    var southwest = corners.getSouthWest();\n    return [northwest, northeast, southeast, southwest];\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///84\n");

/***/ }),
/* 85 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__L_PM_Edit__ = __webpack_require__(1);\n\n__WEBPACK_IMPORTED_MODULE_0__L_PM_Edit__[\"a\" /* default */].Circle = __WEBPACK_IMPORTED_MODULE_0__L_PM_Edit__[\"a\" /* default */].extend({\n  initialize: function initialize(layer) {\n    this._layer = layer;\n    this._enabled = false;\n  },\n  toggleEdit: function toggleEdit(options) {\n    if (!this.enabled()) {\n      this.enable(options);\n    } else {\n      this.disable();\n    }\n  },\n  enabled: function enabled() {\n    return this._enabled;\n  },\n  enable: function enable(options) {\n    var _this = this;\n\n    L.Util.setOptions(this, options);\n    this._map = this._layer._map;\n\n    if (!this.enabled()) {\n      // if it was already enabled, disable first\n      // we don't block enabling again because new options might be passed\n      this.disable();\n    } // change state\n\n\n    this._enabled = true; // // init markers\n\n    this._initMarkers(); // if polygon gets removed from map, disable edit mode\n\n\n    this._layer.on('remove', function (e) {\n      _this.disable(e.target);\n    });\n  },\n  disable: function disable() {\n    var layer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._layer;\n\n    // if it's not enabled, it doesn't need to be disabled\n    if (!this.enabled()) {\n      return false;\n    } // prevent disabling if layer is being dragged\n\n\n    if (layer.pm._dragging) {\n      return false;\n    }\n\n    layer.pm._enabled = false;\n\n    layer.pm._helperLayers.clearLayers(); // clean up draggable\n\n\n    layer.off('mousedown');\n    layer.off('mouseup'); // remove draggable class\n\n    var el = layer._path ? layer._path : this._layer._renderer._container;\n    L.DomUtil.removeClass(el, 'leaflet-pm-draggable');\n\n    if (this._layerEdited) {\n      this._layer.fire('pm:update', {});\n    }\n\n    this._layerEdited = false;\n    return true;\n  },\n  _initMarkers: function _initMarkers() {\n    var map = this._map; // cleanup old ones first\n\n    if (this._helperLayers) {\n      this._helperLayers.clearLayers();\n    } // add markerGroup to map, markerGroup includes regular and middle markers\n\n\n    this._helperLayers = new L.LayerGroup();\n    this._helperLayers._pmTempLayer = true;\n\n    this._helperLayers.addTo(map); // create marker for each coordinate\n\n\n    var center = this._layer.getLatLng();\n\n    var radius = this._layer._radius;\n\n    var outer = this._getLatLngOnCircle(center, radius);\n\n    this._centerMarker = this._createCenterMarker(center);\n    this._outerMarker = this._createOuterMarker(outer);\n    this._markers = [this._centerMarker, this._outerMarker];\n\n    this._createHintLine(this._centerMarker, this._outerMarker);\n\n    if (this.options.snappable) {\n      this._initSnappableMarkers();\n    }\n  },\n  _getLatLngOnCircle: function _getLatLngOnCircle(center, radius) {\n    var pointA = this._map.project(center);\n\n    var pointB = L.point(pointA.x + radius, pointA.y);\n    return this._map.unproject(pointB);\n  },\n  _resizeCircle: function _resizeCircle() {\n    this._syncHintLine();\n\n    this._syncCircleRadius();\n  },\n  _moveCircle: function _moveCircle(e) {\n    var center = e.latlng;\n\n    this._layer.setLatLng(center);\n\n    var radius = this._layer._radius;\n\n    var outer = this._getLatLngOnCircle(center, radius);\n\n    this._outerMarker.setLatLng(outer);\n\n    this._syncHintLine();\n\n    this._layer.fire('pm:centerplaced', {\n      layer: this._layer,\n      latlng: center\n    });\n  },\n  _onMarkerDragStart: function _onMarkerDragStart(e) {\n    this._layer.fire('pm:markerdragstart', {\n      markerEvent: e\n    });\n  },\n  _onMarkerDragEnd: function _onMarkerDragEnd(e) {\n    // fire edit event\n    this._fireEdit(); // fire markerdragend event\n\n\n    this._layer.fire('pm:markerdragend', {\n      markerEvent: e\n    });\n  },\n  _syncCircleRadius: function _syncCircleRadius() {\n    var A = this._centerMarker.getLatLng();\n\n    var B = this._outerMarker.getLatLng();\n\n    var distance = A.distanceTo(B);\n\n    this._layer.setRadius(distance);\n  },\n  _syncHintLine: function _syncHintLine() {\n    var A = this._centerMarker.getLatLng();\n\n    var B = this._outerMarker.getLatLng(); // set coords for hintline from marker to last vertex of drawin polyline\n\n\n    this._hintline.setLatLngs([A, B]);\n  },\n  _createHintLine: function _createHintLine(markerA, markerB) {\n    var A = markerA.getLatLng();\n    var B = markerB.getLatLng();\n    this._hintline = L.polyline([A, B], this.options.hintlineStyle);\n    this._hintline._pmTempLayer = true;\n\n    this._helperLayers.addLayer(this._hintline);\n  },\n  _createCenterMarker: function _createCenterMarker(latlng) {\n    var marker = this._createMarker(latlng);\n\n    L.DomUtil.addClass(marker._icon, 'leaflet-pm-draggable'); // TODO: switch back to move event once this leaflet issue is solved:\n    // https://github.com/Leaflet/Leaflet/issues/6492\n\n    marker.on('drag', this._moveCircle, this); // marker.on('contextmenu', this._removeMarker, this);\n\n    return marker;\n  },\n  _createOuterMarker: function _createOuterMarker(latlng) {\n    var marker = this._createMarker(latlng);\n\n    marker.on('move', this._resizeCircle, this);\n    return marker;\n  },\n  _createMarker: function _createMarker(latlng) {\n    var marker = new L.Marker(latlng, {\n      draggable: true,\n      icon: L.divIcon({\n        className: 'marker-icon'\n      })\n    });\n    marker._origLatLng = latlng;\n    marker._pmTempLayer = true;\n    marker.on('dragstart', this._onMarkerDragStart, this);\n    marker.on('dragend', this._onMarkerDragEnd, this);\n\n    this._helperLayers.addLayer(marker);\n\n    return marker;\n  },\n  _fireEdit: function _fireEdit() {\n    // fire edit event\n    this._layer.fire('pm:edit');\n\n    this._layerEdited = true;\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///85\n");

/***/ }),
/* 86 */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY3NzL2xheWVycy5jc3M/MzE4OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2Nzcy9sYXllcnMuY3NzXG4vLyBtb2R1bGUgaWQgPSA4NlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///86\n");

/***/ }),
/* 87 */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY3NzL2NvbnRyb2xzLmNzcz84MjNmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvY3NzL2NvbnRyb2xzLmNzc1xuLy8gbW9kdWxlIGlkID0gODdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///87\n");

/***/ })
/******/ ]);